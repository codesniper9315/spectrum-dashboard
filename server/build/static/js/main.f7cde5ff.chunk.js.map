{"version":3,"sources":["utils/formatDate.ts","hooks/useWindowSize.ts","serviceWorker.ts","views/home/HomeView/colors.ts","constants.ts","views/home/HomeView/SystemGantt.tsx","views/home/HomeView/SystemMenus.tsx","views/home/HomeView/BandMenus.tsx","views/home/HomeView/Spectrum.tsx","views/home/HomeView/Content.tsx","views/home/HomeView/Alert.tsx","views/home/HomeView/index.tsx","components/LoadingScreen.tsx","routes.tsx","App.tsx","index.tsx"],"names":["formatDate","value","delta","sDate","Math","floor","lDate","Date","d","getDate","dd","yyyy","getFullYear","mon","getMonth","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","colorSet","SYSTEMS_FILE","columns","id","name","INIT_Y_AXIS","y_start","y_stop","y_step","SystemGantt","scope","band","source","setSource","traces","setTraces","startDate","setStartDate","yAxis","setYAxis","rows","setRows","size","sheetList","req","XMLHttpRequest","open","responseType","onload","e","data","Uint8Array","response","workbook","xlsx","type","SheetNames","forEach","item","worksheetList","worksheet","sheet_to_json","Sheets","header","el","index","push","_","object","Object","keys","filter","Item_No","send","x_start","traceList","preItem","Chart_Type","includes","length","SDate","X_Axis_Start","Y_Axis_Step_Size","Y_Axis_Start","Y_Axis_Stop","dt","item_date","c_date","y_point","SFreq_GHz","abs","EFreq_GHz","isLegend","idx","System","trace","x","EDate","y","mode","line","color","showlegend","marker","shape","Grid","container","alignItems","justify","spacing","md","Typography","variant","component","layout","xaxis","title","titlefont","tickfont","range","dtick","showgrid","zerolinecolor","zerolinewidth","yaxis","legend","orientation","xanchor","traceorder","font","family","bordercolor","borderwidth","tracegroupgap","margin","l","b","r","t","pad","displayModeBar","TableContainer","style","maxHeight","Table","stickyHeader","aria-label","className","TableHead","TableRow","map","column","TableCell","key","align","toUpperCase","TableBody","row","hover","split","join","toFixed","useStyles","makeStyles","theme","root","textAlignLast","default","colors","grey","opacity","SystemMenus","system","onChange","systems","setSystems","classes","result","sdata","Select","event","target","clsx","defaultValue","fullWidth","MenuItem","disabled","BandMenus","status","onUids","bands","setBands","tuids","calWidth","start","end","getStyle","len","vertical","writingMode","backgroundColor","hex","minHeight","transform","textAlign","position","grid","content","right","top","block","display","flexDirection","justifyContent","border","cursor","scoped","red","service","fontSize","typography","pxToRem","remark","announce","marginTop","box","clicked","boxShadow","shadows","zIndex","Spectrum","uids","onContent","dataSource","setDataSource","setLength","page","setPage","totalPage","setTotalPage","XLSX","master","handleInit","pointS","pointF","values","Box","borderColor","blue","data-start","data-end","amount","Tooltip","arrow","onClick","handleClick","truncated","Pagination","count","ceil","defaultPage","Content","borderRadius","padding","Transition","forwardRef","props","ref","Slide","direction","marginBottom","Alert","matches","useMediaQuery","Dialog","TransitionComponent","keepMounted","CssBaseline","DialogTitle","DialogContent","DialogContentText","initialStatus","card","Header","HomeView","setStatus","setUids","setContent","handleChange","prevState","Container","maxWidth","Card","CardHeader","CardContent","palette","background","LoadingScreen","NProgress","done","LinearProgress","routes","exact","path","lazy","to","jss","create","plugins","jssPreset","history","createBrowserHistory","App","StylesProvider","dense","maxSnack","renderRoutes","fallback","route","i","Component","render","enableES5","ReactDOM","document","getElementById","URL","process","href","origin","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f7cde5ff.chunk.js","sourcesContent":["const formatDate = (value: number, delta: number) => {\r\n  if (!value) return '';\r\n\r\n  let sDate = Math.floor(value - 25569) * 86400;\r\n  let lDate = new Date(sDate * 1000);\r\n  let d = lDate.getDate();\r\n  let dd = d < 10 ? '0' + d : d;\r\n  let yyyy = lDate.getFullYear();\r\n  let mon = lDate.getMonth() + 1;\r\n  let mm = mon < 10 ? '0' + mon : mon;\r\n\r\n  return yyyy + delta + '-' + mm + '-' + dd;\r\n};\r\n\r\nexport default formatDate;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      });\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const colorSet = [\r\n  '#808000',\r\n  '#FFFF00',\r\n  '#00FF00',\r\n  '#00FFFF',\r\n  '#FF00FF',\r\n  '#0000FF',\r\n  '#FF0000',\r\n  '#000080',\r\n  '#008080',\r\n  '#008000',\r\n  '#800080',\r\n  '#800000',\r\n  '#808080',\r\n  '#FEC433',\r\n  '#C0C0C0'\r\n];\r\n","export const SERVER_URL = 'http://52.254.23.171:7000/api';\n\nexport const LOCAL_URL = 'http://127.0.0.1:7000/api';\n\nexport const BASE_URL =\n  process.env.NODE_ENV === 'production' ? SERVER_URL : LOCAL_URL;\n\nexport const SYSTEMS_FILE = 'static/excel/systems_dataset_v1.xlsx';\n\nexport const USER_FILE = 'static/excel/users_dataset_v1.xlsx';\n\nexport const DATA_FILE = 'static/excel/dataset_v1.xlsx';\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Plot from 'react-plotly.js';\r\nimport * as xlsx from 'xlsx';\r\nimport _ from 'underscore';\r\nimport {\r\n  Grid,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { colorSet } from './colors';\r\nimport useWindowSize from 'src/hooks/useWindowSize';\r\nimport formatDate from 'src/utils/formatDate';\r\nimport { SYSTEMS_FILE } from 'src/constants';\r\nimport { Chart } from 'src/types/system';\r\n\r\ninterface GanttChartProps {\r\n  className?: string;\r\n  scope: number;\r\n  band: string;\r\n}\r\n\r\nconst columns = [\r\n  { id: 'no', name: 'no' },\r\n  { id: 'System', name: 'system' },\r\n  { id: 'Chart_Type', name: 'band' },\r\n  { id: 'Link_Type', name: 'link type' },\r\n  { id: 'SFreq_GHz', name: 'min freq (ghz)' },\r\n  { id: 'EFreq_GHz', name: 'max freq (ghz)' },\r\n  { id: 'SDate', name: 'start date' },\r\n  { id: 'EDate', name: 'end date' }\r\n];\r\n\r\nconst INIT_Y_AXIS = {\r\n  y_start: 0,\r\n  y_stop: 0,\r\n  y_step: 0\r\n};\r\n\r\nconst SystemGantt: FC<GanttChartProps> = ({ scope, band }) => {\r\n  const [source, setSource] = useState([]);\r\n  const [traces, setTraces] = useState([]);\r\n  const [startDate, setStartDate] = useState(0);\r\n  const [yAxis, setYAxis] = useState(INIT_Y_AXIS);\r\n  const [rows, setRows] = useState([]);\r\n  const size = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    let sheetList: Object = {};\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n\r\n      workbook.SheetNames.forEach(item => {\r\n        let worksheetList = [];\r\n        let worksheet: any = xlsx.utils.sheet_to_json(workbook.Sheets[item], {\r\n          header: 1\r\n        });\r\n        sheetList[item] = [];\r\n\r\n        worksheet.forEach((el: any, index: number) => {\r\n          if (index > 0) worksheetList.push(_.object(worksheet[0], el));\r\n        });\r\n        sheetList[item] = worksheetList;\r\n      });\r\n\r\n      sheetList[Object.keys(sheetList)[0]].forEach(item => {\r\n        item['data'] = sheetList[Object.keys(sheetList)[1]].filter(\r\n          el => el.Item_No === scope\r\n        );\r\n      });\r\n      setSource(sheetList[Object.keys(sheetList)[0]]);\r\n    };\r\n\r\n    req.send();\r\n  }, [scope]);\r\n\r\n  useEffect(() => {\r\n    let x_start = 0,\r\n      y_start = 0,\r\n      y_step = 0,\r\n      y_stop = 0;\r\n    let traceList = [];\r\n\r\n    source.forEach((item: Chart) => {\r\n      let preItem = item;\r\n\r\n      if (item.Chart_Type === band) {\r\n        if (Object.keys(item).includes('data') && item.data.length > 0) {\r\n          x_start = item.data[0].SDate;\r\n        } else {\r\n          x_start = item.X_Axis_Start;\r\n        }\r\n\r\n        y_step = item.Y_Axis_Step_Size;\r\n        y_start = item.Y_Axis_Start;\r\n        y_stop = item.Y_Axis_Stop;\r\n\r\n        if (Object.keys(preItem).includes('data') && preItem.data.length > 0) {\r\n          item.data.forEach((dt, index) => {\r\n            let item_date = new Date(dt.SDate);\r\n            let c_date = new Date(x_start);\r\n            let y_point =\r\n              dt.SFreq_GHz + Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / 2;\r\n            let isLegend = true;\r\n\r\n            if (item_date < c_date) {\r\n              x_start = dt.SDate;\r\n            }\r\n\r\n            item.data.forEach((d, idx) => {\r\n              if (idx < index && d.System === dt.System) {\r\n                index = idx;\r\n                isLegend = false;\r\n              }\r\n            });\r\n\r\n            let trace = {\r\n              name: dt.System,\r\n              x: [formatDate(dt.SDate, 0), formatDate(dt.EDate, 0)],\r\n              y: [y_point, y_point],\r\n              mode: 'lines',\r\n              line: {\r\n                width:\r\n                  (Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / (y_step * 10)) * 340,\r\n                color: colorSet[index % colorSet.length]\r\n              },\r\n              showlegend: isLegend\r\n            };\r\n\r\n            traceList.push(trace);\r\n          });\r\n        } else {\r\n          let trace = {\r\n            name: '',\r\n            x: [x_start, x_start + 10],\r\n            y: [y_start, y_start],\r\n            mode: 'lines',\r\n            line: {\r\n              width: (Math.abs(y_start - y_stop) / (y_step * 10)) * 340,\r\n              color: 'transparent'\r\n            },\r\n            showlegend: false,\r\n            marker: {\r\n              size: 12,\r\n              shape: [\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew',\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew'\r\n              ]\r\n            }\r\n          };\r\n          traceList.push(trace);\r\n        }\r\n        setRows(item.data);\r\n      }\r\n    });\r\n    setTraces(traceList);\r\n    setStartDate(x_start);\r\n    setYAxis({ y_start, y_stop, y_step });\r\n  }, [band, source]);\r\n  \r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Typography variant=\"h6\" component=\"strong\">\r\n            Known LEO's supported by system\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Plot\r\n            data={traces}\r\n            layout={{\r\n              width: size.width * 0.75,\r\n              xaxis: {\r\n                title: '',\r\n                titlefont: {\r\n                  size: 10,\r\n                  color: '#212529'\r\n                },\r\n                tickfont: {\r\n                  size: 12\r\n                },\r\n                range: [formatDate(startDate, -1), formatDate(startDate, 7)],\r\n                dtick: 'M12',\r\n                showgrid: true,\r\n                zerolinecolor: '#969696',\r\n                zerolinewidth: 1\r\n              },\r\n              yaxis: {\r\n                title: 'Frequency (GHZ)',\r\n                titlefont: {\r\n                  size: 12,\r\n                  color: '#212529'\r\n                },\r\n                tickfont: {\r\n                  size: 12\r\n                },\r\n                range: [yAxis.y_start, yAxis.y_stop],\r\n                dtick: yAxis.y_step,\r\n                showgrid: true,\r\n                zerolinecolor: '#969696',\r\n                zerolinewidth: 1\r\n              },\r\n              legend: {\r\n                orientation: 'h',\r\n                xanchor: 'right',\r\n                x: 1,\r\n                traceorder: 'normal',\r\n                font: {\r\n                  family: 'sans-serif',\r\n                  size: 12,\r\n                  color: '#000'\r\n                },\r\n                bordercolor: '#212529',\r\n                borderwidth: 1,\r\n                tracegroupgap: 100\r\n              },\r\n              margin: {\r\n                l: 60,\r\n                b: 80,\r\n                r: 30,\r\n                t: 30,\r\n                pad: 5\r\n              },\r\n              showlegend: true\r\n            }}\r\n            config={{ displayModeBar: false }}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <TableContainer style={{ maxHeight: 440 }}>\r\n            <Table\r\n              stickyHeader\r\n              aria-label=\"sticky table\"\r\n              className=\"customized-gantt-chart-table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map(column => (\r\n                    <TableCell key={column.id} align=\"center\">\r\n                      {column.name.toUpperCase()}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row, index) => (\r\n                  <TableRow\r\n                    hover\r\n                    key={`${row.Chart_Type.split(' ').join('_')}_${index}`}\r\n                  >\r\n                    {columns.map((column, idx) => (\r\n                      <TableCell key={column.id} align=\"center\">\r\n                        {idx !== 0\r\n                          ? column.id === 'SFreq_GHz' ||\r\n                            column.id === 'EFreq_GHz'\r\n                            ? row[column.id].toFixed(7)\r\n                            : column.id === 'SDate' || column.id === 'EDate'\r\n                            ? formatDate(row[column.id], 0)\r\n                            : row[column.id]\r\n                          : index + 1}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nSystemGantt.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SystemGantt;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport { Select, MenuItem, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport { SYSTEMS_FILE } from 'src/constants';\r\n\r\ninterface SystemMenusProps {\r\n  className?: string;\r\n  system: string;\r\n  onChange: (name: string, value: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst SystemMenus: FC<SystemMenusProps> = ({ className, system, onChange }) => {\r\n  const [systems, setSystems] = useState<string[]>([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result: string[] = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const sdata = workbook.Sheets[workbook.SheetNames[1]];\r\n      const worksheet: any = xlsx.utils.sheet_to_json(sdata, { header: 1 });\r\n\r\n      worksheet.forEach((el: Array<any>, index: number) => {\r\n        index > 0 && !result.includes(el[0]) && result.push(el[0]);\r\n      });\r\n      setSystems(result);\r\n    };\r\n\r\n    req.send();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    systems.length > 0 && onChange('system', systems[0]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [systems]);\r\n\r\n  const handleChange = (event): void => {\r\n    const { name, value } = event.target;\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"system\"\r\n      value={system}\r\n      onChange={handleChange}\r\n      className={clsx(classes.root, className)}\r\n      defaultValue=\"none\"\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select System\r\n      </MenuItem>\r\n      {systems.map((item: string) => (\r\n        <MenuItem value={item} key={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nSystemMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  system: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default SystemMenus;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport { Select, MenuItem, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport { SYSTEMS_FILE } from 'src/constants';\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\ninterface BandMenusProps {\r\n  className?: string;\r\n  status: Status;\r\n  onUids: (param: number[]) => void;\r\n  onChange: (name: string, value: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst BandMenus: FC<BandMenusProps> = ({\r\n  className,\r\n  status,\r\n  onUids,\r\n  onChange\r\n}) => {\r\n  const [bands, setBands] = useState<string[]>([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result: string[] = [];\r\n    let tuids: number[] = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = (e: ProgressEvent<EventTarget>) => {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const sdata = workbook.Sheets[workbook.SheetNames[1]];\r\n      const worksheet: any = xlsx.utils.sheet_to_json(sdata, { header: 1 });\r\n\r\n      worksheet.forEach((el: any) => {\r\n        if (el[0] === status.system) {\r\n          el[2] && tuids.push(el[2]);\r\n          !result.includes(el[1]) && result.push(el[1]);\r\n        }\r\n      });\r\n      setBands(result);\r\n      onUids(tuids);\r\n    };\r\n\r\n    req.send();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [status.system]);\r\n\r\n  useEffect(() => {\r\n    bands.length > 0 && onChange('band', bands[0]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bands]);\r\n\r\n  const handleChange = (event): void => {\r\n    const { name, value } = event.target;\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"band\"\r\n      value={status.band}\r\n      onChange={handleChange}\r\n      className={clsx(classes.root, className)}\r\n      defaultValue=\"none\"\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select Frequency Band\r\n      </MenuItem>\r\n      {bands.map(item => (\r\n        <MenuItem value={item} key={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nBandMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  onUids: PropTypes.func,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default BandMenus;\r\n","import React, { useState, useEffect, FC, ChangeEvent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as XLSX from 'xlsx';\r\nimport _ from 'underscore';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  colors,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { Band } from 'src/types/band';\r\nimport { DATA_FILE } from 'src/constants';\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\ninterface SpectrumProps {\r\n  className?: string;\r\n  uids: number[];\r\n  status: Status;\r\n  onContent: (param: string) => void;\r\n  onChange: (name: string, value: string | number) => void;\r\n}\r\n\r\nconst calWidth = (start: number, end: number, length: number) => {\r\n  const value = (Math.abs(start - end) / length) * 95;\r\n  return { width: value + '%' };\r\n};\r\n\r\nconst getKey = (value: string): string => {\r\n  return value.split(' ').join('_');\r\n};\r\n\r\nconst getStyle = (dt: Band, length: number) => {\r\n  const len = 40 / length + 'vh';\r\n  let value = {};\r\n\r\n  if (dt.vertical) {\r\n    value = {\r\n      writingMode: 'vertical-rl',\r\n      backgroundColor: dt.hex,\r\n      minHeight: len,\r\n      maxHeight: len,\r\n      transform: 'rotate(-180deg)'\r\n    };\r\n  } else {\r\n    value = {\r\n      backgroundColor: dt.hex,\r\n      minHeight: len,\r\n      maxHeight: len,\r\n      textAlign: 'center'\r\n    };\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    position: 'relative'\r\n  },\r\n  grid: {\r\n    minHeight: theme.spacing(2),\r\n    '&:before': {\r\n      content: 'attr(data-start)'\r\n    },\r\n    '&:after': {\r\n      content: 'attr(data-end)',\r\n      position: 'absolute',\r\n      right: theme.spacing(3),\r\n      top: 0\r\n    }\r\n  },\r\n  block: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    border: '1px solid #000',\r\n    cursor: 'pointer'\r\n  },\r\n  scoped: {\r\n    border: `3px solid ${colors.red[700]}`\r\n  },\r\n  service: {\r\n    fontSize: theme.typography.pxToRem(12)\r\n  },\r\n  remark: {\r\n    fontSize: theme.typography.pxToRem(10)\r\n  },\r\n  announce: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  box: {\r\n    width: '100%',\r\n    minHeight: theme.spacing(30),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  clicked: {\r\n    boxShadow: theme.shadows[15],\r\n    border: `5px solid ${colors.red[700]}`,\r\n    zIndex: 1000\r\n  }\r\n}));\r\n\r\nconst Spectrum: FC<SpectrumProps> = ({\r\n  className,\r\n  uids,\r\n  status,\r\n  onChange,\r\n  onContent\r\n}) => {\r\n  const [source, setSource] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const classes = useStyles();\r\n  const amount = 8;\r\n\r\n  useEffect(() => {\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', DATA_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = (e: ProgressEvent<EventTarget>) => {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n      const worksheet: any = XLSX.utils.sheet_to_json(\r\n        workbook.Sheets[status.band],\r\n        {\r\n          header: 1\r\n        }\r\n      );\r\n      let sheetList = [];\r\n      let result = [];\r\n\r\n      if (Object.keys(worksheet).length > 2) {\r\n        worksheet.forEach((el: any, idx: number) => {\r\n          if (idx > 0) sheetList.push(_.object(worksheet[0], el));\r\n        });\r\n\r\n        sheetList.forEach((item: Band) => {\r\n          const data = sheetList.filter(el => item.master === el.master);\r\n          const count = _.filter(result, el => item.master === el.master);\r\n\r\n          if (count.length < 1 && item.master) {\r\n            result.push({\r\n              master: item.master,\r\n              start: item.start,\r\n              end: item.end,\r\n              data: data,\r\n              vertical: item.vertical\r\n            });\r\n          }\r\n        });\r\n        setSource(result);\r\n        setTotalPage(Object.keys(result).length / amount);\r\n        onContent(result[0].data[0].content);\r\n      } else {\r\n        handleInit();\r\n      }\r\n    };\r\n\r\n    req.send();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [status.band]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(source).length > 0) {\r\n      const pointS = source[(page - 1) * amount];\r\n      const pointF =\r\n        page < totalPage\r\n          ? source[page * amount - 1]\r\n          : source[totalPage * amount - 1];\r\n\r\n      if (pointF && Object.keys(pointF).includes('end')) {\r\n        const start = pointS.start ? pointS.start : 0;\r\n        const end = pointF.end ? pointF.end : 0;\r\n        const len = Math.abs(start - end);\r\n\r\n        let data = Object.values(source).filter(\r\n          (item: Band) =>\r\n            item.master > (page - 1) * amount && item.master <= page * amount\r\n        );\r\n        setLength(len);\r\n        setDataSource(data);\r\n      }\r\n    } else {\r\n      setLength(0);\r\n      setDataSource([]);\r\n    }\r\n  }, [page, source, totalPage]);\r\n\r\n  const handleInit = (): void => {\r\n    setSource([]);\r\n    setTotalPage(0);\r\n    setPage(1);\r\n    onChange('scope', null);\r\n    onContent('');\r\n  };\r\n\r\n  const handleClick = (value: number, content: string): void => {\r\n    onChange('scope', value);\r\n    onContent(content);\r\n  };\r\n\r\n  const handleChangePage = (e: ChangeEvent, page: number): void => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ position: 'relative' }}\r\n        className={clsx(className, classes.root)}\r\n      >\r\n        {Object.keys(dataSource).length === 0 && (\r\n          <Box\r\n            border={1}\r\n            borderColor={colors.blue[200]}\r\n            className={classes.box}\r\n            textAlign=\"center\"\r\n          >\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              No Band Data Entered Yet.\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        {Object.keys(dataSource).length > 0 &&\r\n          Object.values(dataSource).map((el, idx: number) => (\r\n            <Grid\r\n              item\r\n              key={el.master}\r\n              className={classes.grid}\r\n              style={calWidth(el.start, el.end, length)}\r\n              data-start={el.start}\r\n              data-end={idx === amount - 1 ? el.end : ''}\r\n            >\r\n              <Grid container alignItems=\"center\" justify=\"center\">\r\n                {el.data.map((dt: Band, index: number) => (\r\n                  <Tooltip\r\n                    key={`${getKey(dt.service)}-${idx}-${index}`}\r\n                    title={dt.service}\r\n                    arrow\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      md={12}\r\n                      onClick={() => handleClick(dt.Item_No, dt.content)}\r\n                      style={getStyle(dt, el.data.length)}\r\n                      className={clsx(\r\n                        classes.block,\r\n                        uids.includes(dt.Item_No) && classes.scoped,\r\n                        uids.includes(dt.Item_No) &&\r\n                          dt.Item_No === status.scope &&\r\n                          classes.clicked\r\n                      )}\r\n                    >\r\n                      {!dt.truncated ? (\r\n                        <>\r\n                          <Typography className={classes.service}>\r\n                            {dt.service}\r\n                          </Typography>\r\n                          {dt.remark !== '' && (\r\n                            <Typography className={classes.remark}>\r\n                              {dt.remark}\r\n                            </Typography>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <Typography className={classes.service}>\r\n                          {dt.truncated}\r\n                        </Typography>\r\n                      )}\r\n                    </Grid>\r\n                  </Tooltip>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        className={classes.announce}\r\n      >\r\n        <Grid item md={9}>\r\n          <Typography variant=\"body1\">\r\n            This chart will only work with 1024 x 768. We recommend full screen\r\n            mode.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item md={12}>\r\n              <Pagination\r\n                count={Math.ceil(totalPage)}\r\n                page={page}\r\n                defaultPage={1}\r\n                variant=\"outlined\"\r\n                shape=\"rounded\"\r\n                onChange={handleChangePage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nSpectrum.propTypes = {\r\n  className: PropTypes.string,\r\n  uids: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  onContent: PropTypes.func\r\n};\r\n\r\nexport default Spectrum;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Grid, Typography, Box, makeStyles, Theme } from '@material-ui/core';\r\ninterface ContentProps {\r\n  className?: string;\r\n  content: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst Content: FC<ContentProps> = ({ className, content }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={clsx(className, classes.root)}\r\n    >\r\n      <Grid item md={4}>\r\n        <Typography variant=\"h6\" component=\"strong\">\r\n          Regulatory Notes\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={8} />\r\n      <Grid item md={12}>\r\n        <Box borderColor=\"primary.main\" border={2} borderRadius={5} padding={2}>\r\n          <Typography variant=\"body2\">{content}</Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  className: PropTypes.string,\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Content;\r\n","import React, { forwardRef, ReactElement, Ref, FC } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n  useMediaQuery,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & { children?: ReactElement<any, any> },\r\n  ref: Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  content: {\r\n    marginBottom: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst Alert: FC = () => {\r\n  const matches = useMediaQuery('(max-width: 1000px)');\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog open={matches} TransitionComponent={Transition} keepMounted>\r\n      <CssBaseline />\r\n      <DialogTitle>Screen Resolution Alert</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText className={classes.content}>\r\n          Your screen resolution is under 1024 x 768. We can't confirm your\r\n          resolution of this Spectrum Chart. Please Check your screen mode\r\n          again.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, FC } from 'react';\nimport {\n  Grid,\n  Container,\n  CssBaseline,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  makeStyles,\n  Theme,\n  colors\n} from '@material-ui/core';\nimport SystemGantt from './SystemGantt';\nimport UserGantt from './UserGantt';\nimport SystemMenus from './SystemMenus';\nimport BandMenus from './BandMenus';\nimport Spectrum from './Spectrum';\nimport Content from './Content';\nimport Alert from './Alert';\n\ninterface Status {\n  system: string;\n  band: string;\n  scope: number | null;\n}\n\nconst initialStatus = {\n  system: 'none',\n  band: 'none',\n  scope: null\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: theme.spacing(5)\n  },\n  card: {\n    padding: theme.spacing(2)\n  },\n  content: {\n    backgroundColor: colors.grey[50]\n  }\n}));\n\nconst Header: FC = () => {\n  return (\n    <Typography component=\"h1\" variant=\"h5\" color=\"textSecondary\">\n      Spectrum Dashboard\n    </Typography>\n  );\n};\n\nconst HomeView: FC = () => {\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [uids, setUids] = useState<number[]>([]);\n  const [content, setContent] = useState('');\n  const classes = useStyles();\n\n  const handleChange = (name: string, value: string): void => {\n    setStatus(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleContent = (value: string): void => {\n    setContent(value);\n  };\n\n  const handleUids = (value: number[]) => {\n    setUids(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <CssBaseline />\n        <Card className={classes.card}>\n          <CardHeader title={<Header />} />\n          <CardContent>\n            <Grid container alignItems=\"center\" spacing={3}>\n              <Grid item md={3}>\n                <SystemMenus system={status.system} onChange={handleChange} />\n              </Grid>\n              <Grid item md={3}>\n                <BandMenus\n                  status={status}\n                  onChange={handleChange}\n                  onUids={handleUids}\n                />\n              </Grid>\n              <Grid item md={12}>\n                <Spectrum\n                  uids={uids}\n                  status={status}\n                  onChange={handleChange}\n                  onContent={handleContent}\n                />\n              </Grid>\n              <Grid item md={12} className={classes.content}>\n                {content && content !== '' && <Content content={content} />}\n              </Grid>\n              <Grid item md={12}>\n                <SystemGantt scope={status.scope} band={status.band} />\n              </Grid>\n              {/* <Grid item md={12}>\n                <UserGantt scope={status.scope} band={status.band} />\n              </Grid> */}\n            </Grid>\n          </CardContent>\n        </Card>\n      </Container>\n      <Alert />\n    </div>\n  );\n};\n\nexport default HomeView;\n","import React, { useEffect } from 'react';\nimport type { FC } from 'react';\nimport NProgress from 'nprogress';\nimport {\n  Box,\n  LinearProgress,\n  makeStyles,\n  Theme,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    justifyContent: 'center',\n    minHeight: '100%',\n    padding: theme.spacing(3)\n  }\n}));\n\nconst LoadingScreen: FC = () => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    NProgress.start();\n\n    return () => {\n      NProgress.done();\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Box width={400}>\n        <LinearProgress />\n      </Box>\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import React, { Suspense, Fragment, lazy } from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport HomeView from 'src/views/home/HomeView';\nimport LoadingScreen from 'src/components/LoadingScreen';\n\ntype Routes = {\n  exact?: boolean;\n  path?: string | string[];\n  component?: any;\n  routes?: Routes;\n}[];\n\nexport const renderRoutes = (routes: Routes = []): JSX.Element => (\n  <Suspense fallback={<LoadingScreen />}>\n    <Switch>\n      {routes.map((route, i) => {\n        const Component = route.component;\n\n        return (\n          <Route\n            key={i}\n            path={route.path}\n            exact={route.exact}\n            render={props => (\n              <Fragment>\n                {route.routes ? (\n                  renderRoutes(route.routes)\n                ) : (\n                  <Component {...props} />\n                )}\n              </Fragment>\n            )}\n          />\n        );\n      })}\n    </Switch>\n  </Suspense>\n);\n\nconst routes: Routes = [\n  {\n    exact: true,\n    path: '/404',\n    component: lazy(() => import('src/views/errors/NotFoundView'))\n  },\n  {\n    exact: true,\n    path: '/maintenance',\n    component: lazy(() => import('src/views/maintenance/MaintenanceView'))\n  },\n  {\n    path: '*',\n    routes: [\n      {\n        exact: true,\n        path: '/',\n        component: HomeView\n      },\n      {\n        component: () => <Redirect to=\"/404\" />\n      }\n    ]\n  }\n];\n\nexport default routes;\n","import React, { FC } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { create } from 'jss';\nimport { SnackbarProvider } from 'notistack';\nimport { jssPreset, StylesProvider } from '@material-ui/core';\nimport routes, { renderRoutes } from 'src/routes';\n\nconst jss = create({ plugins: [...jssPreset().plugins] });\nconst history = createBrowserHistory();\n\nconst App: FC = () => {\n  return (\n    <StylesProvider jss={jss}>\n      <SnackbarProvider dense maxSnack={3}>\n        <Router history={history}>{renderRoutes(routes)}</Router>\n      </SnackbarProvider>\n    </StylesProvider>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport 'nprogress/nprogress.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { enableES5 } from 'immer';\nimport * as serviceWorker from 'src/serviceWorker';\nimport App from 'src/App';\n\nenableES5();\n\nReactDOM.render(\n  <HelmetProvider>\n    <App />\n  </HelmetProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}