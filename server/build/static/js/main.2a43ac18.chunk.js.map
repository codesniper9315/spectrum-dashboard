{"version":3,"sources":["hooks/useWindowSize.ts","utils/formatDate.ts","serviceWorker.ts","components/TabPanel.tsx","pages/home/Commercial/colors.ts","constants.ts","pages/home/Commercial/SystemGantt/GanttChart.tsx","pages/home/Commercial/SystemGantt/SystemTable.tsx","pages/home/Commercial/SystemGantt/index.tsx","pages/home/Commercial/UserGantt/UserTable.tsx","pages/home/Commercial/UserGantt/GanttChart.tsx","pages/home/Commercial/UserGantt/index.tsx","pages/home/Commercial/SystemMenus.tsx","pages/home/Commercial/BandMenus.tsx","pages/home/Commercial/Spectrum.tsx","pages/home/Commercial/Content.tsx","pages/home/Commercial/Alert.tsx","pages/home/Commercial/index.tsx","pages/home/Lunar/colors.ts","pages/home/Lunar/SystemGantt/GanttChart.tsx","pages/home/Lunar/SystemGantt/SystemTable.tsx","pages/home/Lunar/SystemGantt/index.tsx","pages/home/Lunar/LinkMenus.tsx","pages/home/Lunar/BandMenus.tsx","pages/home/Lunar/Alert.tsx","pages/home/Lunar/index.tsx","pages/home/index.tsx","components/LoadingScreen.tsx","routes.tsx","App.tsx","index.tsx"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","formatDate","value","delta","sDate","Math","floor","lDate","Date","d","getDate","dd","yyyy","getFullYear","mon","getMonth","getMiddleDate","start","end","tDate","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","TabPanel","props","children","index","other","role","hidden","Box","p","colorSet","SYSTEMS_FILE1","SYSTEMS_FILE2","GanttChart","traces","startDate","axis","size","data","layout","xaxis","title","titlefont","color","tickfont","range","dtick","showgrid","zerolinecolor","zerolinewidth","yaxis","stop","step","legend","orientation","xanchor","traceorder","font","family","bordercolor","borderwidth","tracegroupgap","margin","l","b","r","t","pad","showlegend","displayModeBar","SystemTable","rows","columns","TableContainer","style","maxHeight","Table","stickyHeader","aria-label","className","TableHead","TableRow","map","column","TableCell","key","id","align","name","toUpperCase","TableBody","row","hover","Chart_Type","split","join","idx","toFixed","renderColumn","INIT_AXIS","useStyles","makeStyles","theme","root","appBar","boxShadow","shadows","marginBottom","spacing","SystemGantt","status","tab","setTab","source","setSource","setTraces","setStartDate","setAxis","setRows","classes","sheetList","req","XMLHttpRequest","open","responseType","onload","e","Uint8Array","response","workbook","xlsx","type","SheetNames","forEach","item","worksheetList","worksheet","sheet_to_json","Sheets","header","el","push","_","object","Object","keys","filter","band","Item_No","scope","send","x_start","y_start","y_step","y_stop","traceList","preItem","includes","length","dt","System","indexOf","system","splice","SDate","X_Axis_Start","Y_Axis_Step_Size","Y_Axis_Start","Y_Axis_Stop","item_date","c_date","y_point","SFreq_GHz","abs","EFreq_GHz","isLegend","trace","x","EDate","y","mode","line","marker","shape","Grid","container","alignItems","justify","md","Typography","variant","component","Card","CardContent","AppBar","position","Tabs","onChange","event","indicatorColor","textColor","Tab","label","UserTable","INIT_Y_AXIS","UserGantt","result","User","textAlignLast","default","colors","grey","opacity","SystemMenus","systems","setSystems","sdata","Select","target","clsx","defaultValue","fullWidth","MenuItem","disabled","BandMenus","onUids","bands","setBands","tuids","calWidth","getStyle","len","vertical","writingMode","backgroundColor","hex","minHeight","transform","textAlign","grid","content","right","top","block","display","flexDirection","justifyContent","border","cursor","scoped","red","service","fontSize","typography","pxToRem","remark","announce","marginTop","box","clicked","zIndex","Spectrum","uids","onContent","dataSource","setDataSource","setLength","page","setPage","totalPage","setTotalPage","master","handleInit","pointS","pointF","values","borderColor","blue","data-start","data-end","amount","Tooltip","arrow","onClick","handleClick","truncated","Pagination","count","ceil","defaultPage","Content","borderRadius","padding","Transition","forwardRef","ref","Slide","direction","Alert","matches","useMediaQuery","Dialog","TransitionComponent","keepMounted","CssBaseline","DialogTitle","DialogContent","DialogContentText","initialStatus","Commercial","setStatus","setUids","setContent","handleChange","prevState","annots","annotations","StyledTableRow","withStyles","limit","results","setResults","slice","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","setAnnots","annotList","rowData","Link_Type","link","Id","annot","text","showarrow","isValid","every","LinkMenus","links","setLinks","shift","Lunar","tabs","card","paddingTop","paddingLeft","paddingRight","cardContent","footer","HomeView","currentTab","setCurrentTab","Container","maxWidth","CardHeader","py","CardActions","Link","href","palette","background","LoadingScreen","NProgress","done","LinearProgress","routes","exact","path","lazy","to","jss","create","plugins","jssPreset","history","createBrowserHistory","App","StylesProvider","dense","maxSnack","renderRoutes","fallback","route","i","Component","render","enableES5","ReactDOM","document","getElementById","URL","process","origin","fetch","headers","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mKAwBeA,IAtBO,WAAO,IAAD,EACUC,mBAAS,CAC3CC,WAAOC,EACPC,YAAQD,IAHgB,mBACnBE,EADmB,KACPC,EADO,KAmB1B,OAbAC,qBAAU,WACR,IAAMC,EAAe,WACnBF,EAAc,CACZJ,MAAOO,OAAOC,WACdN,OAAQK,OAAOE,eAMnB,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IAEIH,I,gCCrBT,oEAAO,IAAMS,EAAa,SAACC,EAAeC,GACxC,IAAKD,EAAO,MAAO,GAEnB,IAAIE,EAAoC,MAA5BC,KAAKC,MAAMJ,EAAQ,OAC3BK,EAAQ,IAAIC,KAAa,IAARJ,GACjBK,EAAIF,EAAMG,UACVC,EAAKF,EAAI,GAAK,IAAMA,EAAIA,EACxBG,EAAOL,EAAMM,cACbC,EAAMP,EAAMQ,WAAa,EAG7B,OAAOH,EAAOT,EAAQ,KAFbW,EAAM,GAAK,IAAMA,EAAMA,GAEC,IAAMH,GAG5BK,EAAgB,SAACC,EAAeC,GAC3C,IAAKD,EAAO,MAAO,GAEnB,IAAIb,EAAoC,MAA5BC,KAAKC,MAAMW,EAAQ,OAC3BE,EAAkC,MAA1Bd,KAAKC,MAAMY,EAAM,OACzBX,EAAQ,IAAIC,MAAOJ,EAAQe,GAAS,EAAK,KACzCV,EAAIF,EAAMG,UACVC,EAAKF,EAAI,GAAK,IAAMA,EAAIA,EACxBG,EAAOL,EAAMM,cACbC,EAAMP,EAAMQ,WAAa,EAG7B,OAAOH,EAAO,KAFLE,EAAM,GAAK,IAAMA,EAAMA,GAEP,IAAMH,I,6NCd3BS,EAAcC,QACW,cAA7BzB,OAAO0B,SAASC,UAEe,UAA7B3B,OAAO0B,SAASC,UAEhB3B,OAAO0B,SAASC,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,4RChFlDC,EAdE,SAACC,GAA0B,IAClCC,EAAqCD,EAArCC,SAAU7C,EAA2B4C,EAA3B5C,MAAO8C,EAAoBF,EAApBE,MAAUC,EADM,YACIH,EADJ,8BAGzC,OACE,uCACEI,KAAK,WACLC,OAAQjD,IAAU8C,GACdC,GAEH/C,IAAU8C,GAAS,kBAACI,EAAA,EAAD,CAAKC,EAAG,GAAIN,KCnBzBO,EAAW,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,QCRWC,EAAgB,uCAEhBC,EAAgB,6C,2BC+EdC,EArE0B,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACvDC,EAAO1E,cAEb,OACE,kBAAC,IAAD,CACE2E,KAAMJ,EACNK,OAAQ,CACN1E,MAAoB,GAAbwE,EAAKxE,MACZ2E,MAAO,CACLC,MAAO,GACPC,UAAW,CACTL,KAAM,GACNM,MAAO,WAETC,SAAU,CACRP,KAAM,IAERQ,MAAO,CAACpE,YAAW0D,GAAY,GAAI1D,YAAW0D,EAAW,IACzDW,MAAO,MACPC,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBC,MAAO,CACLT,MAAO,kBACPC,UAAW,CACTL,KAAM,GACNM,MAAO,WAETC,SAAU,CACRP,KAAM,IAERQ,MAAO,CAACT,EAAK3C,MAAO2C,EAAKe,MACzBL,MAAOV,EAAKgB,KACZL,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBI,OAAQ,CACNC,YAAa,IACbC,QAAS,OACTC,WAAY,SACZC,KAAM,CACJC,OAAQ,aACRrB,KAAM,GACNM,MAAO,QAETgB,YAAa,UACbC,YAAa,EACbC,cAAe,KAEjBC,OAAQ,CACNC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPC,YAAY,GAEdjE,OAAQ,CAAEkE,gBAAgB,M,0DCJjBC,GAzD2B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAkBjD,OACE,kBAACC,EAAA,EAAD,CAAgBC,MAAO,CAAEC,UAAW,MAClC,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZC,aAAW,eACXC,UAAU,gCAEV,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,kBAACC,GAAA,EAAD,CAAWC,IAAKF,EAAOG,GAAIC,MAAM,UAC9BJ,EAAOK,KAAKC,oBAKrB,kBAACC,GAAA,EAAD,KACGnB,EAAKW,KAAI,SAACS,EAAKnE,GAAN,OACR,kBAACyD,GAAA,EAAD,CACEW,OAAK,EACLP,IAAG,UAAKM,EAAIE,WAAWC,MAAM,KAAKC,KAAK,KAApC,YAA4CvE,IAE9CgD,EAAQU,KAAI,SAACC,EAAQa,GAAT,OACX,kBAACZ,GAAA,EAAD,CAAWC,IAAKF,EAAOG,GAAIC,MAAM,UAxC1B,SAACC,EAAcG,EAAUK,EAAaxE,GACzD,GAAY,IAARwE,EAYF,OAAOxE,EAAQ,EAXf,OAAQgE,GACN,IAAK,YACL,IAAK,YACH,OAAOG,EAAIH,GAAMS,QAAQ,GAC3B,IAAK,QACL,IAAK,QACH,OAAOxH,YAAWkH,EAAIH,GAAO,GAC/B,QACE,OAAOG,EAAIH,IA+BFU,CAAaf,EAAOG,GAAIK,EAAKK,EAAKxE,eCnB/CgD,GAAU,CACd,CAAEc,GAAI,KAAME,KAAM,MAClB,CAAEF,GAAI,SAAUE,KAAM,UACtB,CAAEF,GAAI,aAAcE,KAAM,QAC1B,CAAEF,GAAI,YAAaE,KAAM,aACzB,CAAEF,GAAI,YAAaE,KAAM,kBACzB,CAAEF,GAAI,YAAaE,KAAM,kBACzB,CAAEF,GAAI,QAASE,KAAM,cACrB,CAAEF,GAAI,QAASE,KAAM,aAGjBW,GAAkB,CACtB1G,MAAO,EACP0D,KAAM,EACNC,KAAM,GAGFgD,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNC,OAAQ,CACNC,UAAWH,EAAMI,QAAQ,IAE3BjE,MAAO,CACLkE,aAAcL,EAAMM,QAAQ,QAsMjBC,GAlM2B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EAClClJ,mBAAS,GADyB,mBACjDmJ,EADiD,KAC5CC,EAD4C,OAE5BpJ,mBAAS,IAFmB,mBAEjDqJ,EAFiD,KAEzCC,EAFyC,OAG5BtJ,mBAAS,IAHmB,mBAGjDsE,EAHiD,KAGzCiF,EAHyC,OAItBvJ,mBAAS,GAJa,mBAIjDuE,EAJiD,KAItCiF,EAJsC,OAKhCxJ,mBAASuI,IALuB,mBAKjD/D,EALiD,KAK3CiF,EAL2C,OAMhCzJ,mBAAS,IANuB,mBAMjD2G,EANiD,KAM3C+C,EAN2C,KAOlDC,EAAUnB,KAEhBlI,qBAAU,WACR,IAAIsJ,EAAoB,GACpBC,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO5F,GAAe,GAC/B0F,EAAIG,aAAe,cAEnBH,EAAII,OAAS,SAASC,GACpB,IAAMxF,EAAO,IAAIyF,WAAWN,EAAIO,UAC1BC,EAAWC,OAAU5F,EAAM,CAAE6F,KAAM,UAEzCF,EAASG,WAAWC,SAAQ,SAAAC,GAC1B,IAAIC,EAAgB,GAChBC,EAAiBN,QAAWO,cAAcR,EAASS,OAAOJ,GAAO,CACnEK,OAAQ,IAEVnB,EAAUc,GAAQ,GAElBE,EAAUH,SAAQ,SAACO,EAASpH,GACtBA,EAAQ,GAAG+G,EAAcM,KAAKC,IAAEC,OAAOP,EAAU,GAAII,OAE3DpB,EAAUc,GAAQC,KAGpBf,EAAUwB,OAAOC,KAAKzB,GAAW,IAAIa,SAAQ,SAAAC,GAC3CA,EAAI,KAAWd,EAAUwB,OAAOC,KAAKzB,GAAW,IAAI0B,QAClD,SAAAN,GAAE,OAAIA,EAAG/C,aAAeiB,EAAOqC,MAAQP,EAAGQ,UAAYtC,EAAOuC,YAGjEnC,EAAUM,EAAUwB,OAAOC,KAAKzB,GAAW,MAG7CC,EAAI6B,SACH,CAACxC,EAAOuC,MAAOvC,EAAOqC,OAEzBjL,qBAAU,WACR,IAAIqL,EAAU,EACZC,EAAU,EACVC,EAAS,EACTC,EAAS,EACPC,EAAY,GAEhB1C,EAAOoB,SAAQ,SAACC,GACd,IAAIsB,EAAUtB,EAEd,GAAIA,EAAKzC,aAAeiB,EAAOqC,KAAM,CACnC,GAAIH,OAAOC,KAAKX,GAAMuB,SAAS,SAAWvB,EAAKhG,KAAKwH,OAAS,EAAG,CAC9D,IAAI9D,EAAMsC,EAAKhG,KAAK4C,KAAI,SAAA6E,GAAE,OAAIA,EAAGC,UAAQC,QAAQnD,EAAOoD,QACxD5B,EAAKhG,KAAK6H,OACR7B,EAAKhG,KAAKwH,OAAS,EACnB,EACAxB,EAAKhG,KAAK6H,OAAOnE,EAAK,GAAG,IAE3BuD,EAAUjB,EAAKhG,KAAK,GAAG8H,WAEvBb,EAAUjB,EAAK+B,aAOjB,GAJAZ,EAASnB,EAAKgC,iBACdd,EAAUlB,EAAKiC,aACfb,EAASpB,EAAKkC,YAEVxB,OAAOC,KAAKW,GAASC,SAAS,SAAWD,EAAQtH,KAAKwH,OAAS,EACjExB,EAAKhG,KAAK+F,SAAQ,SAAC0B,EAAIvI,GACrB,IAAIiJ,EAAY,IAAIzL,KAAK+K,EAAGK,OACxBM,EAAS,IAAI1L,KAAKuK,GAClBoB,EACFZ,EAAGa,UAAY/L,KAAKgM,IAAId,EAAGa,UAAYb,EAAGe,WAAa,EACrDC,GAAW,EAEXN,EAAYC,IACdnB,EAAUQ,EAAGK,OAGf9B,EAAKhG,KAAK+F,SAAQ,SAACpJ,EAAG+G,GAChBA,EAAMxE,GAASvC,EAAE+K,SAAWD,EAAGC,SACjCxI,EAAQwE,EACR+E,GAAW,MAIf,IAAIC,EAAQ,CACVxF,KAAMuE,EAAGC,OACTiB,EAAG,CAACxM,YAAWsL,EAAGK,MAAO,GAAI3L,YAAWsL,EAAGmB,MAAO,IAClDC,EAAG,CAACR,EAASA,GACbS,KAAM,QACNC,KAAM,CACJxN,MACGgB,KAAKgM,IAAId,EAAGa,UAAYb,EAAGe,YAAuB,GAATrB,GAAgB,IAC5D9G,MAAOb,EAASN,EAAQM,EAASgI,SAEnC1F,WAAY2G,GAGdpB,EAAUd,KAAKmC,UAEZ,CACL,IAAIA,EAAQ,CACVxF,KAAM,GACNyF,EAAG,CAAC1B,EAASA,EAAU,IACvB4B,EAAG,CAAC3B,EAASA,GACb4B,KAAM,QACNC,KAAM,CACJxN,MAAQgB,KAAKgM,IAAIrB,EAAUE,IAAoB,GAATD,GAAgB,IACtD9G,MAAO,eAETyB,YAAY,EACZkH,OAAQ,CACNjJ,KAAM,GACNkJ,MAAO,CACL,UACA,eACA,UACA,UACA,eACA,aAIN5B,EAAUd,KAAKmC,GAEjB1D,EAAQgB,EAAKhG,UAGjB6E,EAAUwC,GACVvC,EAAamC,GACblC,EAAQ,CAAE5H,MAAO+J,EAASrG,KAAMuG,EAAQtG,KAAMqG,MAC7C,CAAC3C,EAAOqC,KAAMrC,EAAOoD,OAAQjD,IAMhC,OACE,oCACE,kBAACuE,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAAS/E,QAAS,GAC5D,kBAAC4E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GAAI7G,UAAWwC,EAAQ9E,OACpC,kBAACoJ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,UAAnC,mDAKJ,kBAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAAS/E,QAAS,GAC5D,kBAAC4E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,SAAS,SACTxJ,MAAM,UACNoC,UAAWwC,EAAQf,QAEnB,kBAAC4F,EAAA,EAAD,CACE1N,MAAOqI,EACPsF,SAxBK,SAACC,EAAwB5N,GAC5CsI,EAAOtI,IAwBO6N,eAAe,UACfC,UAAU,UACV1H,aAAW,uBAEX,kBAAC2H,EAAA,EAAD,CAAKC,MAAM,eACX,kBAACD,EAAA,EAAD,CAAKC,MAAM,gBAGf,kBAAC,IAAD,CAAgBlL,MAAOuF,GACrB,kBAAC,EAAD,CAAUrI,MAAOqI,EAAKvF,MAAO,GAC3B,kBAAC,EAAD,CACEU,OAAQA,EACRC,UAAWA,EACXC,KAAMA,KAGV,kBAAC,EAAD,CAAU1D,MAAOqI,EAAKvF,MAAO,GAC3B,kBAAC,GAAD,CAAa+C,KAAMA,EAAMC,QAASA,aC7LrCmI,GAzCuB,SAAC,GAAuB,IAArBpI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAK7C,OACE,kBAACC,EAAA,EAAD,CAAgBC,MAAO,CAAEC,UAAW,MAClC,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZC,aAAW,eACXC,UAAU,gCAEV,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,kBAACC,GAAA,EAAD,CAAWC,IAAKF,EAAOG,GAAIC,MAAM,UAC9BJ,EAAOK,KAAKC,oBAKrB,kBAACC,GAAA,EAAD,KACGnB,EAAKW,KAAI,SAACS,EAAKnE,GAAN,OACR,kBAACyD,GAAA,EAAD,CAAUW,OAAK,EAACP,IAAG,mBAAc7D,IAC9BgD,EAAQU,KAAI,SAACC,EAAQa,GAAT,OACX,kBAACZ,GAAA,EAAD,CAAWC,IAAKF,EAAOG,GAAIC,MAAM,UAxB1B,SAACC,EAAcG,EAAUK,EAAaxE,GACzD,OAAe,IAARwE,EAAYxE,EAAQ,EAAImE,EAAIH,GAwBpBU,CAAaf,EAAOG,GAAIK,EAAKK,EAAKxE,eC2BtCS,GAtD0B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQE,EAAW,EAAXA,KAC5CC,EAAO1E,cAEb,OACE,kBAAC,IAAD,CACE2E,KAAMJ,EACNK,OAAQ,CACN1E,MAAoB,GAAbwE,EAAKxE,MACZ2E,MAAO,CACLC,MAAO,GACPC,UAAW,CACTL,KAAM,GACNM,MAAO,WAETC,SAAU,CACRP,KAAM,IAERS,MAAO,MACPC,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBC,MAAO,CACLR,UAAW,CACTL,KAAM,GACNM,MAAO,WAETC,SAAU,CACRP,KAAM,IAERQ,MAAO,CAACT,EAAK3C,MAAO2C,EAAKe,MACzBL,MAAO,EACPC,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBa,OAAQ,CACNC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPC,YAAY,GAEdjE,OAAQ,CAAEkE,gBAAgB,MC1B1BG,GAAU,CACd,CAAEc,GAAI,KAAME,KAAM,MAClB,CAAEF,GAAI,OAAQE,KAAM,QACpB,CAAEF,GAAI,SAAUE,KAAM,UACtB,CAAEF,GAAI,QAASE,KAAM,cACrB,CAAEF,GAAI,QAASE,KAAM,aAGjBoH,GAAc,CAClBnN,MAAO,EACP0D,KAAM,GAGFiD,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNC,OAAQ,CACNC,UAAWH,EAAMI,QAAQ,IAE3BjE,MAAO,CACLkE,aAAcL,EAAMM,QAAQ,QAmHjBiG,GA/GuB,SAAC,GAAuB,IAArBxD,EAAoB,EAApBA,MAAOa,EAAa,EAAbA,OAAa,EACrCtM,mBAAS,GAD4B,mBACpDmJ,EADoD,KAC/CC,EAD+C,OAE/BpJ,mBAAS,IAFsB,mBAEpDqJ,EAFoD,KAE5CC,EAF4C,OAG/BtJ,mBAAS,IAHsB,mBAGpDsE,EAHoD,KAG5CiF,EAH4C,OAInCvJ,mBAASgP,IAJ0B,mBAIpDxK,EAJoD,KAI9CiF,EAJ8C,KAKrDE,EAAUnB,KAEhBlI,qBAAU,WACR,IAAI4O,EAAS,GACTrF,EAAM,IAAIC,eACdD,EAAIE,KAAK,MNzDY,sCMyDM,GAC3BF,EAAIG,aAAe,cAEnBH,EAAII,OAAS,SAASC,GACpB,IAAMxF,EAAO,IAAIyF,WAAWN,EAAIO,UAC1BC,EAAWC,OAAU5F,EAAM,CAAE6F,KAAM,UAClBD,QAAWO,cAChCR,EAASS,OAAOT,EAASG,WAAW,IACpC,CACEO,OAAQ,IAIFN,SAAQ,SAACC,EAAMtC,GACnBA,EAAM,GAAKkE,IAAW5B,EAAK,IAC7BwE,EAAOjE,KAAK,CACVkE,KAAMzE,EAAK,GACX0B,OAAQ1B,EAAK,GACb8B,MAAO3L,YAAW6J,EAAK,GAAI,GAC3B4C,MAAOzM,YAAW6J,EAAK,GAAI,QAGjCpB,EAAU4F,IAGZrF,EAAI6B,SACH,CAACD,EAAOa,IAEXhM,qBAAU,WACR,IAAMuB,EAASwH,EAAO6C,OAAS,EAAK,EAEhCH,EAAY,GAEhB1C,EAAOoB,SAAQ,SAACC,EAAYtC,GAC1B,IAAIgF,EAAQ,CACVC,EAAG,CAAC3C,EAAK8B,MAAO9B,EAAK4C,OACrBC,EAAG,CAAC7C,EAAKyE,KAAMzE,EAAKyE,MACpBvH,KAAM8C,EAAKyE,KACX3B,KAAM,QACNC,KAAM,CAAExN,MAAO,GAAI8E,MAAOb,EAASkE,EAAMlE,EAASgI,UAEpDH,EAAUd,KAAKmC,MAGjB7D,EAAUwC,GACVtC,EAAQ,CAAE5H,QAAO0D,KAfJ,MAgBZ,CAAC8D,IAMJ,OACE,oCACE,kBAACuE,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAAS/E,QAAS,GAC5D,kBAAC4E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,UAAnC,6CAKJ,kBAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAAS/E,QAAS,GAC5D,kBAAC4E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,SAAS,SACTxJ,MAAM,UACNoC,UAAWwC,EAAQf,QAEnB,kBAAC4F,EAAA,EAAD,CACE1N,MAAOqI,EACPsF,SAxBK,SAACC,EAAwB5N,GAC5CsI,EAAOtI,IAwBO6N,eAAe,UACfC,UAAU,UACV1H,aAAW,uBAEX,kBAAC2H,EAAA,EAAD,CAAKC,MAAM,eACX,kBAACD,EAAA,EAAD,CAAKC,MAAM,gBAGf,kBAAC,IAAD,CAAgBlL,MAAOuF,GACrB,kBAAC,EAAD,CAAUrI,MAAOqI,EAAKvF,MAAO,GAC3B,kBAAC,GAAD,CAAYY,KAAMA,EAAMF,OAAQA,KAElC,kBAAC,EAAD,CAAUxD,MAAOqI,EAAKvF,MAAO,GAC3B,kBAAC,GAAD,CAAW+C,KAAM0C,EAAQzC,QAASA,a,4BC7I9C4B,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJyG,cAAe,UAEjBC,QAAS,CACPtK,MAAOuK,IAAOC,KAAK,KACnBC,QAAS,QAkEEC,GA9D2B,SAAC,GAAqC,IAAnCtI,EAAkC,EAAlCA,UAAWmF,EAAuB,EAAvBA,OAAQmC,EAAe,EAAfA,SAAe,EAC/CzO,mBAAmB,IAD4B,mBACtE0P,EADsE,KAC7DC,EAD6D,KAEvEhG,EAAUnB,KAEhBlI,qBAAU,WACR,IAAI4O,EAAmB,GACnBrF,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO5F,GAAe,GAC/B0F,EAAIG,aAAe,cAEnBH,EAAII,OAAS,SAASC,GACpB,IAAMxF,EAAO,IAAIyF,WAAWN,EAAIO,UAC1BC,EAAWC,OAAU5F,EAAM,CAAE6F,KAAM,UACnCqF,EAAQvF,EAASS,OAAOT,EAASG,WAAW,IAC3BF,QAAWO,cAAc+E,EAAO,CAAE7E,OAAQ,IAEvDN,SAAQ,SAACO,EAAgBpH,GACjCA,EAAQ,IAAMsL,EAAOjD,SAASjB,EAAG,KAAOkE,EAAOjE,KAAKD,EAAG,OAEzD2E,EAAWT,IAGbrF,EAAI6B,SACH,IAEHpL,qBAAU,WACRoP,EAAQxD,OAAS,GAAKuC,EAAS,SAAUiB,EAAQ,MAEhD,CAACA,IAOJ,OACE,kBAACG,GAAA,EAAD,CACEjI,KAAK,SACL9G,MAAOwL,EACPmC,SATiB,SAACC,GAAiB,IAAD,EACZA,EAAMoB,OAAtBlI,EAD4B,EAC5BA,KAAM9G,EADsB,EACtBA,MACd2N,EAAS7G,EAAM9G,IAQbqG,UAAW4I,aAAKpG,EAAQhB,KAAMxB,GAC9B6I,aAAa,OACbC,WAAS,GAET,kBAACC,GAAA,EAAD,CAAUpP,MAAM,OAAOqG,UAAWwC,EAAQ0F,QAASc,UAAQ,GAA3D,iBAGCT,EAAQpI,KAAI,SAACoD,GAAD,OACX,kBAACwF,GAAA,EAAD,CAAUpP,MAAO4J,EAAMjD,IAAKiD,GACzBA,QCrDLlC,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJyG,cAAe,UAEjBC,QAAS,CACPtK,MAAOuK,IAAOC,KAAK,KACnBC,QAAS,QA6EEY,GAzEuB,SAAC,GAKhC,IAJLjJ,EAII,EAJJA,UACA+B,EAGI,EAHJA,OACAmH,EAEI,EAFJA,OACA5B,EACI,EADJA,SACI,EACsBzO,mBAAmB,IADzC,mBACGsQ,EADH,KACUC,EADV,KAEE5G,EAAUnB,KAEhBlI,qBAAU,WACR,IAAI4O,EAAmB,GACnBsB,EAAkB,GAClB3G,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO5F,GAAe,GAC/B0F,EAAIG,aAAe,cAEnBH,EAAII,OAAS,SAACC,GACZ,IAAMxF,EAAO,IAAIyF,WAAWN,EAAIO,UAC1BC,EAAWC,OAAU5F,EAAM,CAAE6F,KAAM,UACnCqF,EAAQvF,EAASS,OAAOT,EAASG,WAAW,IAC3BF,QAAWO,cAAc+E,EAAO,CAAE7E,OAAQ,IAEvDN,SAAQ,SAACO,GACbA,EAAG,KAAO9B,EAAOoD,SACnBtB,EAAG,IAAMwF,EAAMvF,KAAKD,EAAG,KACtBkE,EAAOjD,SAASjB,EAAG,KAAOkE,EAAOjE,KAAKD,EAAG,QAG9CuF,EAASrB,GACTmB,EAAOG,IAGT3G,EAAI6B,SAEH,CAACxC,EAAOoD,SAEXhM,qBAAU,WACRgQ,EAAMpE,OAAS,GAAKuC,EAAS,OAAQ6B,EAAM,MAE1C,CAACA,IAOJ,OACE,kBAACT,GAAA,EAAD,CACEjI,KAAK,OACL9G,MAAOoI,EAAOqC,KACdkD,SATiB,SAACC,GAAiB,IAAD,EACZA,EAAMoB,OAAtBlI,EAD4B,EAC5BA,KAAM9G,EADsB,EACtBA,MACd2N,EAAS7G,EAAM9G,IAQbqG,UAAW4I,aAAKpG,EAAQhB,KAAMxB,GAC9B6I,aAAa,OACbC,WAAS,GAET,kBAACC,GAAA,EAAD,CAAUpP,MAAM,OAAOqG,UAAWwC,EAAQ0F,QAASc,UAAQ,GAA3D,yBAGCG,EAAMhJ,KAAI,SAAAoD,GAAI,OACb,kBAACwF,GAAA,EAAD,CAAUpP,MAAO4J,EAAMjD,IAAKiD,GACzBA,Q,oBC1DL+F,GAAW,SAAC5O,EAAeC,EAAaoK,GAE5C,MAAO,CAAEjM,MADMgB,KAAKgM,IAAIpL,EAAQC,GAAOoK,EAAU,GACzB,MAOpBwE,GAAW,SAACvE,EAAUD,GAC1B,IAAMyE,EAAM,GAAKzE,EAAS,KAoB1B,OAjBIC,EAAGyE,SACG,CACNC,YAAa,cACbC,gBAAiB3E,EAAG4E,IACpBC,UAAWL,EACX5J,UAAW4J,EACXM,UAAW,mBAGL,CACNH,gBAAiB3E,EAAG4E,IACpBC,UAAWL,EACX5J,UAAW4J,EACXO,UAAW,WAOX1I,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJ4F,SAAU,YAEZ4C,KAAM,CACJH,UAAWtI,EAAMM,QAAQ,GACzB,WAAY,CACVoI,QAAS,oBAEX,UAAW,CACTA,QAAS,iBACT7C,SAAU,WACV8C,MAAO3I,EAAMM,QAAQ,GACrBsI,IAAK,IAGTC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfP,UAAW,SACXQ,eAAgB,SAChB5D,WAAY,SACZ6D,OAAQ,iBACRC,OAAQ,WAEVC,OAAQ,CACNF,OAAO,cAAD,OAAgBrC,IAAOwC,IAAI,OAEnCC,QAAS,CACPC,SAAUtJ,EAAMuJ,WAAWC,QAAQ,KAErCC,OAAQ,CACNH,SAAUtJ,EAAMuJ,WAAWC,QAAQ,KAErCE,SAAU,CACRC,UAAW3J,EAAMM,QAAQ,IAE3BsJ,IAAK,CACHrS,MAAO,OACP+Q,UAAWtI,EAAMM,QAAQ,IACzB0I,eAAgB,SAChB5D,WAAY,SACZ0D,QAAS,QAEXe,QAAS,CACP1J,UAAWH,EAAMI,QAAQ,IACzB6I,OAAO,cAAD,OAAgBrC,IAAOwC,IAAI,MACjCU,OAAQ,SA8NGC,GA1NqB,SAAC,GAM9B,IALLtL,EAKI,EALJA,UACAuL,EAII,EAJJA,KACAxJ,EAGI,EAHJA,OACAuF,EAEI,EAFJA,SACAkE,EACI,EADJA,UACI,EACwB3S,mBAAS,IADjC,mBACGqJ,EADH,KACWC,EADX,OAEgCtJ,mBAAS,IAFzC,mBAEG4S,EAFH,KAEeC,EAFf,OAGwB7S,mBAAS,GAHjC,mBAGGkM,EAHH,KAGW4G,EAHX,OAIoB9S,mBAAS,GAJ7B,mBAIG+S,EAJH,KAISC,EAJT,OAK8BhT,mBAAS,GALvC,mBAKGiT,EALH,KAKcC,EALd,KAMEvJ,EAAUnB,KAGhBlI,qBAAU,WACR,IAAIuJ,EAAM,IAAIC,eACdD,EAAIE,KAAK,MTvHY,gCSuHM,GAC3BF,EAAIG,aAAe,cAEnBH,EAAII,OAAS,SAACC,GACZ,IAAMxF,EAAO,IAAIyF,WAAWN,EAAIO,UAC1BC,EAAWC,OAAU5F,EAAM,CAAE6F,KAAM,UACnCK,EAAiBN,QAAWO,cAChCR,EAASS,OAAO5B,EAAOqC,MACvB,CACER,OAAQ,IAGRnB,EAAY,GACZsF,EAAS,GAET9D,OAAOC,KAAKT,GAAWsB,OAAS,GAClCtB,EAAUH,SAAQ,SAACO,EAAS5C,GACtBA,EAAM,GAAGwB,EAAUqB,KAAKC,IAAEC,OAAOP,EAAU,GAAII,OAGrDpB,EAAUa,SAAQ,SAACC,GACjB,IAAMhG,EAAOkF,EAAU0B,QAAO,SAAAN,GAAE,OAAIN,EAAKyI,SAAWnI,EAAGmI,UACzCjI,IAAEI,OAAO4D,GAAQ,SAAAlE,GAAE,OAAIN,EAAKyI,SAAWnI,EAAGmI,UAE9CjH,OAAS,GAAKxB,EAAKyI,QAC3BjE,EAAOjE,KAAK,CACVkI,OAAQzI,EAAKyI,OACbtR,MAAO6I,EAAK7I,MACZC,IAAK4I,EAAK5I,IACV4C,KAAMA,EACNkM,SAAUlG,EAAKkG,cAIrBtH,EAAU4F,GACVgE,EAAa9H,OAAOC,KAAK6D,GAAQhD,OAvCxB,GAwCTyG,EAAUzD,EAAO,GAAGxK,KAAK,GAAG0M,UAE5BgC,KAIJvJ,EAAI6B,SAEH,CAACxC,EAAOqC,OAEXjL,qBAAU,WACR,GAAI8K,OAAOC,KAAKhC,GAAQ6C,OAAS,EAAG,CAClC,IAAMmH,EAAShK,EApDJ,GAoDY0J,EAAO,IACxBO,EACJP,EAAOE,EACH5J,EAvDK,EAuDE0J,EAAgB,GACvB1J,EAxDK,EAwDE4J,EAAqB,GAElC,GAAIK,GAAUlI,OAAOC,KAAKiI,GAAQrH,SAAS,OAAQ,CACjD,IAAMpK,EAAQwR,EAAOxR,MAAQwR,EAAOxR,MAAQ,EACtCC,EAAMwR,EAAOxR,IAAMwR,EAAOxR,IAAM,EAChC6O,EAAM1P,KAAKgM,IAAIpL,EAAQC,GAEzB4C,EAAO0G,OAAOmI,OAAOlK,GAAQiC,QAC/B,SAACZ,GAAD,OACEA,EAAKyI,OAjEA,GAiEUJ,EAAO,IAAerI,EAAKyI,QAjErC,EAiE+CJ,KAExDD,EAAUnC,GACVkC,EAAcnO,SAGhBoO,EAAU,GACVD,EAAc,MAEf,CAACE,EAAM1J,EAAQ4J,IAElB,IAAMG,EAAa,WACjB9J,EAAU,IACV4J,EAAa,GACbF,EAAQ,GACRvE,EAAS,QAAS,MAClBkE,EAAU,KAYZ,OACE,oCACE,kBAAC/E,EAAA,EAAD,CACEC,WAAS,EACTC,WAAW,SACXC,QAAQ,SACRjH,MAAO,CAAEyH,SAAU,YACnBpH,UAAW4I,aAAK5I,EAAWwC,EAAQhB,OAEC,IAAnCyC,OAAOC,KAAKuH,GAAY1G,QACvB,kBAAClI,EAAA,EAAD,CACE2N,OAAQ,EACR6B,YAAalE,IAAOmE,KAAK,KACzBtM,UAAWwC,EAAQ2I,IACnBpB,UAAU,UAEV,kBAACjD,EAAA,EAAD,CAAYC,QAAQ,QAAQnJ,MAAM,iBAAlC,8BAKHqG,OAAOC,KAAKuH,GAAY1G,OAAS,GAChCd,OAAOmI,OAAOX,GAAYtL,KAAI,SAAC0D,EAAI5C,GAAL,OAC5B,kBAACwF,EAAA,EAAD,CACElD,MAAI,EACJjD,IAAKuD,EAAGmI,OACRhM,UAAWwC,EAAQwH,KACnBrK,MAAO2J,GAASzF,EAAGnJ,MAAOmJ,EAAGlJ,IAAKoK,GAClCwH,aAAY1I,EAAGnJ,MACf8R,WAAkBC,IAARxL,EAAqB4C,EAAGlJ,IAAM,IAExC,kBAAC8L,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,UACzC/C,EAAGtG,KAAK4C,KAAI,SAAC6E,EAAUvI,GAAX,OACX,kBAACiQ,GAAA,EAAD,CACEpM,IAAG,WA3NP3G,EA2NmBqL,EAAG4F,QA1N7BjR,EAAMoH,MAAM,KAAKC,KAAK,MA0NR,YAA2BC,EAA3B,YAAkCxE,GACrCiB,MAAOsH,EAAG4F,QACV+B,OAAK,GAEL,kBAAClG,EAAA,EAAD,CACElD,MAAI,EACJsD,GAAI,GACJ+F,QAAS,kBAlDT,SAACjT,EAAesQ,GAClC3C,EAAS,QAAS3N,GAClB6R,EAAUvB,GAgDuB4C,CAAY7H,EAAGX,QAASW,EAAGiF,UAC1CtK,MAAO4J,GAASvE,EAAInB,EAAGtG,KAAKwH,QAC5B/E,UAAW4I,aACTpG,EAAQ4H,MACRmB,EAAKzG,SAASE,EAAGX,UAAY7B,EAAQkI,OACrCa,EAAKzG,SAASE,EAAGX,UACfW,EAAGX,UAAYtC,EAAOuC,OACtB9B,EAAQ4I,UAGVpG,EAAG8H,UAYH,kBAAChG,EAAA,EAAD,CAAY9G,UAAWwC,EAAQoI,SAC5B5F,EAAG8H,WAZN,oCACE,kBAAChG,EAAA,EAAD,CAAY9G,UAAWwC,EAAQoI,SAC5B5F,EAAG4F,SAES,KAAd5F,EAAGgG,QACF,kBAAClE,EAAA,EAAD,CAAY9G,UAAWwC,EAAQwI,QAC5BhG,EAAGgG,WAnPnB,IAACrR,WAmQV,kBAAC8M,EAAA,EAAD,CACEC,WAAS,EACTC,WAAW,SACX9E,QAAS,EACT7B,UAAWwC,EAAQyI,UAEnB,kBAACxE,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAtC,8EAKF,kBAACP,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GACb,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,YACtB,kBAACH,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAACkG,GAAA,EAAD,CACEC,MAAOlT,KAAKmT,KAAKnB,GACjBF,KAAMA,EACNsB,YAAa,EACbnG,QAAQ,WACRP,MAAM,UACNc,SAnGW,SAACvE,EAAgB6I,GACxCC,EAAQD,YCjNNvK,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,OAiCO2L,GA9BmB,SAAC,GAA4B,IAA1BnN,EAAyB,EAAzBA,UAAWiK,EAAc,EAAdA,QACxCzH,EAAUnB,KAEhB,OACE,kBAACoF,EAAA,EAAD,CACEC,WAAS,EACTE,QAAQ,SACRD,WAAW,SACX3G,UAAW4I,aAAK5I,EAAWwC,EAAQhB,OAEnC,kBAACiF,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,UAAnC,qBAIF,kBAACP,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACf,kBAACJ,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAAChK,EAAA,EAAD,CAAKwP,YAAY,eAAe7B,OAAQ,EAAG4C,aAAc,EAAGC,QAAS,GACnE,kBAACvG,EAAA,EAAD,CAAYC,QAAQ,SAASkD,O,4DCjBjCqD,GAAaC,sBAAW,SAC5BhR,EACAiR,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,OAAOF,IAAKA,GAASjR,OAGzC8E,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNyI,QAAS,CACPrI,aAAcL,EAAMM,QAAQ,QAuBjB8L,GAnBG,WAChB,IAAMC,EAAUC,aAAc,uBACxBrL,EAAUnB,KAEhB,OACE,kBAACyM,GAAA,EAAD,CAAQlL,KAAMgL,EAASG,oBAAqBT,GAAYU,aAAW,GACjE,kBAACC,EAAA,EAAD,MACA,kBAACC,GAAA,EAAD,gCACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBpO,UAAWwC,EAAQyH,SAAtC,gJCrBFoE,GAAgB,CACpBlJ,OAAQ,OACRf,KAAM,OACNE,MAAO,MAGHjD,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNyI,QAAS,CACPN,gBAAiBxB,IAAOC,KAAK,SA4DlBkG,GAxDQ,WAAO,IAAD,EACCzV,mBAAiBwV,IADlB,mBACpBtM,EADoB,KACZwM,EADY,OAEH1V,mBAAmB,IAFhB,mBAEpB0S,EAFoB,KAEdiD,EAFc,OAGG3V,mBAAS,IAHZ,mBAGpBoR,EAHoB,KAGXwE,EAHW,KAIrBjM,EAAUnB,KAEVqN,EAAe,SAACjO,EAAc9G,GAClC4U,GAAU,SAAAI,GAAS,kCAAUA,GAAV,kBAAsBlO,EAAO9G,QAWlD,OACE,yBAAKqG,UAAWwC,EAAQhB,MACtB,kBAACiF,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAAS9E,QAAS,GAC3C,kBAAC4E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GACb,kBAAC,GAAD,CAAa1B,OAAQpD,EAAOoD,OAAQmC,SAAUoH,KAEhD,kBAACjI,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GACb,kBAAC,GAAD,CACE9E,OAAQA,EACRuF,SAAUoH,EACVxF,OAdS,SAACvP,GAClB6U,EAAQ7U,OAgBJ,kBAAC8M,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAAC,GAAD,CACE0E,KAAMA,EACNxJ,OAAQA,EACRuF,SAAUoH,EACVlD,UA1BY,SAAC7R,GACrB8U,EAAW9U,OA4BNsQ,GAAuB,KAAZA,GACV,kBAACxD,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GAAI7G,UAAWwC,EAAQyH,SACpC,kBAAC,GAAD,CAASA,QAASA,KAGtB,kBAACxD,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAAC,GAAD,CAAa9E,OAAQA,KAEvB,kBAAC0E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAAC,GAAD,CAAWvC,MAAOvC,EAAOuC,MAAOa,OAAQpD,EAAOoD,WAGnD,kBAAC,GAAD,QChFOpI,GAAW,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCgFaG,GA3E0B,SAAC,GAKnC,IAJLC,EAII,EAJJA,OACAyR,EAGI,EAHJA,OACAxR,EAEI,EAFJA,UACAC,EACI,EADJA,KAEMC,EAAO1E,cAEb,OACE,kBAAC,IAAD,CACE2E,KAAMJ,EACNK,OAAQ,CACN1E,MAAoB,IAAbwE,EAAKxE,MACZ+V,YAAaD,EACbnR,MAAO,CACLC,MAAO,GACPC,UAAW,CACTL,KAAM,GACNM,MAAO,WAETC,SAAU,CACRP,KAAM,IAERQ,MAAO,CAACpE,YAAW0D,GAAY,GAAI1D,YAAW0D,EAAW,IACzDW,MAAO,MACPC,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBC,MAAO,CACLT,MAAO,kBACPC,UAAW,CACTL,KAAM,GACNM,MAAO,WAETC,SAAU,CACRP,KAAM,IAERQ,MAAO,CAACT,EAAK3C,MAAO2C,EAAKe,MACzBL,MAAOV,EAAKgB,KACZL,UAAU,EACVC,cAAe,UACfC,cAAe,GAEjBI,OAAQ,CACNC,YAAa,IACbC,QAAS,OACTC,WAAY,SACZC,KAAM,CACJC,OAAQ,aACRrB,KAAM,GACNM,MAAO,QAETgB,YAAa,UACbC,YAAa,EACbC,cAAe,KAEjBC,OAAQ,CACNC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,IAAK,GAEPC,YAAY,GAEdjE,OAAQ,CAAEkE,gBAAgB,M,kBC3D1BwP,GAAiBC,cAAW,SAAAxN,GAAK,MAAK,CAC1CC,KAAM,CACJ,qBAAsB,CACpBmI,gBAAiB,SAEnB,sBAAuB,CACrBA,gBAAiBxB,IAAOC,KAAK,UANZ2G,CASnB7O,MAEEmO,GAAwB,CAC5BzC,KAAM,EACNoD,MAAO,GAwFMzP,GArF2B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EACjC5G,mBAAgB,IADiB,mBACxDoW,EADwD,KAC/CC,EAD+C,OAEnCrW,mBAAiBwV,IAFkB,mBAExDtM,EAFwD,KAEhDwM,EAFgD,KAI/DpV,qBAAU,WACR,IAAMoE,EAAOiC,EAAK2P,MAChBpN,EAAO6J,KAAO7J,EAAOiN,OACpBjN,EAAO6J,KAAO,GAAK7J,EAAOiN,OAE7BE,EAAW3R,KACV,CAACwE,EAAQvC,IA8BZ,OACE,kBAACE,EAAA,EAAD,CAAgBC,MAAO,CAAEC,UAAW,MAClC,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZC,aAAW,eACXC,UAAU,gCAEV,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,kBAACC,GAAA,EAAD,CAAWC,IAAKF,EAAOG,GAAIC,MAAM,UAC9BJ,EAAOK,KAAKC,oBAKrB,kBAACC,GAAA,EAAD,KACGsO,EAAQ9O,KAAI,SAACS,EAAKnE,GAAN,OACX,kBAACqS,GAAD,CAAgBjO,OAAK,EAACP,IAAK7D,GACxBgD,EAAQU,KAAI,SAACC,EAAQa,GAAT,OACX,kBAACZ,GAAA,EAAD,CAAWC,IAAKF,EAAOG,GAAIC,MAAM,UAhD1B,SAACC,EAAcG,EAAUK,EAAaxE,GACzD,GAAY,IAARwE,EAYF,OAAOxE,EAAQ,EAXf,OAAQgE,GACN,IAAK,YACL,IAAK,YACH,OAAOG,EAAIH,GAAMS,QAAQ,GAC3B,IAAK,QACL,IAAK,QACH,OAAOxH,YAAWkH,EAAIH,GAAO,GAC/B,QACE,OAAOG,EAAIH,IAuCFU,CAAaf,EAAOG,GAAIK,EAAKK,EAAKxE,aAO/C,kBAAC2S,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BrI,UAAU,MACVgG,MAAOxN,EAAKuF,OACZuK,YAAavN,EAAOiN,MACpBpD,KAAM7J,EAAO6J,KACb2D,aA7CmB,SAAChI,EAAgBiI,GAAjB,OACvBjB,GAAU,SAAAI,GAAS,kCAAUA,GAAV,IAAqB/C,KAAM4D,QA6C1CC,oBA3CoB,SAAClI,GACzBgH,GAAU,SAAAI,GAAS,kCACdA,GADc,IAEjBK,MAAOU,SAASnI,EAAMoB,OAAOhP,MAAO,IACpCiS,KAAM,YClDNnM,GAAU,CACd,CAAEc,GAAI,KAAME,KAAM,MAClB,CAAEF,GAAI,SAAUE,KAAM,UACtB,CAAEF,GAAI,YAAaE,KAAM,aACzB,CAAEF,GAAI,YAAaE,KAAM,kBACzB,CAAEF,GAAI,YAAaE,KAAM,kBACzB,CAAEF,GAAI,QAASE,KAAM,cACrB,CAAEF,GAAI,QAASE,KAAM,aAGjBW,GAAkB,CACtB1G,MAAO,EACP0D,KAAM,EACNC,KAAM,GAGFgD,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNC,OAAQ,CACNC,UAAWH,EAAMI,QAAQ,IAE3BjE,MAAO,CACLkE,aAAcL,EAAMM,QAAQ,QA0MjBC,GAtM2B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EAC5BlJ,mBAAS,IADmB,mBACjDqJ,EADiD,KACzCC,EADyC,OAE5BtJ,mBAAS,IAFmB,mBAEjDsE,EAFiD,KAEzCiF,EAFyC,OAGtBvJ,mBAAS,GAHa,mBAGjDuE,EAHiD,KAGtCiF,EAHsC,OAIhCxJ,mBAASuI,IAJuB,mBAIjD/D,EAJiD,KAI3CiF,EAJ2C,OAK5BzJ,mBAAS,IALmB,mBAKjD+V,EALiD,KAKzCe,EALyC,OAMhC9W,mBAAS,IANuB,mBAMjD2G,EANiD,KAM3C+C,EAN2C,KAOlDC,EAAUnB,KAyJhB,OAvJAlI,qBAAU,WACR,GAAoB,SAAhB4I,EAAOqC,KAAX,CAEA,IAAI3B,EAAoB,GACpBC,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO3F,GAAe,GAC/ByF,EAAIG,aAAe,cAEnBH,EAAII,OAAS,SAASC,GACpB,IAAMxF,EAAO,IAAIyF,WAAWN,EAAIO,UAC1BC,EAAWC,OAAU5F,EAAM,CAAE6F,KAAM,UAEzCF,EAASG,WAAWC,SAAQ,SAAAC,GAC1B,IAAIC,EAAgB,GAChBC,EAAiBN,QAAWO,cAAcR,EAASS,OAAOJ,GAAO,CACnEK,OAAQ,IAEVnB,EAAUc,GAAQ,GAElBE,EAAUH,SAAQ,SAACO,EAASpH,GACtBA,EAAQ,GAAG+G,EAAcM,KAAKC,IAAEC,OAAOP,EAAU,GAAII,OAE3DpB,EAAUc,GAAQC,KAEpBf,EAAUwB,OAAOC,KAAKzB,GAAW,IAAIa,SAAQ,SAAAC,GAC3CA,EAAI,KAAWd,EAAUV,EAAOqC,SAElCjC,EAAUM,EAAUwB,OAAOC,KAAKzB,GAAW,MAG7CC,EAAI6B,UACH,CAACxC,EAAOqC,OAEXjL,qBAAU,WACR,IAAIqL,EAAU,EACZC,EAAU,EACVC,EAAS,EACTC,EAAS,EACPC,EAAY,GACdgL,EAAY,GACZC,EAAU,GAEZ3N,EAAOoB,SAAQ,SAACC,GACd,IAAIsB,EAAUtB,EAEd,GAAIA,EAAKzC,aAAeiB,EAAOqC,KAAM,CACnC,GAAIH,OAAOC,KAAKX,GAAMuB,SAAS,SAAWvB,EAAKhG,KAAKwH,OAAS,EAAG,CAC9D,IAAI9D,EAAMsC,EAAKhG,KAAK4C,KAAI,SAAA6E,GAAE,OAAIA,EAAG8K,aAAW5K,QAAQnD,EAAOgO,MAC3DxM,EAAKhG,KAAK6H,OACR7B,EAAKhG,KAAKwH,OAAS,EACnB,EACAxB,EAAKhG,KAAK6H,OAAOnE,EAAK,GAAG,IAE3BuD,EAAUjB,EAAKhG,KAAK,GAAG8H,WAEvBb,EAAUjB,EAAK+B,aAOjB,GAJAZ,EAASnB,EAAKgC,iBACdd,EAAUlB,EAAKiC,aACfb,EAASpB,EAAKkC,YAEVxB,OAAOC,KAAKW,GAASC,SAAS,SAAWD,EAAQtH,KAAKwH,OAAS,EACjExB,EAAKhG,KAAK+F,SAAQ,SAAC0B,EAAIvI,GACrB,IAAIiJ,EAAY,IAAIzL,KAAK+K,EAAGK,OACxBM,EAAS,IAAI1L,KAAKuK,GAClBoB,EACFZ,EAAGa,UAAY/L,KAAKgM,IAAId,EAAGa,UAAYb,EAAGe,WAAa,EAGrDL,EAAYC,IACdnB,EAAUQ,EAAGK,OAGf9B,EAAKhG,KAAK+F,SAAQ,SAACpJ,EAAG+G,GAChBA,EAAMxE,GAASvC,EAAE+K,SAAWD,EAAGC,SACjCxI,EAAQwE,MAIZ,IAAIgF,EAAQ,CACVxF,KAAMuE,EAAGgL,GAAK,KAAOhL,EAAGC,OACxBiB,EAAG,CAACxM,YAAWsL,EAAGK,MAAO,GAAI3L,YAAWsL,EAAGmB,MAAO,IAClDC,EAAG,CAACR,EAASA,GACbS,KAAM,QACNC,KAAM,CACJxN,MACGgB,KAAKgM,IAAId,EAAGa,UAAYb,EAAGe,YAAuB,GAATrB,GAAgB,IAC5D9G,MAAOb,GAASN,EAAQM,GAASgI,SAEnC1F,YAtBa,GAwBT4Q,EAAQ,CACZ/J,EAAGzL,YAAcuK,EAAGK,MAAOL,EAAGmB,OAC9BC,EAAGR,EACHsK,KAAMlL,EAAGgL,GACTG,WAAW,EACXzR,KAAM,CAAEd,MAAO,QAASN,KAAM,KAEhCsS,EAAU9L,KAAKmM,GACfrL,EAAUd,KAAKmC,UAEZ,CACL,IAAIA,EAAQ,CACVxF,KAAM,GACNyF,EAAG,CAAC1B,EAASA,EAAU,IACvB4B,EAAG,CAAC3B,EAASA,GACb4B,KAAM,QACNC,KAAM,CACJxN,MAAQgB,KAAKgM,IAAIrB,EAAUE,IAAoB,GAATD,GAAgB,IACtD9G,MAAO,eAETyB,YAAY,EACZkH,OAAQ,CACNjJ,KAAM,GACNkJ,MAAO,CACL,UACA,eACA,UACA,UACA,eACA,aAIN5B,EAAUd,KAAKmC,GAEjB,IAAMmK,EAAU5Q,EAAKuF,OAAS,GAAKvF,EAAK6Q,OAAM,SAAA9M,GAAI,OAAIzI,QAAQyI,MAC9DsM,EAAUO,EAAU7M,EAAKhG,KAAO,OAKlCsS,EAAQ9K,OAAS,GACjB8K,EAAQQ,OAAM,SAAA9M,GAAI,OAAIU,OAAOC,KAAKX,GAAM8M,OAAM,SAAA/P,GAAG,OAAIxF,QAAQyI,EAAKjD,WAGlEiC,EAAQsN,GACRzN,EAAUwC,GACV+K,EAAUC,KAEVrN,EAAQ,IACRH,EAAU,IACVuN,EAAU,KAGZtN,EAAamC,GACblC,EAAQ,CAAE5H,MAAO+J,EAASrG,KAAMuG,EAAQtG,KAAMqG,MAE7C,CAAC3C,EAAQG,IAGV,oCACE,kBAACuE,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAAS/E,QAAS,GAC5D,kBAAC4E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GAAI7G,UAAWwC,EAAQ9E,OACpC,kBAACoJ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,UAAnC,yCAKJ,kBAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,QAAQ,SAAS/E,QAAS,GAC5D,kBAAC4E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CACE/J,OAAQA,EACRC,UAAWA,EACXC,KAAMA,EACNuR,OAAQA,OAKhB,kBAACnI,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CAAa1H,KAAMA,EAAMC,QAASA,WC9N1C4B,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJyG,cAAe,UAEjBC,QAAS,CACPtK,MAAOuK,IAAOC,KAAK,KACnBC,QAAS,QAoEEiI,GAhEyB,SAAC,GAAqC,IAAnCtQ,EAAkC,EAAlCA,UAAW+B,EAAuB,EAAvBA,OAAQuF,EAAe,EAAfA,SAAe,EACjDzO,mBAAmB,IAD8B,mBACpE0X,EADoE,KAC7DC,EAD6D,KAErEhO,EAAUnB,KAEhBlI,qBAAU,WACR,IAAI4O,EAAmB,GACnBrF,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO3F,GAAe,GAC/ByF,EAAIG,aAAe,cAEnBH,EAAII,OAAS,SAASC,GACpB,IAAMxF,EAAO,IAAIyF,WAAWN,EAAIO,UAE1BwF,EADWtF,OAAU5F,EAAM,CAAE6F,KAAM,UAClBO,OAAO5B,EAAOqC,MACdjB,QAAWO,cAAc+E,EAAO,CAAE7E,OAAQ,IAEvDN,SAAQ,SAACO,EAAgBpH,GAEjCA,EAAQ,IAAMsL,EAAOjD,SAASjB,EAAG,KAAOkE,EAAOjE,KAAKD,EAAG,OAEzD2M,EAASzI,IAGXrF,EAAI6B,SACH,CAACxC,EAAOqC,OAEXjL,qBAAU,WACRoX,EAAMxL,OAAS,GAAKuC,EAAS,OAAQiJ,EAAM,MAE1C,CAACA,IAOJ,OACE,kBAAC7H,GAAA,EAAD,CACEjI,KAAK,OACL9G,MAAOoI,EAAOgO,KACdzI,SATiB,SAACC,GAAiB,IAAD,EACZA,EAAMoB,OAAtBlI,EAD4B,EAC5BA,KAAM9G,EADsB,EACtBA,MACd2N,EAAS7G,EAAM9G,IAQbqG,UAAW4I,aAAKpG,EAAQhB,KAAMxB,GAC9B6I,aAAa,OACbC,WAAS,GAET,kBAACC,GAAA,EAAD,CAAUpP,MAAM,OAAOqG,UAAWwC,EAAQ0F,QAASc,UAAQ,GAA3D,oBAGCuH,EAAMpQ,KAAI,SAACoD,GAAD,OACT,kBAACwF,GAAA,EAAD,CAAUpP,MAAO4J,EAAMjD,IAAKiD,GACzBA,QC7DLlC,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJyG,cAAe,UAEjBC,QAAS,CACPtK,MAAOuK,IAAOC,KAAK,KACnBC,QAAS,QA4DEY,GAxDuB,SAAC,GAAqC,IAAnCjJ,EAAkC,EAAlCA,UAAW+B,EAAuB,EAAvBA,OAAQuF,EAAe,EAAfA,SAAe,EAC/CzO,mBAAmB,IAD4B,mBAClEsQ,EADkE,KAC3DC,EAD2D,KAEnE5G,EAAUnB,KAEhBlI,qBAAU,WACR,IAAIuJ,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO3F,GAAe,GAC/ByF,EAAIG,aAAe,cAEnBH,EAAII,OAAS,SAACC,GACZ,IAAMxF,EAAO,IAAIyF,WAAWN,EAAIO,UAC1BC,EAAWC,OAAU5F,EAAM,CAAE6F,KAAM,UACzCF,EAASG,WAAWoN,QACpBrH,EAASlG,EAASG,aAGpBX,EAAI6B,SAEH,IAEHpL,qBAAU,WACRgQ,EAAMpE,OAAS,GAAKuC,EAAS,OAAQ6B,EAAM,MAE1C,CAACA,IAOJ,OACE,kBAACT,GAAA,EAAD,CACEjI,KAAK,OACL9G,MAAOoI,EAAOqC,KACdkD,SATiB,SAACC,GAAiB,IAAD,EACZA,EAAMoB,OAAtBlI,EAD4B,EAC5BA,KAAM9G,EADsB,EACtBA,MACd2N,EAAS7G,EAAM9G,IAQbqG,UAAW4I,aAAKpG,EAAQhB,KAAMxB,GAC9B6I,aAAa,OACbC,WAAS,GAET,kBAACC,GAAA,EAAD,CAAUpP,MAAM,OAAOqG,UAAWwC,EAAQ0F,QAASc,UAAQ,GAA3D,yBAGCG,EAAMhJ,KAAI,SAAAoD,GAAI,OACb,kBAACwF,GAAA,EAAD,CAAUpP,MAAO4J,EAAMjD,IAAKiD,GACzBA,QCzDL+J,GAAaC,sBAAW,SAC5BhR,EACAiR,GAEA,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,OAAOF,IAAKA,GAASjR,OAGzC8E,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNyI,QAAS,CACPrI,aAAcL,EAAMM,QAAQ,QAuBjB8L,GAnBG,WAChB,IAAMC,EAAUC,aAAc,uBACxBrL,EAAUnB,KAEhB,OACE,kBAACyM,GAAA,EAAD,CAAQlL,KAAMgL,EAASG,oBAAqBT,GAAYU,aAAW,GACjE,kBAACC,EAAA,EAAD,MACA,kBAACC,GAAA,EAAD,gCACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBpO,UAAWwC,EAAQyH,SAAtC,gJCzBFoE,GAAgB,CACpBjK,KAAM,OACN2L,KAAM,QAGF1O,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNyI,QAAS,CACPN,gBAAiBxB,IAAOC,KAAK,SA8BlBsI,GA1BG,WAChB,IAAMlO,EAAUnB,KADM,EAEMxI,mBAAiBwV,IAFvB,mBAEftM,EAFe,KAEPwM,EAFO,KAIhBG,EAAe,SAACjO,EAAc9G,GAClC4U,GAAU,SAAAI,GAAS,kCAAUA,GAAV,kBAAsBlO,EAAO9G,QAGlD,OACE,yBAAKqG,UAAWwC,EAAQhB,MACtB,kBAACiF,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAAS9E,QAAS,GAC3C,kBAAC4E,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GACb,kBAAC,GAAD,CAAW9E,OAAQA,EAAQuF,SAAUoH,KAEvC,kBAACjI,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,GACb,kBAAC,GAAD,CAAW9E,OAAQA,EAAQuF,SAAUoH,KAEvC,kBAACjI,EAAA,EAAD,CAAMlD,MAAI,EAACsD,GAAI,IACb,kBAAC,GAAD,CAAa9E,OAAQA,MAGzB,kBAAC,GAAD,QCxBA4O,GAAO,CACX,CAAEhX,MAAO,aAAcgO,MAAO,cAC9B,CAAEhO,MAAO,QAASgO,MAAO,UAGrBtG,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJzC,OAAQwC,EAAMM,QAAQ,IAExB+O,KAAM,CACJC,WAAY,EACZC,YAAa,EACbC,aAAc,EACdpH,gBAAiBxB,IAAOC,KAAK,KAC7B1G,UAAWH,EAAMI,QAAQ,KAE3BiC,OAAQ,CACNhG,MAAOuK,IAAOC,KAAK,IACnBuB,gBAAiBxB,IAAOmE,KAAK,MAE/B0E,YAAa,CACXH,WAAYtP,EAAMM,QAAQ,GAC1BwL,QAAS9L,EAAMM,QAAQ,IAEzBoI,QAAS,CACPN,gBAAiBxB,IAAOC,KAAK,KAE/B6I,OAAQ,CACN5D,QAAS9L,EAAMM,QAAQ,GACvB8H,gBAAiBxB,IAAOC,KAAK,UA6DlB8I,GAzDM,WACnB,IAAM1O,EAAUnB,KADS,EAEWxI,mBAAiB,SAF5B,mBAElBsY,EAFkB,KAENC,EAFM,KAQzB,OACE,yBAAKpR,UAAWwC,EAAQhB,MACtB,kBAAC6P,EAAA,EAAD,CAAWrK,UAAU,OAAOsK,SAAS,MACnC,kBAACrD,EAAA,EAAD,MACA,kBAAChH,EAAA,EAAD,CAAMjH,UAAWwC,EAAQoO,MACvB,kBAACW,EAAA,EAAD,CACEvR,UAAWwC,EAAQoB,OACnBlG,MACE,kBAACoJ,EAAA,EAAD,CAAYE,UAAU,SAASD,QAAQ,MACrB,eAAfoK,EACG,2CACA,uCAIV,kBAACjK,EAAA,EAAD,CAAalH,UAAWwC,EAAQwO,aAC9B,kBAACnU,EAAA,EAAD,KACE,kBAACwK,EAAA,EAAD,CACEG,eAAe,UACfC,UAAU,UACVH,SAxBW,SAACC,EAAoB5N,GAC5CyX,EAAczX,IAwBFA,MAAOwX,GAENR,GAAKxQ,KAAI,SAAA6B,GAAG,OACX,kBAAC0F,EAAA,EAAD,CAAKpH,IAAK0B,EAAIrI,MAAOgO,MAAO3F,EAAI2F,MAAOhO,MAAOqI,EAAIrI,aAIxD,kBAACkD,EAAA,EAAD,CAAK2U,GAAI,GACS,UAAfL,GAA0B,kBAAC,GAAD,MACX,eAAfA,GAA+B,kBAAC,GAAD,QAGpC,kBAACM,EAAA,EAAD,CAAazR,UAAWwC,EAAQyO,QAC9B,kBAAC,IAAD,CAAsBrT,MAAM,YAC5B,kBAACkJ,EAAA,EAAD,CAAYE,UAAU,SAASD,QAAQ,SAAvC,+FAE6B,IAC3B,kBAAC2K,EAAA,EAAD,CAAMC,KAAK,sBAAsBhJ,OAAO,UAAxC,6B,+BC1FRtH,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJmF,WAAY,SACZgD,gBAAiBpI,EAAMqQ,QAAQC,WAAW3J,QAC1CmC,QAAS,OACTC,cAAe,SACftR,OAAQ,OACRuR,eAAgB,SAChBV,UAAW,OACXwD,QAAS9L,EAAMM,QAAQ,QAwBZiQ,GApBW,WACxB,IAAMtP,EAAUnB,KAUhB,OARAlI,qBAAU,WAGR,OAFA4Y,KAAUrX,QAEH,WACLqX,KAAUC,UAEX,IAGD,yBAAKhS,UAAWwC,EAAQhB,MACtB,kBAAC3E,EAAA,EAAD,CAAK/D,MAAO,KACV,kBAACmZ,GAAA,EAAD,SC4BOC,GA1BQ,CACrB,CACEC,OAAO,EACPC,KAAM,OACNpL,UAAWqL,gBAAK,kBAAM,kCAExB,CACEF,OAAO,EACPC,KAAM,eACNpL,UAAWqL,gBAAK,kBAAM,kCAExB,CACEF,OAAO,EACPC,KAAM,IACNpL,UAAWkK,IAEb,CACEkB,KAAM,IACNF,OAAQ,CACN,CACElL,UAAW,kBAAM,kBAAC,IAAD,CAAUsL,GAAG,cCnDhCC,GAAMC,YAAO,CAAEC,QAAQ,YAAKC,cAAYD,WACxCE,GAAUC,cAYDC,GAVC,WACd,OACE,kBAACC,EAAA,EAAD,CAAgBP,IAAKA,IACnB,kBAAC,IAAD,CAAkBQ,OAAK,EAACC,SAAU,GAChC,kBAAC,IAAD,CAAQL,QAASA,IDHG,SAAfM,IAAe,IAACf,EAAD,uDAAkB,GAAlB,OAC1B,kBAAC,WAAD,CAAUgB,SAAU,kBAAC,GAAD,OAClB,kBAAC,IAAD,KACGhB,EAAO/R,KAAI,SAACgT,EAAOC,GAClB,IAAMC,EAAYF,EAAMnM,UAExB,OACE,kBAAC,IAAD,CACE1G,IAAK8S,EACLhB,KAAMe,EAAMf,KACZD,MAAOgB,EAAMhB,MACbmB,OAAQ,SAAA/W,GAAK,OACX,kBAAC,WAAD,KACG4W,EAAMjB,OACLe,EAAaE,EAAMjB,QAEnB,kBAACmB,EAAc9W,YCbE0W,CAAaf,QCJhDqB,cAEAC,IAASF,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFG,SAASC,eAAe,S5BUnB,SAAkBtY,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIsY,IACpBC,GACAva,OAAO0B,SAAS4W,MAEJkC,SAAWxa,OAAO0B,SAAS8Y,OAIvC,OAGFxa,OAAOG,iBAAiB,QAAQ,WAC9B,IAAM2B,EAAK,UAAMyY,GAAN,sBAEP/Y,IAgEV,SAAiCM,EAAeC,GAE9C0Y,MAAM3Y,EAAO,CACX4Y,QAAS,CAAE,iBAAkB,YAE5BvY,MAAK,SAAAyH,GAEJ,IAAM+Q,EAAc/Q,EAAS8Q,QAAQE,IAAI,gBAEnB,MAApBhR,EAASlB,QACO,MAAfiS,IAA8D,IAAvCA,EAAY9O,QAAQ,cAG5C7J,UAAUC,cAAc4Y,MAAM1Y,MAAK,SAAAC,GACjCA,EAAa0Y,aAAa3Y,MAAK,WAC7BnC,OAAO0B,SAASqZ,eAKpBlZ,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAoY,CAAwBlZ,EAAOC,GAI/BC,UAAUC,cAAc4Y,MAAM1Y,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,O4BtC/BE,K","file":"static/js/main.2a43ac18.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      });\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","export const formatDate = (value: number, delta: number) => {\r\n  if (!value) return '';\r\n\r\n  let sDate = Math.floor(value - 25569) * 86400;\r\n  let lDate = new Date(sDate * 1000);\r\n  let d = lDate.getDate();\r\n  let dd = d < 10 ? '0' + d : d;\r\n  let yyyy = lDate.getFullYear();\r\n  let mon = lDate.getMonth() + 1;\r\n  let mm = mon < 10 ? '0' + mon : mon;\r\n\r\n  return yyyy + delta + '-' + mm + '-' + dd;\r\n};\r\n\r\nexport const getMiddleDate = (start: number, end: number) => {\r\n  if (!start) return '';\r\n\r\n  let sDate = Math.floor(start - 25569) * 86400;\r\n  let tDate = Math.floor(end - 25569) * 86400;\r\n  let lDate = new Date(((sDate + tDate) / 2) * 1000);\r\n  let d = lDate.getDate();\r\n  let dd = d < 10 ? '0' + d : d;\r\n  let yyyy = lDate.getFullYear();\r\n  let mon = lDate.getMonth() + 1;\r\n  let mm = mon < 10 ? '0' + mon : mon;\r\n\r\n  return yyyy + '-' + mm + '-' + dd;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabPanel;\r\n","export const colorSet = [\r\n  '#808000',\r\n  '#FFFF00',\r\n  '#00FF00',\r\n  '#00FFFF',\r\n  '#FF00FF',\r\n  '#0000FF',\r\n  '#FF0000',\r\n  '#000080',\r\n  '#008080',\r\n  '#008000',\r\n  '#800080',\r\n  '#800000',\r\n  '#808080',\r\n  '#FEC433',\r\n  '#C0C0C0'\r\n];\r\n","export const SERVER_URL = 'http://52.254.23.171:7000/api';\r\n\r\nexport const LOCAL_URL = 'http://127.0.0.1:7000/api';\r\n\r\nexport const BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? SERVER_URL : LOCAL_URL;\r\n\r\nexport const SYSTEMS_FILE1 = 'static/excel/systems_dataset_v3.xlsx';\r\n\r\nexport const SYSTEMS_FILE2 = 'static/excel/lunar_systems_dataset_v3.xlsx';\r\n\r\nexport const USER_FILE = 'static/excel/users_dataset_v2.xlsx';\r\n\r\nexport const DATA_FILE = 'static/excel/dataset_v3.xlsx';\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Plot from 'react-plotly.js';\r\nimport useWindowSize from 'src/hooks/useWindowSize';\r\nimport { formatDate } from 'src/utils/formatDate';\r\n\r\ninterface Axis {\r\n  start: number;\r\n  stop: number;\r\n  step: number;\r\n}\r\n\r\ninterface GanttChartsProps {\r\n  className?: string;\r\n  traces: any[];\r\n  startDate: number;\r\n  axis: Axis;\r\n}\r\n\r\nconst GanttChart: FC<GanttChartsProps> = ({ traces, startDate, axis }) => {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={traces}\r\n      layout={{\r\n        width: size.width * 0.7,\r\n        xaxis: {\r\n          title: '',\r\n          titlefont: {\r\n            size: 10,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          range: [formatDate(startDate, -1), formatDate(startDate, 7)],\r\n          dtick: 'M12',\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          title: 'Frequency (GHZ)',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          range: [axis.start, axis.stop],\r\n          dtick: axis.step,\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        legend: {\r\n          orientation: 'h',\r\n          xanchor: 'left',\r\n          traceorder: 'normal',\r\n          font: {\r\n            family: 'sans-serif',\r\n            size: 12,\r\n            color: '#000'\r\n          },\r\n          bordercolor: '#212529',\r\n          borderwidth: 1,\r\n          tracegroupgap: 100\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 80,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        showlegend: true\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nGanttChart.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default GanttChart;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from '@material-ui/core';\r\nimport { formatDate } from 'src/utils/formatDate';\r\n\r\ninterface SystemTableProps {\r\n  className?: string;\r\n  rows: any[];\r\n  columns: any[];\r\n}\r\n\r\nconst SystemTable: FC<SystemTableProps> = ({ rows, columns }) => {\r\n  const renderColumn = (name: string, row: any, idx: number, index: number) => {\r\n    if (idx !== 0) {\r\n      switch (name) {\r\n        case 'SFreq_GHz':\r\n        case 'EFreq_GHz':\r\n          return row[name].toFixed(7);\r\n        case 'SDate':\r\n        case 'EDate':\r\n          return formatDate(row[name], 0);\r\n        default:\r\n          return row[name];\r\n      }\r\n    } else {\r\n      return index + 1;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableContainer style={{ maxHeight: 440 }}>\r\n      <Table\r\n        stickyHeader\r\n        aria-label=\"sticky table\"\r\n        className=\"customized-gantt-chart-table\"\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align=\"center\">\r\n                {column.name.toUpperCase()}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow\r\n              hover\r\n              key={`${row.Chart_Type.split(' ').join('_')}_${index}`}\r\n            >\r\n              {columns.map((column, idx) => (\r\n                <TableCell key={column.id} align=\"center\">\r\n                  {renderColumn(column.id, row, idx, index)}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nSystemTable.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SystemTable;\r\n","import React, { useState, useEffect, FC, ChangeEvent } from 'react';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport PropTypes from 'prop-types';\r\nimport * as xlsx from 'xlsx';\r\nimport _ from 'underscore';\r\nimport {\r\n  AppBar,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from 'src/components/TabPanel';\r\nimport { colorSet } from '../colors';\r\nimport { formatDate } from 'src/utils/formatDate';\r\nimport { SYSTEMS_FILE1 } from 'src/constants';\r\nimport { Chart } from 'src/types/system';\r\nimport GanttChart from './GanttChart';\r\nimport SystemTable from './SystemTable';\r\n\r\ninterface SystemGanttProps {\r\n  className?: string;\r\n  status: Status;\r\n}\r\n\r\ninterface Axis {\r\n  start: number;\r\n  stop: number;\r\n  step: number;\r\n}\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\n\r\nconst columns = [\r\n  { id: 'no', name: 'no' },\r\n  { id: 'System', name: 'system' },\r\n  { id: 'Chart_Type', name: 'band' },\r\n  { id: 'Link_Type', name: 'link type' },\r\n  { id: 'SFreq_GHz', name: 'min freq (ghz)' },\r\n  { id: 'EFreq_GHz', name: 'max freq (ghz)' },\r\n  { id: 'SDate', name: 'start date' },\r\n  { id: 'EDate', name: 'end date' }\r\n];\r\n\r\nconst INIT_AXIS: Axis = {\r\n  start: 0,\r\n  stop: 0,\r\n  step: 0\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  appBar: {\r\n    boxShadow: theme.shadows[1]\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst SystemGantt: FC<SystemGanttProps> = ({ status }) => {\r\n  const [tab, setTab] = useState(0);\r\n  const [source, setSource] = useState([]);\r\n  const [traces, setTraces] = useState([]);\r\n  const [startDate, setStartDate] = useState(0);\r\n  const [axis, setAxis] = useState(INIT_AXIS);\r\n  const [rows, setRows] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let sheetList: Object = {};\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE1, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n\r\n      workbook.SheetNames.forEach(item => {\r\n        let worksheetList = [];\r\n        let worksheet: any = xlsx.utils.sheet_to_json(workbook.Sheets[item], {\r\n          header: 1\r\n        });\r\n        sheetList[item] = [];\r\n\r\n        worksheet.forEach((el: any, index: number) => {\r\n          if (index > 0) worksheetList.push(_.object(worksheet[0], el));\r\n        });\r\n        sheetList[item] = worksheetList;\r\n      });\r\n\r\n      sheetList[Object.keys(sheetList)[0]].forEach(item => {\r\n        item['data'] = sheetList[Object.keys(sheetList)[1]].filter(\r\n          el => el.Chart_Type === status.band && el.Item_No === status.scope\r\n        );\r\n      });\r\n      setSource(sheetList[Object.keys(sheetList)[0]]);\r\n    };\r\n\r\n    req.send();\r\n  }, [status.scope, status.band]);\r\n\r\n  useEffect(() => {\r\n    let x_start = 0,\r\n      y_start = 0,\r\n      y_step = 0,\r\n      y_stop = 0;\r\n    let traceList = [];\r\n\r\n    source.forEach((item: Chart) => {\r\n      let preItem = item;\r\n\r\n      if (item.Chart_Type === status.band) {\r\n        if (Object.keys(item).includes('data') && item.data.length > 0) {\r\n          let idx = item.data.map(dt => dt.System).indexOf(status.system);\r\n          item.data.splice(\r\n            item.data.length - 1,\r\n            0,\r\n            item.data.splice(idx, 1)[0]\r\n          );\r\n          x_start = item.data[0].SDate;\r\n        } else {\r\n          x_start = item.X_Axis_Start;\r\n        }\r\n\r\n        y_step = item.Y_Axis_Step_Size;\r\n        y_start = item.Y_Axis_Start;\r\n        y_stop = item.Y_Axis_Stop;\r\n\r\n        if (Object.keys(preItem).includes('data') && preItem.data.length > 0) {\r\n          item.data.forEach((dt, index) => {\r\n            let item_date = new Date(dt.SDate);\r\n            let c_date = new Date(x_start);\r\n            let y_point =\r\n              dt.SFreq_GHz + Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / 2;\r\n            let isLegend = true;\r\n\r\n            if (item_date < c_date) {\r\n              x_start = dt.SDate;\r\n            }\r\n\r\n            item.data.forEach((d, idx) => {\r\n              if (idx < index && d.System === dt.System) {\r\n                index = idx;\r\n                isLegend = false;\r\n              }\r\n            });\r\n\r\n            let trace = {\r\n              name: dt.System,\r\n              x: [formatDate(dt.SDate, 0), formatDate(dt.EDate, 0)],\r\n              y: [y_point, y_point],\r\n              mode: 'lines',\r\n              line: {\r\n                width:\r\n                  (Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / (y_step * 10)) * 340,\r\n                color: colorSet[index % colorSet.length]\r\n              },\r\n              showlegend: isLegend\r\n            };\r\n\r\n            traceList.push(trace);\r\n          });\r\n        } else {\r\n          let trace = {\r\n            name: '',\r\n            x: [x_start, x_start + 10],\r\n            y: [y_start, y_start],\r\n            mode: 'lines',\r\n            line: {\r\n              width: (Math.abs(y_start - y_stop) / (y_step * 10)) * 340,\r\n              color: 'transparent'\r\n            },\r\n            showlegend: false,\r\n            marker: {\r\n              size: 12,\r\n              shape: [\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew',\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew'\r\n              ]\r\n            }\r\n          };\r\n          traceList.push(trace);\r\n        }\r\n        setRows(item.data);\r\n      }\r\n    });\r\n    setTraces(traceList);\r\n    setStartDate(x_start);\r\n    setAxis({ start: y_start, stop: y_stop, step: y_step });\r\n  }, [status.band, status.system, source]);\r\n\r\n  const handleChange = (event: ChangeEvent<{}>, value: number) => {\r\n    setTab(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12} className={classes.title}>\r\n          <Typography variant=\"h6\" component=\"strong\">\r\n            Band Overview – Commercial Relay Systems\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n              >\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  aria-label=\"Gantt and Data View\"\r\n                >\r\n                  <Tab label=\"Gantt View\" />\r\n                  <Tab label=\"Data View\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews index={tab}>\r\n                <TabPanel value={tab} index={0}>\r\n                  <GanttChart\r\n                    traces={traces}\r\n                    startDate={startDate}\r\n                    axis={axis}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <SystemTable rows={rows} columns={columns} />\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nSystemGantt.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SystemGantt;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from '@material-ui/core';\r\n\r\ninterface UserTableProps {\r\n  className?: string;\r\n  rows: any[];\r\n  columns: any[];\r\n}\r\n\r\nconst UserTable: FC<UserTableProps> = ({ rows, columns }) => {\r\n  const renderColumn = (name: string, row: any, idx: number, index: number) => {\r\n    return idx === 0 ? index + 1 : row[name];\r\n  };\r\n\r\n  return (\r\n    <TableContainer style={{ maxHeight: 440 }}>\r\n      <Table\r\n        stickyHeader\r\n        aria-label=\"sticky table\"\r\n        className=\"customized-gantt-chart-table\"\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align=\"center\">\r\n                {column.name.toUpperCase()}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow hover key={`user-row-${index}`}>\r\n              {columns.map((column, idx) => (\r\n                <TableCell key={column.id} align=\"center\">\r\n                  {renderColumn(column.id, row, idx, index)}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nUserTable.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserTable;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Plot from 'react-plotly.js';\r\nimport useWindowSize from 'src/hooks/useWindowSize';\r\n\r\ninterface Axis {\r\n  start: number;\r\n  stop: number;\r\n}\r\n\r\ninterface GanttChartsProps {\r\n  className?: string;\r\n  traces: any[];\r\n  axis: Axis;\r\n}\r\n\r\nconst GanttChart: FC<GanttChartsProps> = ({ traces, axis }) => {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={traces}\r\n      layout={{\r\n        width: size.width * 0.7,\r\n        xaxis: {\r\n          title: '',\r\n          titlefont: {\r\n            size: 10,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          dtick: 'M12',\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          range: [axis.start, axis.stop],\r\n          dtick: 1,\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 80,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        showlegend: false\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nGanttChart.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default GanttChart;\r\n","import React, { useState, useEffect, FC, ChangeEvent } from 'react';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport PropTypes from 'prop-types';\r\nimport * as xlsx from 'xlsx';\r\nimport {\r\n  AppBar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from 'src/components/TabPanel';\r\nimport { colorSet } from '../colors';\r\nimport { formatDate } from 'src/utils/formatDate';\r\nimport { USER_FILE } from 'src/constants';\r\nimport UserTable from './UserTable';\r\nimport GanttChart from './GanttChart';\r\n\r\ninterface UserGanttProps {\r\n  className?: string;\r\n  scope: number;\r\n  system: string;\r\n}\r\n\r\ninterface User {\r\n  User: string;\r\n  System: string;\r\n  SDate: Date;\r\n  EDate: Date;\r\n}\r\n\r\nconst columns = [\r\n  { id: 'no', name: 'no' },\r\n  { id: 'User', name: 'user' },\r\n  { id: 'System', name: 'system' },\r\n  { id: 'SDate', name: 'start date' },\r\n  { id: 'EDate', name: 'end date' }\r\n];\r\n\r\nconst INIT_Y_AXIS = {\r\n  start: 0,\r\n  stop: 0\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  appBar: {\r\n    boxShadow: theme.shadows[1]\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst UserGantt: FC<UserGanttProps> = ({ scope, system }) => {\r\n  const [tab, setTab] = useState(0);\r\n  const [source, setSource] = useState([]);\r\n  const [traces, setTraces] = useState([]);\r\n  const [axis, setAxis] = useState(INIT_Y_AXIS);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', USER_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const worksheet: any = xlsx.utils.sheet_to_json(\r\n        workbook.Sheets[workbook.SheetNames[0]],\r\n        {\r\n          header: 1\r\n        }\r\n      );\r\n\r\n      worksheet.forEach((item, idx: number) => {\r\n        if (idx > 0 && system === item[1])\r\n          result.push({\r\n            User: item[0],\r\n            System: item[1],\r\n            SDate: formatDate(item[2], 0),\r\n            EDate: formatDate(item[3], 0)\r\n          });\r\n      });\r\n      setSource(result);\r\n    };\r\n\r\n    req.send();\r\n  }, [scope, system]);\r\n\r\n  useEffect(() => {\r\n    const start = (source.length / 5) * 3;\r\n    const stop = 0;\r\n    let traceList = [];\r\n\r\n    source.forEach((item: User, idx: number) => {\r\n      var trace = {\r\n        x: [item.SDate, item.EDate],\r\n        y: [item.User, item.User],\r\n        name: item.User,\r\n        mode: 'lines',\r\n        line: { width: 20, color: colorSet[idx % colorSet.length] }\r\n      };\r\n      traceList.push(trace);\r\n    });\r\n\r\n    setTraces(traceList);\r\n    setAxis({ start, stop });\r\n  }, [source]);\r\n\r\n  const handleChange = (event: ChangeEvent<{}>, value: number) => {\r\n    setTab(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Typography variant=\"h6\" component=\"strong\">\r\n            Space Missions Using Commercial Systems\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n              >\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  aria-label=\"Gantt and Data View\"\r\n                >\r\n                  <Tab label=\"Gantt View\" />\r\n                  <Tab label=\"Data View\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews index={tab}>\r\n                <TabPanel value={tab} index={0}>\r\n                  <GanttChart axis={axis} traces={traces} />\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <UserTable rows={source} columns={columns} />\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nUserGantt.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserGantt;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport { Select, MenuItem, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport { SYSTEMS_FILE1 } from 'src/constants';\r\n\r\ninterface SystemMenusProps {\r\n  className?: string;\r\n  system: string;\r\n  onChange: (name: string, value: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst SystemMenus: FC<SystemMenusProps> = ({ className, system, onChange }) => {\r\n  const [systems, setSystems] = useState<string[]>([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result: string[] = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE1, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const sdata = workbook.Sheets[workbook.SheetNames[1]];\r\n      const worksheet: any = xlsx.utils.sheet_to_json(sdata, { header: 1 });\r\n\r\n      worksheet.forEach((el: Array<any>, index: number) => {\r\n        index > 0 && !result.includes(el[0]) && result.push(el[0]);\r\n      });\r\n      setSystems(result);\r\n    };\r\n\r\n    req.send();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    systems.length > 0 && onChange('system', systems[0]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [systems]);\r\n\r\n  const handleChange = (event): void => {\r\n    const { name, value } = event.target;\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"system\"\r\n      value={system}\r\n      onChange={handleChange}\r\n      className={clsx(classes.root, className)}\r\n      defaultValue=\"none\"\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select System\r\n      </MenuItem>\r\n      {systems.map((item: string) => (\r\n        <MenuItem value={item} key={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nSystemMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  system: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default SystemMenus;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport { Select, MenuItem, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport { SYSTEMS_FILE1 } from 'src/constants';\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\ninterface BandMenusProps {\r\n  className?: string;\r\n  status: Status;\r\n  onUids: (param: number[]) => void;\r\n  onChange: (name: string, value: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst BandMenus: FC<BandMenusProps> = ({\r\n  className,\r\n  status,\r\n  onUids,\r\n  onChange\r\n}) => {\r\n  const [bands, setBands] = useState<string[]>([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result: string[] = [];\r\n    let tuids: number[] = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE1, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = (e: ProgressEvent<EventTarget>) => {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const sdata = workbook.Sheets[workbook.SheetNames[1]];\r\n      const worksheet: any = xlsx.utils.sheet_to_json(sdata, { header: 1 });\r\n\r\n      worksheet.forEach((el: any) => {\r\n        if (el[0] === status.system) {\r\n          el[2] && tuids.push(el[2]);\r\n          !result.includes(el[1]) && result.push(el[1]);\r\n        }\r\n      });\r\n      setBands(result);\r\n      onUids(tuids);\r\n    };\r\n\r\n    req.send();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [status.system]);\r\n\r\n  useEffect(() => {\r\n    bands.length > 0 && onChange('band', bands[0]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bands]);\r\n\r\n  const handleChange = (event): void => {\r\n    const { name, value } = event.target;\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"band\"\r\n      value={status.band}\r\n      onChange={handleChange}\r\n      className={clsx(classes.root, className)}\r\n      defaultValue=\"none\"\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select Frequency Band\r\n      </MenuItem>\r\n      {bands.map(item => (\r\n        <MenuItem value={item} key={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nBandMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  onUids: PropTypes.func,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default BandMenus;\r\n","import React, { useState, useEffect, FC, ChangeEvent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport _ from 'underscore';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  colors,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { Band } from 'src/types/band';\r\nimport { DATA_FILE } from 'src/constants';\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\ninterface SpectrumProps {\r\n  className?: string;\r\n  uids: number[];\r\n  status: Status;\r\n  onContent: (param: string) => void;\r\n  onChange: (name: string, value: string | number) => void;\r\n}\r\n\r\nconst calWidth = (start: number, end: number, length: number) => {\r\n  const value = (Math.abs(start - end) / length) * 95;\r\n  return { width: value + '%' };\r\n};\r\n\r\nconst getKey = (value: string): string => {\r\n  return value.split(' ').join('_');\r\n};\r\n\r\nconst getStyle = (dt: Band, length: number) => {\r\n  const len = 40 / length + 'vh';\r\n  let value = {};\r\n\r\n  if (dt.vertical) {\r\n    value = {\r\n      writingMode: 'vertical-rl',\r\n      backgroundColor: dt.hex,\r\n      minHeight: len,\r\n      maxHeight: len,\r\n      transform: 'rotate(-180deg)'\r\n    };\r\n  } else {\r\n    value = {\r\n      backgroundColor: dt.hex,\r\n      minHeight: len,\r\n      maxHeight: len,\r\n      textAlign: 'center'\r\n    };\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    position: 'relative'\r\n  },\r\n  grid: {\r\n    minHeight: theme.spacing(2),\r\n    '&:before': {\r\n      content: 'attr(data-start)'\r\n    },\r\n    '&:after': {\r\n      content: 'attr(data-end)',\r\n      position: 'absolute',\r\n      right: theme.spacing(3),\r\n      top: 0\r\n    }\r\n  },\r\n  block: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    border: '1px solid #000',\r\n    cursor: 'pointer'\r\n  },\r\n  scoped: {\r\n    border: `3px dashed ${colors.red[700]}`\r\n  },\r\n  service: {\r\n    fontSize: theme.typography.pxToRem(12)\r\n  },\r\n  remark: {\r\n    fontSize: theme.typography.pxToRem(10)\r\n  },\r\n  announce: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  box: {\r\n    width: '100%',\r\n    minHeight: theme.spacing(30),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  clicked: {\r\n    boxShadow: theme.shadows[15],\r\n    border: `4px dashed ${colors.red[700]}`,\r\n    zIndex: 1000\r\n  }\r\n}));\r\n\r\nconst Spectrum: FC<SpectrumProps> = ({\r\n  className,\r\n  uids,\r\n  status,\r\n  onChange,\r\n  onContent\r\n}) => {\r\n  const [source, setSource] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const classes = useStyles();\r\n  const amount = 8;\r\n\r\n  useEffect(() => {\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', DATA_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = (e: ProgressEvent<EventTarget>) => {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const worksheet: any = xlsx.utils.sheet_to_json(\r\n        workbook.Sheets[status.band],\r\n        {\r\n          header: 1\r\n        }\r\n      );\r\n      let sheetList = [];\r\n      let result = [];\r\n\r\n      if (Object.keys(worksheet).length > 2) {\r\n        worksheet.forEach((el: any, idx: number) => {\r\n          if (idx > 0) sheetList.push(_.object(worksheet[0], el));\r\n        });\r\n\r\n        sheetList.forEach((item: Band) => {\r\n          const data = sheetList.filter(el => item.master === el.master);\r\n          const count = _.filter(result, el => item.master === el.master);\r\n\r\n          if (count.length < 1 && item.master) {\r\n            result.push({\r\n              master: item.master,\r\n              start: item.start,\r\n              end: item.end,\r\n              data: data,\r\n              vertical: item.vertical\r\n            });\r\n          }\r\n        });\r\n        setSource(result);\r\n        setTotalPage(Object.keys(result).length / amount);\r\n        onContent(result[0].data[0].content);\r\n      } else {\r\n        handleInit();\r\n      }\r\n    };\r\n\r\n    req.send();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [status.band]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(source).length > 0) {\r\n      const pointS = source[(page - 1) * amount];\r\n      const pointF =\r\n        page < totalPage\r\n          ? source[page * amount - 1]\r\n          : source[totalPage * amount - 1];\r\n\r\n      if (pointF && Object.keys(pointF).includes('end')) {\r\n        const start = pointS.start ? pointS.start : 0;\r\n        const end = pointF.end ? pointF.end : 0;\r\n        const len = Math.abs(start - end);\r\n\r\n        let data = Object.values(source).filter(\r\n          (item: Band) =>\r\n            item.master > (page - 1) * amount && item.master <= page * amount\r\n        );\r\n        setLength(len);\r\n        setDataSource(data);\r\n      }\r\n    } else {\r\n      setLength(0);\r\n      setDataSource([]);\r\n    }\r\n  }, [page, source, totalPage]);\r\n\r\n  const handleInit = (): void => {\r\n    setSource([]);\r\n    setTotalPage(0);\r\n    setPage(1);\r\n    onChange('scope', null);\r\n    onContent('');\r\n  };\r\n\r\n  const handleClick = (value: number, content: string): void => {\r\n    onChange('scope', value);\r\n    onContent(content);\r\n  };\r\n\r\n  const handleChangePage = (e: ChangeEvent, page: number): void => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ position: 'relative' }}\r\n        className={clsx(className, classes.root)}\r\n      >\r\n        {Object.keys(dataSource).length === 0 && (\r\n          <Box\r\n            border={1}\r\n            borderColor={colors.blue[200]}\r\n            className={classes.box}\r\n            textAlign=\"center\"\r\n          >\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              No Band Data Entered Yet.\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        {Object.keys(dataSource).length > 0 &&\r\n          Object.values(dataSource).map((el, idx: number) => (\r\n            <Grid\r\n              item\r\n              key={el.master}\r\n              className={classes.grid}\r\n              style={calWidth(el.start, el.end, length)}\r\n              data-start={el.start}\r\n              data-end={idx === amount - 1 ? el.end : ''}\r\n            >\r\n              <Grid container alignItems=\"center\" justify=\"center\">\r\n                {el.data.map((dt: Band, index: number) => (\r\n                  <Tooltip\r\n                    key={`${getKey(dt.service)}-${idx}-${index}`}\r\n                    title={dt.service}\r\n                    arrow\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      md={12}\r\n                      onClick={() => handleClick(dt.Item_No, dt.content)}\r\n                      style={getStyle(dt, el.data.length)}\r\n                      className={clsx(\r\n                        classes.block,\r\n                        uids.includes(dt.Item_No) && classes.scoped,\r\n                        uids.includes(dt.Item_No) &&\r\n                          dt.Item_No === status.scope &&\r\n                          classes.clicked\r\n                      )}\r\n                    >\r\n                      {!dt.truncated ? (\r\n                        <>\r\n                          <Typography className={classes.service}>\r\n                            {dt.service}\r\n                          </Typography>\r\n                          {dt.remark !== '' && (\r\n                            <Typography className={classes.remark}>\r\n                              {dt.remark}\r\n                            </Typography>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <Typography className={classes.service}>\r\n                          {dt.truncated}\r\n                        </Typography>\r\n                      )}\r\n                    </Grid>\r\n                  </Tooltip>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        className={classes.announce}\r\n      >\r\n        <Grid item md={9}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            This chart will only work with 1024 x 768. We recommend full screen\r\n            mode.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item md={12}>\r\n              <Pagination\r\n                count={Math.ceil(totalPage)}\r\n                page={page}\r\n                defaultPage={1}\r\n                variant=\"outlined\"\r\n                shape=\"rounded\"\r\n                onChange={handleChangePage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nSpectrum.propTypes = {\r\n  className: PropTypes.string,\r\n  uids: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  onContent: PropTypes.func\r\n};\r\n\r\nexport default Spectrum;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Grid, Typography, Box, makeStyles, Theme } from '@material-ui/core';\r\ninterface ContentProps {\r\n  className?: string;\r\n  content: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst Content: FC<ContentProps> = ({ className, content }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={clsx(className, classes.root)}\r\n    >\r\n      <Grid item md={4}>\r\n        <Typography variant=\"h6\" component=\"strong\">\r\n          Regulatory Notes\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={8} />\r\n      <Grid item md={12}>\r\n        <Box borderColor=\"primary.main\" border={2} borderRadius={5} padding={2}>\r\n          <Typography variant=\"body2\">{content}</Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  className: PropTypes.string,\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Content;\r\n","import React, { forwardRef, ReactElement, Ref, FC } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n  useMediaQuery,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & { children?: ReactElement<any, any> },\r\n  ref: Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  content: {\r\n    marginBottom: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst Alert: FC = () => {\r\n  const matches = useMediaQuery('(max-width: 1000px)');\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog open={matches} TransitionComponent={Transition} keepMounted>\r\n      <CssBaseline />\r\n      <DialogTitle>Screen Resolution Alert</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText className={classes.content}>\r\n          Your screen resolution is under 1024 x 768. We can't confirm your\r\n          resolution of this Spectrum Chart. Please Check your screen mode\r\n          again.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, FC } from 'react';\r\nimport { Grid, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport SystemGantt from './SystemGantt';\r\nimport UserGantt from './UserGantt';\r\nimport SystemMenus from './SystemMenus';\r\nimport BandMenus from './BandMenus';\r\nimport Spectrum from './Spectrum';\r\nimport Content from './Content';\r\nimport Alert from './Alert';\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\n\r\nconst initialStatus = {\r\n  system: 'none',\r\n  band: 'none',\r\n  scope: null\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  content: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n}));\r\n\r\nconst Commercial: FC = () => {\r\n  const [status, setStatus] = useState<Status>(initialStatus);\r\n  const [uids, setUids] = useState<number[]>([]);\r\n  const [content, setContent] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (name: string, value: string): void => {\r\n    setStatus(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleContent = (value: string): void => {\r\n    setContent(value);\r\n  };\r\n\r\n  const handleUids = (value: number[]) => {\r\n    setUids(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container alignItems=\"center\" spacing={3}>\r\n        <Grid item md={3}>\r\n          <SystemMenus system={status.system} onChange={handleChange} />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <BandMenus\r\n            status={status}\r\n            onChange={handleChange}\r\n            onUids={handleUids}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <Spectrum\r\n            uids={uids}\r\n            status={status}\r\n            onChange={handleChange}\r\n            onContent={handleContent}\r\n          />\r\n        </Grid>\r\n        {content && content !== '' && (\r\n          <Grid item md={12} className={classes.content}>\r\n            <Content content={content} />\r\n          </Grid>\r\n        )}\r\n        <Grid item md={12}>\r\n          <SystemGantt status={status} />\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <UserGantt scope={status.scope} system={status.system} />\r\n        </Grid>\r\n      </Grid>\r\n      <Alert />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Commercial;\r\n","export const colorSet = [\r\n  '#808000',\r\n  '#FFFF00',\r\n  '#00FF00',\r\n  '#00FFFF',\r\n  '#FF00FF',\r\n  '#0000FF',\r\n  '#FF0000',\r\n  '#000080',\r\n  '#008080',\r\n  '#008000',\r\n  '#800080',\r\n  '#800000',\r\n  '#808080',\r\n  '#FEC433',\r\n  '#C0C0C0'\r\n];\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Plot from 'react-plotly.js';\r\nimport useWindowSize from 'src/hooks/useWindowSize';\r\nimport { formatDate } from 'src/utils/formatDate';\r\n\r\ninterface Axis {\r\n  start: number;\r\n  stop: number;\r\n  step: number;\r\n}\r\n\r\ninterface GanttChartsProps {\r\n  className?: string;\r\n  traces: any[];\r\n  startDate: number;\r\n  annots: any[];\r\n  axis: Axis;\r\n}\r\n\r\nconst GanttChart: FC<GanttChartsProps> = ({\r\n  traces,\r\n  annots,\r\n  startDate,\r\n  axis\r\n}) => {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={traces}\r\n      layout={{\r\n        width: size.width * 0.85,\r\n        annotations: annots,\r\n        xaxis: {\r\n          title: '',\r\n          titlefont: {\r\n            size: 10,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          range: [formatDate(startDate, -1), formatDate(startDate, 7)],\r\n          dtick: 'M12',\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          title: 'Frequency (GHZ)',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          range: [axis.start, axis.stop],\r\n          dtick: axis.step,\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        legend: {\r\n          orientation: 'h',\r\n          xanchor: 'left',\r\n          traceorder: 'normal',\r\n          font: {\r\n            family: 'sans-serif',\r\n            size: 12,\r\n            color: '#000'\r\n          },\r\n          bordercolor: '#212529',\r\n          borderwidth: 1,\r\n          tracegroupgap: 100\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 80,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        showlegend: true\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nGanttChart.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default GanttChart;\r\n","import React, { FC, useState, ChangeEvent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TablePagination,\r\n  withStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { formatDate } from 'src/utils/formatDate';\r\nimport { useEffect } from 'react';\r\n\r\ninterface SystemTableProps {\r\n  className?: string;\r\n  rows: any[];\r\n  columns: any[];\r\n}\r\n\r\ninterface Status {\r\n  page: number;\r\n  limit: number;\r\n}\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: 'white'\r\n    },\r\n    '&:nth-of-type(even)': {\r\n      backgroundColor: colors.grey[300]\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nconst initialStatus: Status = {\r\n  page: 0,\r\n  limit: 5\r\n};\r\n\r\nconst SystemTable: FC<SystemTableProps> = ({ rows, columns }) => {\r\n  const [results, setResults] = useState<any[]>([]);\r\n  const [status, setStatus] = useState<Status>(initialStatus);\r\n\r\n  useEffect(() => {\r\n    const data = rows.slice(\r\n      status.page * status.limit,\r\n      (status.page + 1) * status.limit\r\n    );\r\n    setResults(data);\r\n  }, [status, rows]);\r\n\r\n  const renderColumn = (name: string, row: any, idx: number, index: number) => {\r\n    if (idx !== 0) {\r\n      switch (name) {\r\n        case 'SFreq_GHz':\r\n        case 'EFreq_GHz':\r\n          return row[name].toFixed(7);\r\n        case 'SDate':\r\n        case 'EDate':\r\n          return formatDate(row[name], 0);\r\n        default:\r\n          return row[name];\r\n      }\r\n    } else {\r\n      return index + 1;\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) =>\r\n    setStatus(prevState => ({ ...prevState, page: newPage }));\r\n\r\n  const handleChangeLimit = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setStatus(prevState => ({\r\n      ...prevState,\r\n      limit: parseInt(event.target.value, 10),\r\n      page: 0\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <TableContainer style={{ maxHeight: 440 }}>\r\n      <Table\r\n        stickyHeader\r\n        aria-label=\"sticky table\"\r\n        className=\"customized-gantt-chart-table\"\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align=\"center\">\r\n                {column.name.toUpperCase()}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {results.map((row, index) => (\r\n            <StyledTableRow hover key={index}>\r\n              {columns.map((column, idx) => (\r\n                <TableCell key={column.id} align=\"center\">\r\n                  {renderColumn(column.id, row, idx, index)}\r\n                </TableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={status.limit}\r\n        page={status.page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeLimit}\r\n      />\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nSystemTable.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SystemTable;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as xlsx from 'xlsx';\r\nimport _ from 'underscore';\r\nimport { Grid, Card, CardContent, Typography, Theme } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { colorSet } from '../colors';\r\nimport { formatDate, getMiddleDate } from 'src/utils/formatDate';\r\nimport { SYSTEMS_FILE2 } from 'src/constants';\r\nimport { Chart } from 'src/types/system';\r\nimport GanttChart from './GanttChart';\r\nimport SystemTable from './SystemTable';\r\n\r\ninterface SystemGanttProps {\r\n  className?: string;\r\n  status: Status;\r\n}\r\n\r\ninterface Axis {\r\n  start: number;\r\n  stop: number;\r\n  step: number;\r\n}\r\n\r\ninterface Status {\r\n  link: string;\r\n  band: string;\r\n}\r\n\r\nconst columns = [\r\n  { id: 'no', name: 'no' },\r\n  { id: 'System', name: 'system' },\r\n  { id: 'Link_Type', name: 'link type' },\r\n  { id: 'SFreq_GHz', name: 'min freq (ghz)' },\r\n  { id: 'EFreq_GHz', name: 'max freq (ghz)' },\r\n  { id: 'SDate', name: 'start date' },\r\n  { id: 'EDate', name: 'end date' }\r\n];\r\n\r\nconst INIT_AXIS: Axis = {\r\n  start: 0,\r\n  stop: 0,\r\n  step: 0\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  appBar: {\r\n    boxShadow: theme.shadows[1]\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst SystemGantt: FC<SystemGanttProps> = ({ status }) => {\r\n  const [source, setSource] = useState([]);\r\n  const [traces, setTraces] = useState([]);\r\n  const [startDate, setStartDate] = useState(0);\r\n  const [axis, setAxis] = useState(INIT_AXIS);\r\n  const [annots, setAnnots] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (status.band === 'none') return;\r\n\r\n    let sheetList: Object = {};\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE2, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n\r\n      workbook.SheetNames.forEach(item => {\r\n        let worksheetList = [];\r\n        let worksheet: any = xlsx.utils.sheet_to_json(workbook.Sheets[item], {\r\n          header: 1\r\n        });\r\n        sheetList[item] = [];\r\n\r\n        worksheet.forEach((el: any, index: number) => {\r\n          if (index > 0) worksheetList.push(_.object(worksheet[0], el));\r\n        });\r\n        sheetList[item] = worksheetList;\r\n      });\r\n      sheetList[Object.keys(sheetList)[0]].forEach(item => {\r\n        item['data'] = sheetList[status.band];\r\n      });\r\n      setSource(sheetList[Object.keys(sheetList)[0]]);\r\n    };\r\n\r\n    req.send();\r\n  }, [status.band]);\r\n\r\n  useEffect(() => {\r\n    let x_start = 0,\r\n      y_start = 0,\r\n      y_step = 0,\r\n      y_stop = 0;\r\n    let traceList = [],\r\n      annotList = [],\r\n      rowData = [];\r\n\r\n    source.forEach((item: Chart) => {\r\n      let preItem = item;\r\n\r\n      if (item.Chart_Type === status.band) {\r\n        if (Object.keys(item).includes('data') && item.data.length > 0) {\r\n          let idx = item.data.map(dt => dt.Link_Type).indexOf(status.link);\r\n          item.data.splice(\r\n            item.data.length - 1,\r\n            0,\r\n            item.data.splice(idx, 1)[0]\r\n          );\r\n          x_start = item.data[0].SDate;\r\n        } else {\r\n          x_start = item.X_Axis_Start;\r\n        }\r\n\r\n        y_step = item.Y_Axis_Step_Size;\r\n        y_start = item.Y_Axis_Start;\r\n        y_stop = item.Y_Axis_Stop;\r\n\r\n        if (Object.keys(preItem).includes('data') && preItem.data.length > 0) {\r\n          item.data.forEach((dt, index) => {\r\n            let item_date = new Date(dt.SDate);\r\n            let c_date = new Date(x_start);\r\n            let y_point =\r\n              dt.SFreq_GHz + Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / 2;\r\n            let isLegend = true;\r\n\r\n            if (item_date < c_date) {\r\n              x_start = dt.SDate;\r\n            }\r\n\r\n            item.data.forEach((d, idx) => {\r\n              if (idx < index && d.System === dt.System) {\r\n                index = idx;\r\n              }\r\n            });\r\n\r\n            let trace = {\r\n              name: dt.Id + '. ' + dt.System,\r\n              x: [formatDate(dt.SDate, 0), formatDate(dt.EDate, 0)],\r\n              y: [y_point, y_point],\r\n              mode: 'lines',\r\n              line: {\r\n                width:\r\n                  (Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / (y_step * 10)) * 340,\r\n                color: colorSet[index % colorSet.length]\r\n              },\r\n              showlegend: isLegend\r\n            };\r\n            const annot = {\r\n              x: getMiddleDate(dt.SDate, dt.EDate),\r\n              y: y_point,\r\n              text: dt.Id,\r\n              showarrow: false,\r\n              font: { color: 'black', size: 14 }\r\n            };\r\n            annotList.push(annot);\r\n            traceList.push(trace);\r\n          });\r\n        } else {\r\n          let trace = {\r\n            name: '',\r\n            x: [x_start, x_start + 10],\r\n            y: [y_start, y_start],\r\n            mode: 'lines',\r\n            line: {\r\n              width: (Math.abs(y_start - y_stop) / (y_step * 10)) * 340,\r\n              color: 'transparent'\r\n            },\r\n            showlegend: false,\r\n            marker: {\r\n              size: 12,\r\n              shape: [\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew',\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew'\r\n              ]\r\n            }\r\n          };\r\n          traceList.push(trace);\r\n        }\r\n        const isValid = rows.length > 1 || rows.every(item => Boolean(item));\r\n        rowData = isValid ? item.data : [];\r\n      }\r\n    });\r\n\r\n    const isValid =\r\n      rowData.length > 1 ||\r\n      rowData.every(item => Object.keys(item).every(key => Boolean(item[key])));\r\n\r\n    if (isValid) {\r\n      setRows(rowData);\r\n      setTraces(traceList);\r\n      setAnnots(annotList);\r\n    } else {\r\n      setRows([]);\r\n      setTraces([]);\r\n      setAnnots([]);\r\n    }\r\n\r\n    setStartDate(x_start);\r\n    setAxis({ start: y_start, stop: y_stop, step: y_step });\r\n    // eslint-disable-next-line\r\n  }, [status, source]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12} className={classes.title}>\r\n          <Typography variant=\"h6\" component=\"strong\">\r\n            Frequency-Bandwidth-Time (FBT) View\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <GanttChart\r\n                traces={traces}\r\n                startDate={startDate}\r\n                axis={axis}\r\n                annots={annots}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <SystemTable rows={rows} columns={columns} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nSystemGantt.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SystemGantt;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport { Select, MenuItem, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport { SYSTEMS_FILE2 } from 'src/constants';\r\n\r\ninterface Status {\r\n  band: string;\r\n  link: string;\r\n}\r\n\r\ninterface SystemMenusProps {\r\n  className?: string;\r\n  status: Status;\r\n  onChange: (name: string, value: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst LinkMenus: FC<SystemMenusProps> = ({ className, status, onChange }) => {\r\n  const [links, setLinks] = useState<string[]>([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result: string[] = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE2, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const sdata = workbook.Sheets[status.band];\r\n      const worksheet: any = xlsx.utils.sheet_to_json(sdata, { header: 1 });\r\n\r\n      worksheet.forEach((el: Array<any>, index: number) => {\r\n        // @ts-ignore\r\n        index > 0 && !result.includes(el[2]) && result.push(el[2]);\r\n      });\r\n      setLinks(result);\r\n    };\r\n\r\n    req.send();\r\n  }, [status.band]);\r\n\r\n  useEffect(() => {\r\n    links.length > 0 && onChange('link', links[0]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [links]);\r\n\r\n  const handleChange = (event): void => {\r\n    const { name, value } = event.target;\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"link\"\r\n      value={status.link}\r\n      onChange={handleChange}\r\n      className={clsx(classes.root, className)}\r\n      defaultValue=\"none\"\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select Link Type\r\n      </MenuItem>\r\n      {links.map((item: string) => (\r\n        <MenuItem value={item} key={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nLinkMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  // @ts-ignore\r\n  status: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default LinkMenus;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport { Select, MenuItem, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport { SYSTEMS_FILE2 } from 'src/constants';\r\n\r\ninterface Status {\r\n  link: string;\r\n  band: string;\r\n}\r\ninterface BandMenusProps {\r\n  className?: string;\r\n  status: Status;\r\n  onChange: (name: string, value: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst BandMenus: FC<BandMenusProps> = ({ className, status, onChange }) => {\r\n  const [bands, setBands] = useState<string[]>([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE2, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = (e: ProgressEvent<EventTarget>) => {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      workbook.SheetNames.shift()\r\n      setBands(workbook.SheetNames);\r\n    };\r\n\r\n    req.send();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    bands.length > 0 && onChange('band', bands[0]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bands]);\r\n\r\n  const handleChange = (event): void => {\r\n    const { name, value } = event.target;\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"band\"\r\n      value={status.band}\r\n      onChange={handleChange}\r\n      className={clsx(classes.root, className)}\r\n      defaultValue=\"none\"\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select Frequency Band\r\n      </MenuItem>\r\n      {bands.map(item => (\r\n        <MenuItem value={item} key={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nBandMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default BandMenus;\r\n","import React, { forwardRef, ReactElement, Ref, FC } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n  useMediaQuery,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & { children?: ReactElement<any, any> },\r\n  ref: Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  content: {\r\n    marginBottom: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst Alert: FC = () => {\r\n  const matches = useMediaQuery('(max-width: 1000px)');\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog open={matches} TransitionComponent={Transition} keepMounted>\r\n      <CssBaseline />\r\n      <DialogTitle>Screen Resolution Alert</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText className={classes.content}>\r\n          Your screen resolution is under 1024 x 768. We can't confirm your\r\n          resolution of this Spectrum Chart. Please Check your screen mode\r\n          again.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, FC } from 'react';\r\nimport { Grid, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport SystemGantt from './SystemGantt';\r\nimport LinkMenus from './LinkMenus';\r\nimport BandMenus from './BandMenus';\r\nimport Alert from './Alert';\r\n\r\ninterface Status {\r\n  band: string;\r\n  link: string;\r\n}\r\n\r\nconst initialStatus = {\r\n  band: 'none',\r\n  link: 'none'\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  content: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n}));\r\n\r\nconst Lunar: FC = () => {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = useState<Status>(initialStatus);\r\n\r\n  const handleChange = (name: string, value: string): void => {\r\n    setStatus(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container alignItems=\"center\" spacing={3}>\r\n        <Grid item md={3}>\r\n          <BandMenus status={status} onChange={handleChange} />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <LinkMenus status={status} onChange={handleChange} />\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <SystemGantt status={status} />\r\n        </Grid>\r\n      </Grid>\r\n      <Alert />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunar;\r\n","import React, { FC, useState, ChangeEvent } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  CssBaseline,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Tabs,\r\n  Tab,\r\n  Link,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\r\nimport Commercial from './Commercial';\r\nimport Lunar from './Lunar';\r\n\r\nconst tabs = [\r\n  { value: 'commercial', label: 'Commercial' },\r\n  { value: 'lunar', label: 'Lunar' }\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: theme.spacing(5)\r\n  },\r\n  card: {\r\n    paddingTop: 0,\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    backgroundColor: colors.grey[100],\r\n    boxShadow: theme.shadows[10]\r\n  },\r\n  header: {\r\n    color: colors.grey[50],\r\n    backgroundColor: colors.blue[700]\r\n  },\r\n  cardContent: {\r\n    paddingTop: theme.spacing(3),\r\n    padding: theme.spacing(6)\r\n  },\r\n  content: {\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: colors.grey[300]\r\n  }\r\n}));\r\n\r\nconst HomeView: FC = () => {\r\n  const classes = useStyles();\r\n  const [currentTab, setCurrentTab] = useState<string>('lunar');\r\n\r\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\r\n    setCurrentTab(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container component=\"main\" maxWidth=\"xl\">\r\n        <CssBaseline />\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            className={classes.header}\r\n            title={\r\n              <Typography component=\"header\" variant=\"h5\">\r\n                {currentTab === 'commercial'\r\n                  ? 'Commercial Operational Spectrum Snapshot'\r\n                  : 'Lunar Operational Spectrum Viewer'}\r\n              </Typography>\r\n            }\r\n          />\r\n          <CardContent className={classes.cardContent}>\r\n            <Box>\r\n              <Tabs\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                onChange={handleTabsChange}\r\n                value={currentTab}\r\n              >\r\n                {tabs.map(tab => (\r\n                  <Tab key={tab.value} label={tab.label} value={tab.value} />\r\n                ))}\r\n              </Tabs>\r\n            </Box>\r\n            <Box py={3}>\r\n              {currentTab === 'lunar' && <Lunar />}\r\n              {currentTab === 'commercial' && <Commercial />}\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions className={classes.footer}>\r\n            <ImportantDevicesIcon color=\"primary\" />\r\n            <Typography component=\"footer\" variant=\"body2\">\r\n              For more information of spectrum licensing requirements for using\r\n              a commercial system, go to{' '}\r\n              <Link href=\"http://spectrum.gov\" target=\"_blank\">\r\n                http://spectrum.gov\r\n              </Link>\r\n            </Typography>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","import React, { useEffect } from 'react';\r\nimport type { FC } from 'react';\r\nimport NProgress from 'nprogress';\r\nimport {\r\n  Box,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Theme,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    justifyContent: 'center',\r\n    minHeight: '100%',\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst LoadingScreen: FC = () => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    NProgress.start();\r\n\r\n    return () => {\r\n      NProgress.done();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box width={400}>\r\n        <LinearProgress />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React, { Suspense, Fragment, lazy } from 'react';\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\nimport HomeView from 'src/pages/home';\r\nimport LoadingScreen from 'src/components/LoadingScreen';\r\n\r\ntype Routes = {\r\n  exact?: boolean;\r\n  path?: string | string[];\r\n  component?: any;\r\n  routes?: Routes;\r\n}[];\r\n\r\nexport const renderRoutes = (routes: Routes = []): JSX.Element => (\r\n  <Suspense fallback={<LoadingScreen />}>\r\n    <Switch>\r\n      {routes.map((route, i) => {\r\n        const Component = route.component;\r\n\r\n        return (\r\n          <Route\r\n            key={i}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            render={props => (\r\n              <Fragment>\r\n                {route.routes ? (\r\n                  renderRoutes(route.routes)\r\n                ) : (\r\n                  <Component {...props} />\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          />\r\n        );\r\n      })}\r\n    </Switch>\r\n  </Suspense>\r\n);\r\n\r\nconst routes: Routes = [\r\n  {\r\n    exact: true,\r\n    path: '/404',\r\n    component: lazy(() => import('src/pages/errors/NotFoundView'))\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/maintenance',\r\n    component: lazy(() => import('src/pages/maintenance'))\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '*',\r\n    routes: [\r\n      {\r\n        component: () => <Redirect to=\"/404\" />\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import React, { FC } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { create } from 'jss';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { jssPreset, StylesProvider } from '@material-ui/core';\r\nimport routes, { renderRoutes } from 'src/routes';\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins] });\r\nconst history = createBrowserHistory();\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <StylesProvider jss={jss}>\r\n      <SnackbarProvider dense maxSnack={3}>\r\n        <Router history={history}>{renderRoutes(routes)}</Router>\r\n      </SnackbarProvider>\r\n    </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'nprogress/nprogress.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport { enableES5 } from 'immer';\r\nimport * as serviceWorker from 'src/serviceWorker';\r\nimport App from 'src/App';\r\n\r\nenableES5();\r\n\r\nReactDOM.render(\r\n  <HelmetProvider>\r\n    <App />\r\n  </HelmetProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}