{"version":3,"sources":["hooks/useWindowSize.ts","utils/formatDate.ts","serviceWorker.ts","components/TabPanel.tsx","views/home/HomeView/colors.ts","constants.ts","views/home/HomeView/SystemGantt/GanttChart.tsx","views/home/HomeView/SystemGantt/SystemTable.tsx","views/home/HomeView/SystemGantt/index.tsx","views/home/HomeView/UserGantt/UserTable.tsx","views/home/HomeView/UserGantt/GanttChart.tsx","views/home/HomeView/UserGantt/index.tsx","views/home/HomeView/SystemMenus.tsx","views/home/HomeView/BandMenus.tsx","views/home/HomeView/Spectrum.tsx","views/home/HomeView/Content.tsx","views/home/HomeView/Alert.tsx","views/home/HomeView/index.tsx","components/LoadingScreen.tsx","routes.tsx","App.tsx","index.tsx"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","formatDate","value","delta","sDate","Math","floor","lDate","Date","d","getDate","dd","yyyy","getFullYear","mon","getMonth","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","TabPanel","props","children","index","other","role","hidden","Box","p","colorSet","SYSTEMS_FILE","GanttChart","traces","startDate","axis","size","data","layout","xaxis","title","titlefont","color","tickfont","range","dtick","showgrid","zerolinecolor","zerolinewidth","yaxis","start","stop","step","legend","orientation","xanchor","traceorder","font","family","bordercolor","borderwidth","tracegroupgap","margin","l","b","r","t","pad","showlegend","displayModeBar","SystemTable","rows","columns","TableContainer","style","maxHeight","Table","stickyHeader","aria-label","className","TableHead","TableRow","map","column","TableCell","key","id","align","name","toUpperCase","TableBody","row","hover","Chart_Type","split","join","idx","toFixed","renderColumn","INIT_AXIS","useStyles","makeStyles","theme","root","appBar","boxShadow","shadows","marginBottom","spacing","SystemGantt","status","tab","setTab","source","setSource","setTraces","setStartDate","setAxis","setRows","classes","sheetList","req","XMLHttpRequest","open","responseType","onload","e","Uint8Array","response","workbook","xlsx","type","SheetNames","forEach","item","worksheetList","worksheet","sheet_to_json","Sheets","header","el","push","_","object","Object","keys","filter","band","Item_No","scope","send","x_start","y_start","y_step","y_stop","traceList","preItem","includes","length","dt","System","indexOf","system","splice","SDate","X_Axis_Start","Y_Axis_Step_Size","Y_Axis_Start","Y_Axis_Stop","item_date","c_date","y_point","SFreq_GHz","abs","EFreq_GHz","isLegend","trace","x","EDate","y","mode","line","marker","shape","Grid","container","alignItems","justify","md","Typography","variant","component","Card","CardContent","AppBar","position","Tabs","onChange","event","indicatorColor","textColor","Tab","label","UserTable","INIT_Y_AXIS","UserGantt","result","User","textAlignLast","default","colors","grey","opacity","SystemMenus","systems","setSystems","sdata","Select","target","clsx","defaultValue","fullWidth","MenuItem","disabled","BandMenus","onUids","bands","setBands","tuids","calWidth","end","getStyle","len","vertical","writingMode","backgroundColor","hex","minHeight","transform","textAlign","grid","content","right","top","block","display","flexDirection","justifyContent","border","cursor","scoped","red","service","fontSize","typography","pxToRem","remark","announce","marginTop","box","clicked","zIndex","Spectrum","uids","onContent","dataSource","setDataSource","setLength","page","setPage","totalPage","setTotalPage","master","handleInit","pointS","pointF","values","borderColor","blue","data-start","data-end","amount","Tooltip","arrow","onClick","handleClick","truncated","Pagination","count","ceil","defaultPage","Content","borderRadius","padding","Transition","forwardRef","ref","Slide","direction","Alert","matches","useMediaQuery","Dialog","TransitionComponent","keepMounted","CssBaseline","DialogTitle","DialogContent","DialogContentText","initialStatus","card","paddingTop","paddingLeft","paddingRight","cardContent","footer","Header","HomeView","setStatus","setUids","setContent","handleChange","prevState","Container","maxWidth","CardHeader","CardActions","Link","href","palette","background","LoadingScreen","NProgress","done","LinearProgress","routes","exact","path","lazy","to","jss","create","plugins","jssPreset","history","createBrowserHistory","App","StylesProvider","dense","maxSnack","renderRoutes","fallback","route","i","Component","render","enableES5","ReactDOM","document","getElementById","URL","process","origin","fetch","headers","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b70e4c71.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      });\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","const formatDate = (value: number, delta: number) => {\r\n  if (!value) return '';\r\n\r\n  let sDate = Math.floor(value - 25569) * 86400;\r\n  let lDate = new Date(sDate * 1000);\r\n  let d = lDate.getDate();\r\n  let dd = d < 10 ? '0' + d : d;\r\n  let yyyy = lDate.getFullYear();\r\n  let mon = lDate.getMonth() + 1;\r\n  let mm = mon < 10 ? '0' + mon : mon;\r\n\r\n  return yyyy + delta + '-' + mm + '-' + dd;\r\n};\r\n\r\nexport default formatDate;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabPanel;\r\n","export const colorSet = [\r\n  '#808000',\r\n  '#FFFF00',\r\n  '#00FF00',\r\n  '#00FFFF',\r\n  '#FF00FF',\r\n  '#0000FF',\r\n  '#FF0000',\r\n  '#000080',\r\n  '#008080',\r\n  '#008000',\r\n  '#800080',\r\n  '#800000',\r\n  '#808080',\r\n  '#FEC433',\r\n  '#C0C0C0'\r\n];\r\n","export const SERVER_URL = 'http://52.254.23.171:7000/api';\n\nexport const LOCAL_URL = 'http://127.0.0.1:7000/api';\n\nexport const BASE_URL =\n  process.env.NODE_ENV === 'production' ? SERVER_URL : LOCAL_URL;\n\nexport const SYSTEMS_FILE = 'static/excel/systems_dataset_v3.xlsx';\n\nexport const USER_FILE = 'static/excel/users_dataset_v2.xlsx';\n\nexport const DATA_FILE = 'static/excel/dataset_v3.xlsx';\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Plot from 'react-plotly.js';\r\nimport useWindowSize from 'src/hooks/useWindowSize';\r\nimport formatDate from 'src/utils/formatDate';\r\n\r\ninterface Axis {\r\n  start: number;\r\n  stop: number;\r\n  step: number;\r\n}\r\n\r\ninterface GanttChartsProps {\r\n  className?: string;\r\n  traces: any[];\r\n  startDate: number;\r\n  axis: Axis;\r\n}\r\n\r\nconst GanttChart: FC<GanttChartsProps> = ({ traces, startDate, axis }) => {\r\n  const size = useWindowSize();\r\n  \r\n  return (\r\n    <Plot\r\n      data={traces}\r\n      layout={{\r\n        width: size.width * 0.7,\r\n        xaxis: {\r\n          title: '',\r\n          titlefont: {\r\n            size: 10,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          range: [formatDate(startDate, -1), formatDate(startDate, 7)],\r\n          dtick: 'M12',\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          title: 'Frequency (GHZ)',\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          range: [axis.start, axis.stop],\r\n          dtick: axis.step,\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        legend: {\r\n          orientation: 'h',\r\n          xanchor: 'left',\r\n          traceorder: 'normal',\r\n          font: {\r\n            family: 'sans-serif',\r\n            size: 12,\r\n            color: '#000'\r\n          },\r\n          bordercolor: '#212529',\r\n          borderwidth: 1,\r\n          tracegroupgap: 100\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 80,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        showlegend: true\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nGanttChart.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default GanttChart;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from '@material-ui/core';\r\nimport formatDate from 'src/utils/formatDate';\r\n\r\ninterface SystemTableProps {\r\n  className?: string;\r\n  rows: any[];\r\n  columns: any[];\r\n}\r\n\r\nconst SystemTable: FC<SystemTableProps> = ({ rows, columns }) => {\r\n  const renderColumn = (name: string, row: any, idx: number, index: number) => {\r\n    if (idx !== 0) {\r\n      switch (name) {\r\n        case 'SFreq_GHz':\r\n        case 'EFreq_GHz':\r\n          return row[name].toFixed(7);\r\n        case 'SDate':\r\n        case 'EDate':\r\n          return formatDate(row[name], 0);\r\n        default:\r\n          return row[name];\r\n      }\r\n    } else {\r\n      return index + 1;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableContainer style={{ maxHeight: 440 }}>\r\n      <Table\r\n        stickyHeader\r\n        aria-label=\"sticky table\"\r\n        className=\"customized-gantt-chart-table\"\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align=\"center\">\r\n                {column.name.toUpperCase()}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow\r\n              hover\r\n              key={`${row.Chart_Type.split(' ').join('_')}_${index}`}\r\n            >\r\n              {columns.map((column, idx) => (\r\n                <TableCell key={column.id} align=\"center\">\r\n                  {renderColumn(column.id, row, idx, index)}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nSystemTable.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SystemTable;\r\n","import React, { useState, useEffect, FC, ChangeEvent } from 'react';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport PropTypes from 'prop-types';\r\nimport * as xlsx from 'xlsx';\r\nimport _ from 'underscore';\r\nimport {\r\n  AppBar,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from 'src/components/TabPanel';\r\nimport { colorSet } from '../colors';\r\nimport formatDate from 'src/utils/formatDate';\r\nimport { SYSTEMS_FILE } from 'src/constants';\r\nimport { Chart } from 'src/types/system';\r\nimport GanttChart from './GanttChart';\r\nimport SystemTable from './SystemTable';\r\n\r\ninterface SystemGanttProps {\r\n  className?: string;\r\n  status: Status;\r\n}\r\n\r\ninterface Axis {\r\n  start: number;\r\n  stop: number;\r\n  step: number;\r\n}\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\n\r\nconst columns = [\r\n  { id: 'no', name: 'no' },\r\n  { id: 'System', name: 'system' },\r\n  { id: 'Chart_Type', name: 'band' },\r\n  { id: 'Link_Type', name: 'link type' },\r\n  { id: 'SFreq_GHz', name: 'min freq (ghz)' },\r\n  { id: 'EFreq_GHz', name: 'max freq (ghz)' },\r\n  { id: 'SDate', name: 'start date' },\r\n  { id: 'EDate', name: 'end date' }\r\n];\r\n\r\nconst INIT_AXIS: Axis = {\r\n  start: 0,\r\n  stop: 0,\r\n  step: 0\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  appBar: {\r\n    boxShadow: theme.shadows[1]\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst SystemGantt: FC<SystemGanttProps> = ({ status }) => {\r\n  const [tab, setTab] = useState(0);\r\n  const [source, setSource] = useState([]);\r\n  const [traces, setTraces] = useState([]);\r\n  const [startDate, setStartDate] = useState(0);\r\n  const [axis, setAxis] = useState(INIT_AXIS);\r\n  const [rows, setRows] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let sheetList: Object = {};\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n\r\n      workbook.SheetNames.forEach(item => {\r\n        let worksheetList = [];\r\n        let worksheet: any = xlsx.utils.sheet_to_json(workbook.Sheets[item], {\r\n          header: 1\r\n        });\r\n        sheetList[item] = [];\r\n\r\n        worksheet.forEach((el: any, index: number) => {\r\n          if (index > 0) worksheetList.push(_.object(worksheet[0], el));\r\n        });\r\n        sheetList[item] = worksheetList;\r\n      });\r\n\r\n      sheetList[Object.keys(sheetList)[0]].forEach(item => {\r\n        item['data'] = sheetList[Object.keys(sheetList)[1]].filter(\r\n          el => el.Chart_Type === status.band && el.Item_No === status.scope\r\n        );\r\n      });\r\n      setSource(sheetList[Object.keys(sheetList)[0]]);\r\n    };\r\n\r\n    req.send();\r\n  }, [status.scope, status.band]);\r\n\r\n  useEffect(() => {\r\n    let x_start = 0,\r\n      y_start = 0,\r\n      y_step = 0,\r\n      y_stop = 0;\r\n    let traceList = [];\r\n\r\n    source.forEach((item: Chart) => {\r\n      let preItem = item;\r\n\r\n      if (item.Chart_Type === status.band) {\r\n        if (Object.keys(item).includes('data') && item.data.length > 0) {\r\n          let idx = item.data.map(dt => dt.System).indexOf(status.system);\r\n          item.data.splice(\r\n            item.data.length - 1,\r\n            0,\r\n            item.data.splice(idx, 1)[0]\r\n          );\r\n          console.log(item.data);\r\n          x_start = item.data[0].SDate;\r\n        } else {\r\n          x_start = item.X_Axis_Start;\r\n        }\r\n\r\n        y_step = item.Y_Axis_Step_Size;\r\n        y_start = item.Y_Axis_Start;\r\n        y_stop = item.Y_Axis_Stop;\r\n\r\n        if (Object.keys(preItem).includes('data') && preItem.data.length > 0) {\r\n          item.data.forEach((dt, index) => {\r\n            let item_date = new Date(dt.SDate);\r\n            let c_date = new Date(x_start);\r\n            let y_point =\r\n              dt.SFreq_GHz + Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / 2;\r\n            let isLegend = true;\r\n\r\n            if (item_date < c_date) {\r\n              x_start = dt.SDate;\r\n            }\r\n\r\n            item.data.forEach((d, idx) => {\r\n              if (idx < index && d.System === dt.System) {\r\n                index = idx;\r\n                isLegend = false;\r\n              }\r\n            });\r\n\r\n            let trace = {\r\n              name: dt.System,\r\n              x: [formatDate(dt.SDate, 0), formatDate(dt.EDate, 0)],\r\n              y: [y_point, y_point],\r\n              mode: 'lines',\r\n              line: {\r\n                width:\r\n                  (Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / (y_step * 10)) * 340,\r\n                color: colorSet[index % colorSet.length]\r\n              },\r\n              showlegend: isLegend\r\n            };\r\n\r\n            traceList.push(trace);\r\n          });\r\n        } else {\r\n          let trace = {\r\n            name: '',\r\n            x: [x_start, x_start + 10],\r\n            y: [y_start, y_start],\r\n            mode: 'lines',\r\n            line: {\r\n              width: (Math.abs(y_start - y_stop) / (y_step * 10)) * 340,\r\n              color: 'transparent'\r\n            },\r\n            showlegend: false,\r\n            marker: {\r\n              size: 12,\r\n              shape: [\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew',\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew'\r\n              ]\r\n            }\r\n          };\r\n          traceList.push(trace);\r\n        }\r\n        setRows(item.data);\r\n      }\r\n    });\r\n    setTraces(traceList);\r\n    setStartDate(x_start);\r\n    setAxis({ start: y_start, stop: y_stop, step: y_step });\r\n  }, [status.band, status.system, source]);\r\n\r\n  const handleChange = (event: ChangeEvent<{}>, value: number) => {\r\n    setTab(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12} className={classes.title}>\r\n          <Typography variant=\"h6\" component=\"strong\">\r\n            Band Overview – Commercial Relay Systems\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n              >\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  aria-label=\"Gantt and Data View\"\r\n                >\r\n                  <Tab label=\"Gantt View\" />\r\n                  <Tab label=\"Data View\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews index={tab}>\r\n                <TabPanel value={tab} index={0}>\r\n                  <GanttChart\r\n                    traces={traces}\r\n                    startDate={startDate}\r\n                    axis={axis}\r\n                  />\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <SystemTable rows={rows} columns={columns} />\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nSystemGantt.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SystemGantt;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from '@material-ui/core';\r\n\r\ninterface UserTableProps {\r\n  className?: string;\r\n  rows: any[];\r\n  columns: any[];\r\n}\r\n\r\nconst UserTable: FC<UserTableProps> = ({ rows, columns }) => {\r\n  const renderColumn = (name: string, row: any, idx: number, index: number) => {\r\n    return idx === 0 ? index + 1 : row[name];\r\n  };\r\n\r\n  return (\r\n    <TableContainer style={{ maxHeight: 440 }}>\r\n      <Table\r\n        stickyHeader\r\n        aria-label=\"sticky table\"\r\n        className=\"customized-gantt-chart-table\"\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align=\"center\">\r\n                {column.name.toUpperCase()}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow hover key={`user-row-${index}`}>\r\n              {columns.map((column, idx) => (\r\n                <TableCell key={column.id} align=\"center\">\r\n                  {renderColumn(column.id, row, idx, index)}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nUserTable.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserTable;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Plot from 'react-plotly.js';\r\nimport useWindowSize from 'src/hooks/useWindowSize';\r\n\r\ninterface Axis {\r\n  start: number;\r\n  stop: number;\r\n}\r\n\r\ninterface GanttChartsProps {\r\n  className?: string;\r\n  traces: any[];\r\n  axis: Axis;\r\n}\r\n\r\nconst GanttChart: FC<GanttChartsProps> = ({ traces, axis }) => {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <Plot\r\n      data={traces}\r\n      layout={{\r\n        width: size.width * 0.7,\r\n        xaxis: {\r\n          title: '',\r\n          titlefont: {\r\n            size: 10,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          dtick: 'M12',\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        yaxis: {\r\n          titlefont: {\r\n            size: 12,\r\n            color: '#212529'\r\n          },\r\n          tickfont: {\r\n            size: 12\r\n          },\r\n          range: [axis.start, axis.stop],\r\n          dtick: 1,\r\n          showgrid: true,\r\n          zerolinecolor: '#969696',\r\n          zerolinewidth: 1\r\n        },\r\n        margin: {\r\n          l: 60,\r\n          b: 80,\r\n          r: 30,\r\n          t: 30,\r\n          pad: 5\r\n        },\r\n        showlegend: false\r\n      }}\r\n      config={{ displayModeBar: false }}\r\n    />\r\n  );\r\n};\r\n\r\nGanttChart.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default GanttChart;\r\n","import React, { useState, useEffect, FC, ChangeEvent } from 'react';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport PropTypes from 'prop-types';\r\nimport * as xlsx from 'xlsx';\r\nimport {\r\n  AppBar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from 'src/components/TabPanel';\r\nimport { colorSet } from '../colors';\r\nimport formatDate from 'src/utils/formatDate';\r\nimport { USER_FILE } from 'src/constants';\r\nimport UserTable from './UserTable';\r\nimport GanttChart from './GanttChart';\r\n\r\ninterface UserGanttProps {\r\n  className?: string;\r\n  scope: number;\r\n  system: string;\r\n}\r\n\r\ninterface User {\r\n  User: string;\r\n  System: string;\r\n  SDate: Date;\r\n  EDate: Date;\r\n}\r\n\r\nconst columns = [\r\n  { id: 'no', name: 'no' },\r\n  { id: 'User', name: 'user' },\r\n  { id: 'System', name: 'system' },\r\n  { id: 'SDate', name: 'start date' },\r\n  { id: 'EDate', name: 'end date' }\r\n];\r\n\r\nconst INIT_Y_AXIS = {\r\n  start: 0,\r\n  stop: 0\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  appBar: {\r\n    boxShadow: theme.shadows[1]\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst UserGantt: FC<UserGanttProps> = ({ scope, system }) => {\r\n  const [tab, setTab] = useState(0);\r\n  const [source, setSource] = useState([]);\r\n  const [traces, setTraces] = useState([]);\r\n  const [axis, setAxis] = useState(INIT_Y_AXIS);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', USER_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const worksheet: any = xlsx.utils.sheet_to_json(\r\n        workbook.Sheets[workbook.SheetNames[0]],\r\n        {\r\n          header: 1\r\n        }\r\n      );\r\n\r\n      worksheet.forEach((item, idx: number) => {\r\n        if (idx > 0 && system === item[1])\r\n          result.push({\r\n            User: item[0],\r\n            System: item[1],\r\n            SDate: formatDate(item[2], 0),\r\n            EDate: formatDate(item[3], 0)\r\n          });\r\n      });\r\n      setSource(result);\r\n    };\r\n\r\n    req.send();\r\n  }, [scope, system]);\r\n\r\n  useEffect(() => {\r\n    const start = (source.length / 5) * 3;\r\n    const stop = 0;\r\n    let traceList = [];\r\n\r\n    source.forEach((item: User, idx: number) => {\r\n      var trace = {\r\n        x: [item.SDate, item.EDate],\r\n        y: [item.User, item.User],\r\n        name: item.User,\r\n        mode: 'lines',\r\n        line: { width: 20, color: colorSet[idx % colorSet.length] }\r\n      };\r\n      traceList.push(trace);\r\n    });\r\n\r\n    setTraces(traceList);\r\n    setAxis({ start, stop });\r\n  }, [source]);\r\n\r\n  const handleChange = (event: ChangeEvent<{}>, value: number) => {\r\n    setTab(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Typography variant=\"h6\" component=\"strong\">\r\n            Space Missions Using Commercial Systems\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <AppBar\r\n                position=\"static\"\r\n                color=\"default\"\r\n                className={classes.appBar}\r\n              >\r\n                <Tabs\r\n                  value={tab}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  aria-label=\"Gantt and Data View\"\r\n                >\r\n                  <Tab label=\"Gantt View\" />\r\n                  <Tab label=\"Data View\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews index={tab}>\r\n                <TabPanel value={tab} index={0}>\r\n                  <GanttChart axis={axis} traces={traces} />\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                  <UserTable rows={source} columns={columns} />\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nUserGantt.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserGantt;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport { Select, MenuItem, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport { SYSTEMS_FILE } from 'src/constants';\r\n\r\ninterface SystemMenusProps {\r\n  className?: string;\r\n  system: string;\r\n  onChange: (name: string, value: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst SystemMenus: FC<SystemMenusProps> = ({ className, system, onChange }) => {\r\n  const [systems, setSystems] = useState<string[]>([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result: string[] = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const sdata = workbook.Sheets[workbook.SheetNames[1]];\r\n      const worksheet: any = xlsx.utils.sheet_to_json(sdata, { header: 1 });\r\n\r\n      worksheet.forEach((el: Array<any>, index: number) => {\r\n        index > 0 && !result.includes(el[0]) && result.push(el[0]);\r\n      });\r\n      setSystems(result);\r\n    };\r\n\r\n    req.send();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    systems.length > 0 && onChange('system', systems[0]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [systems]);\r\n\r\n  const handleChange = (event): void => {\r\n    const { name, value } = event.target;\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"system\"\r\n      value={system}\r\n      onChange={handleChange}\r\n      className={clsx(classes.root, className)}\r\n      defaultValue=\"none\"\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select System\r\n      </MenuItem>\r\n      {systems.map((item: string) => (\r\n        <MenuItem value={item} key={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nSystemMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  system: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default SystemMenus;\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport { Select, MenuItem, makeStyles, Theme, colors } from '@material-ui/core';\r\nimport { SYSTEMS_FILE } from 'src/constants';\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\ninterface BandMenusProps {\r\n  className?: string;\r\n  status: Status;\r\n  onUids: (param: number[]) => void;\r\n  onChange: (name: string, value: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst BandMenus: FC<BandMenusProps> = ({\r\n  className,\r\n  status,\r\n  onUids,\r\n  onChange\r\n}) => {\r\n  const [bands, setBands] = useState<string[]>([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let result: string[] = [];\r\n    let tuids: number[] = [];\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', SYSTEMS_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = (e: ProgressEvent<EventTarget>) => {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const sdata = workbook.Sheets[workbook.SheetNames[1]];\r\n      const worksheet: any = xlsx.utils.sheet_to_json(sdata, { header: 1 });\r\n\r\n      worksheet.forEach((el: any) => {\r\n        if (el[0] === status.system) {\r\n          el[2] && tuids.push(el[2]);\r\n          !result.includes(el[1]) && result.push(el[1]);\r\n        }\r\n      });\r\n      setBands(result);\r\n      onUids(tuids);\r\n    };\r\n\r\n    req.send();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [status.system]);\r\n\r\n  useEffect(() => {\r\n    bands.length > 0 && onChange('band', bands[0]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bands]);\r\n\r\n  const handleChange = (event): void => {\r\n    const { name, value } = event.target;\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"band\"\r\n      value={status.band}\r\n      onChange={handleChange}\r\n      className={clsx(classes.root, className)}\r\n      defaultValue=\"none\"\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select Frequency Band\r\n      </MenuItem>\r\n      {bands.map(item => (\r\n        <MenuItem value={item} key={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nBandMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  onUids: PropTypes.func,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default BandMenus;\r\n","import React, { useState, useEffect, FC, ChangeEvent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as xlsx from 'xlsx';\r\nimport _ from 'underscore';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  colors,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { Band } from 'src/types/band';\r\nimport { DATA_FILE } from 'src/constants';\r\n\r\ninterface Status {\r\n  system: string;\r\n  band: string;\r\n  scope: number | null;\r\n}\r\ninterface SpectrumProps {\r\n  className?: string;\r\n  uids: number[];\r\n  status: Status;\r\n  onContent: (param: string) => void;\r\n  onChange: (name: string, value: string | number) => void;\r\n}\r\n\r\nconst calWidth = (start: number, end: number, length: number) => {\r\n  const value = (Math.abs(start - end) / length) * 95;\r\n  return { width: value + '%' };\r\n};\r\n\r\nconst getKey = (value: string): string => {\r\n  return value.split(' ').join('_');\r\n};\r\n\r\nconst getStyle = (dt: Band, length: number) => {\r\n  const len = 40 / length + 'vh';\r\n  let value = {};\r\n\r\n  if (dt.vertical) {\r\n    value = {\r\n      writingMode: 'vertical-rl',\r\n      backgroundColor: dt.hex,\r\n      minHeight: len,\r\n      maxHeight: len,\r\n      transform: 'rotate(-180deg)'\r\n    };\r\n  } else {\r\n    value = {\r\n      backgroundColor: dt.hex,\r\n      minHeight: len,\r\n      maxHeight: len,\r\n      textAlign: 'center'\r\n    };\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    position: 'relative'\r\n  },\r\n  grid: {\r\n    minHeight: theme.spacing(2),\r\n    '&:before': {\r\n      content: 'attr(data-start)'\r\n    },\r\n    '&:after': {\r\n      content: 'attr(data-end)',\r\n      position: 'absolute',\r\n      right: theme.spacing(3),\r\n      top: 0\r\n    }\r\n  },\r\n  block: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    border: '1px solid #000',\r\n    cursor: 'pointer'\r\n  },\r\n  scoped: {\r\n    border: `3px dashed ${colors.red[700]}`\r\n  },\r\n  service: {\r\n    fontSize: theme.typography.pxToRem(12)\r\n  },\r\n  remark: {\r\n    fontSize: theme.typography.pxToRem(10)\r\n  },\r\n  announce: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  box: {\r\n    width: '100%',\r\n    minHeight: theme.spacing(30),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  clicked: {\r\n    boxShadow: theme.shadows[15],\r\n    border: `4px dashed ${colors.red[700]}`,\r\n    zIndex: 1000\r\n  }\r\n}));\r\n\r\nconst Spectrum: FC<SpectrumProps> = ({\r\n  className,\r\n  uids,\r\n  status,\r\n  onChange,\r\n  onContent\r\n}) => {\r\n  const [source, setSource] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const classes = useStyles();\r\n  const amount = 8;\r\n\r\n  useEffect(() => {\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', DATA_FILE, true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = (e: ProgressEvent<EventTarget>) => {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = xlsx.read(data, { type: 'array' });\r\n      const worksheet: any = xlsx.utils.sheet_to_json(\r\n        workbook.Sheets[status.band],\r\n        {\r\n          header: 1\r\n        }\r\n      );\r\n      let sheetList = [];\r\n      let result = [];\r\n\r\n      if (Object.keys(worksheet).length > 2) {\r\n        worksheet.forEach((el: any, idx: number) => {\r\n          if (idx > 0) sheetList.push(_.object(worksheet[0], el));\r\n        });\r\n\r\n        sheetList.forEach((item: Band) => {\r\n          const data = sheetList.filter(el => item.master === el.master);\r\n          const count = _.filter(result, el => item.master === el.master);\r\n\r\n          if (count.length < 1 && item.master) {\r\n            result.push({\r\n              master: item.master,\r\n              start: item.start,\r\n              end: item.end,\r\n              data: data,\r\n              vertical: item.vertical\r\n            });\r\n          }\r\n        });\r\n        setSource(result);\r\n        setTotalPage(Object.keys(result).length / amount);\r\n        onContent(result[0].data[0].content);\r\n      } else {\r\n        handleInit();\r\n      }\r\n    };\r\n\r\n    req.send();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [status.band]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(source).length > 0) {\r\n      const pointS = source[(page - 1) * amount];\r\n      const pointF =\r\n        page < totalPage\r\n          ? source[page * amount - 1]\r\n          : source[totalPage * amount - 1];\r\n\r\n      if (pointF && Object.keys(pointF).includes('end')) {\r\n        const start = pointS.start ? pointS.start : 0;\r\n        const end = pointF.end ? pointF.end : 0;\r\n        const len = Math.abs(start - end);\r\n\r\n        let data = Object.values(source).filter(\r\n          (item: Band) =>\r\n            item.master > (page - 1) * amount && item.master <= page * amount\r\n        );\r\n        setLength(len);\r\n        setDataSource(data);\r\n      }\r\n    } else {\r\n      setLength(0);\r\n      setDataSource([]);\r\n    }\r\n  }, [page, source, totalPage]);\r\n\r\n  const handleInit = (): void => {\r\n    setSource([]);\r\n    setTotalPage(0);\r\n    setPage(1);\r\n    onChange('scope', null);\r\n    onContent('');\r\n  };\r\n\r\n  const handleClick = (value: number, content: string): void => {\r\n    onChange('scope', value);\r\n    onContent(content);\r\n  };\r\n\r\n  const handleChangePage = (e: ChangeEvent, page: number): void => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ position: 'relative' }}\r\n        className={clsx(className, classes.root)}\r\n      >\r\n        {Object.keys(dataSource).length === 0 && (\r\n          <Box\r\n            border={1}\r\n            borderColor={colors.blue[200]}\r\n            className={classes.box}\r\n            textAlign=\"center\"\r\n          >\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              No Band Data Entered Yet.\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        {Object.keys(dataSource).length > 0 &&\r\n          Object.values(dataSource).map((el, idx: number) => (\r\n            <Grid\r\n              item\r\n              key={el.master}\r\n              className={classes.grid}\r\n              style={calWidth(el.start, el.end, length)}\r\n              data-start={el.start}\r\n              data-end={idx === amount - 1 ? el.end : ''}\r\n            >\r\n              <Grid container alignItems=\"center\" justify=\"center\">\r\n                {el.data.map((dt: Band, index: number) => (\r\n                  <Tooltip\r\n                    key={`${getKey(dt.service)}-${idx}-${index}`}\r\n                    title={dt.service}\r\n                    arrow\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      md={12}\r\n                      onClick={() => handleClick(dt.Item_No, dt.content)}\r\n                      style={getStyle(dt, el.data.length)}\r\n                      className={clsx(\r\n                        classes.block,\r\n                        uids.includes(dt.Item_No) && classes.scoped,\r\n                        uids.includes(dt.Item_No) &&\r\n                          dt.Item_No === status.scope &&\r\n                          classes.clicked\r\n                      )}\r\n                    >\r\n                      {!dt.truncated ? (\r\n                        <>\r\n                          <Typography className={classes.service}>\r\n                            {dt.service}\r\n                          </Typography>\r\n                          {dt.remark !== '' && (\r\n                            <Typography className={classes.remark}>\r\n                              {dt.remark}\r\n                            </Typography>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <Typography className={classes.service}>\r\n                          {dt.truncated}\r\n                        </Typography>\r\n                      )}\r\n                    </Grid>\r\n                  </Tooltip>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        className={classes.announce}\r\n      >\r\n        <Grid item md={9}>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            This chart will only work with 1024 x 768. We recommend full screen\r\n            mode.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item md={12}>\r\n              <Pagination\r\n                count={Math.ceil(totalPage)}\r\n                page={page}\r\n                defaultPage={1}\r\n                variant=\"outlined\"\r\n                shape=\"rounded\"\r\n                onChange={handleChangePage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nSpectrum.propTypes = {\r\n  className: PropTypes.string,\r\n  uids: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  onContent: PropTypes.func\r\n};\r\n\r\nexport default Spectrum;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Grid, Typography, Box, makeStyles, Theme } from '@material-ui/core';\r\ninterface ContentProps {\r\n  className?: string;\r\n  content: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst Content: FC<ContentProps> = ({ className, content }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={clsx(className, classes.root)}\r\n    >\r\n      <Grid item md={4}>\r\n        <Typography variant=\"h6\" component=\"strong\">\r\n          Regulatory Notes\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={8} />\r\n      <Grid item md={12}>\r\n        <Box borderColor=\"primary.main\" border={2} borderRadius={5} padding={2}>\r\n          <Typography variant=\"body2\">{content}</Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  className: PropTypes.string,\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Content;\r\n","import React, { forwardRef, ReactElement, Ref, FC } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n  useMediaQuery,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & { children?: ReactElement<any, any> },\r\n  ref: Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  content: {\r\n    marginBottom: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst Alert: FC = () => {\r\n  const matches = useMediaQuery('(max-width: 1000px)');\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog open={matches} TransitionComponent={Transition} keepMounted>\r\n      <CssBaseline />\r\n      <DialogTitle>Screen Resolution Alert</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText className={classes.content}>\r\n          Your screen resolution is under 1024 x 768. We can't confirm your\r\n          resolution of this Spectrum Chart. Please Check your screen mode\r\n          again.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, FC } from 'react';\nimport {\n  Grid,\n  Container,\n  CssBaseline,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Link,\n  Typography,\n  makeStyles,\n  Theme,\n  colors\n} from '@material-ui/core';\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\nimport SystemGantt from './SystemGantt';\nimport UserGantt from './UserGantt';\nimport SystemMenus from './SystemMenus';\nimport BandMenus from './BandMenus';\nimport Spectrum from './Spectrum';\nimport Content from './Content';\nimport Alert from './Alert';\n\ninterface Status {\n  system: string;\n  band: string;\n  scope: number | null;\n}\n\nconst initialStatus = {\n  system: 'none',\n  band: 'none',\n  scope: null\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: theme.spacing(5)\n  },\n  card: {\n    paddingTop: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    backgroundColor: colors.grey[100],\n    boxShadow: theme.shadows[10]\n  },\n  header: {\n    color: colors.grey[50],\n    backgroundColor: colors.blue[700]\n  },\n  cardContent: {\n    paddingTop: theme.spacing(3),\n    padding: theme.spacing(6)\n  },\n  content: {\n    backgroundColor: colors.grey[50]\n  },\n  footer: {\n    padding: theme.spacing(3),\n    backgroundColor: colors.grey[300]\n  }\n}));\n\nconst Header: FC = () => {\n  return (\n    <Typography component=\"header\" variant=\"h5\">\n      Commercial Operational Spectrum Snapshot\n    </Typography>\n  );\n};\n\nconst HomeView: FC = () => {\n  const [status, setStatus] = useState<Status>(initialStatus);\n  const [uids, setUids] = useState<number[]>([]);\n  const [content, setContent] = useState('');\n  const classes = useStyles();\n\n  const handleChange = (name: string, value: string): void => {\n    setStatus(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleContent = (value: string): void => {\n    setContent(value);\n  };\n\n  const handleUids = (value: number[]) => {\n    setUids(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <CssBaseline />\n        <Card className={classes.card}>\n          <CardHeader className={classes.header} title={<Header />} />\n          <CardContent className={classes.cardContent}>\n            <Grid container alignItems=\"center\" spacing={3}>\n              <Grid item md={3}>\n                <SystemMenus system={status.system} onChange={handleChange} />\n              </Grid>\n              <Grid item md={3}>\n                <BandMenus\n                  status={status}\n                  onChange={handleChange}\n                  onUids={handleUids}\n                />\n              </Grid>\n              <Grid item md={12}>\n                <Spectrum\n                  uids={uids}\n                  status={status}\n                  onChange={handleChange}\n                  onContent={handleContent}\n                />\n              </Grid>\n              {content && content !== '' && (\n                <Grid item md={12} className={classes.content}>\n                  <Content content={content} />\n                </Grid>\n              )}\n              <Grid item md={12}>\n                <SystemGantt status={status} />\n              </Grid>\n              <Grid item md={12}>\n                <UserGantt scope={status.scope} system={status.system} />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <CardActions className={classes.footer}>\n            <ImportantDevicesIcon color=\"primary\" />\n            <Typography component=\"footer\" variant=\"body2\">\n              For more information of spectrum licensing requirements for using\n              a commercial system, go to{' '}\n              <Link href=\"http://spectrum.gov\" target=\"_blank\">\n                http://spectrum.gov\n              </Link>\n            </Typography>\n          </CardActions>\n        </Card>\n      </Container>\n      <Alert />\n    </div>\n  );\n};\n\nexport default HomeView;\n","import React, { useEffect } from 'react';\nimport type { FC } from 'react';\nimport NProgress from 'nprogress';\nimport {\n  Box,\n  LinearProgress,\n  makeStyles,\n  Theme,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    justifyContent: 'center',\n    minHeight: '100%',\n    padding: theme.spacing(3)\n  }\n}));\n\nconst LoadingScreen: FC = () => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    NProgress.start();\n\n    return () => {\n      NProgress.done();\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Box width={400}>\n        <LinearProgress />\n      </Box>\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import React, { Suspense, Fragment, lazy } from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport HomeView from 'src/views/home/HomeView';\nimport LoadingScreen from 'src/components/LoadingScreen';\n\ntype Routes = {\n  exact?: boolean;\n  path?: string | string[];\n  component?: any;\n  routes?: Routes;\n}[];\n\nexport const renderRoutes = (routes: Routes = []): JSX.Element => (\n  <Suspense fallback={<LoadingScreen />}>\n    <Switch>\n      {routes.map((route, i) => {\n        const Component = route.component;\n\n        return (\n          <Route\n            key={i}\n            path={route.path}\n            exact={route.exact}\n            render={props => (\n              <Fragment>\n                {route.routes ? (\n                  renderRoutes(route.routes)\n                ) : (\n                  <Component {...props} />\n                )}\n              </Fragment>\n            )}\n          />\n        );\n      })}\n    </Switch>\n  </Suspense>\n);\n\nconst routes: Routes = [\n  {\n    exact: true,\n    path: '/404',\n    component: lazy(() => import('src/views/errors/NotFoundView'))\n  },\n  {\n    exact: true,\n    path: '/maintenance',\n    component: lazy(() => import('src/views/maintenance/MaintenanceView'))\n  },\n  {\n    exact: true,\n    path: '/',\n    component: HomeView\n  },\n  {\n    path: '*',\n    routes: [\n      {\n        component: () => <Redirect to=\"/404\" />\n      }\n    ]\n  }\n];\n\nexport default routes;\n","import React, { FC } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { create } from 'jss';\nimport { SnackbarProvider } from 'notistack';\nimport { jssPreset, StylesProvider } from '@material-ui/core';\nimport routes, { renderRoutes } from 'src/routes';\n\nconst jss = create({ plugins: [...jssPreset().plugins] });\nconst history = createBrowserHistory();\n\nconst App: FC = () => {\n  return (\n    <StylesProvider jss={jss}>\n      <SnackbarProvider dense maxSnack={3}>\n        <Router history={history}>{renderRoutes(routes)}</Router>\n      </SnackbarProvider>\n    </StylesProvider>\n  );\n};\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport 'nprogress/nprogress.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { enableES5 } from 'immer';\nimport * as serviceWorker from 'src/serviceWorker';\nimport App from 'src/App';\n\nenableES5();\n\nReactDOM.render(\n  <HelmetProvider>\n    <App />\n  </HelmetProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}