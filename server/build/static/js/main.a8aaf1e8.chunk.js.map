{"version":3,"sources":["utils/formatDate.ts","hooks/useWindowSize.ts","serviceWorker.ts","views/home/HomeView/options.ts","views/home/HomeView/colors.ts","views/home/HomeView/GanttChart.tsx","views/home/HomeView/BandMenus.tsx","views/home/HomeView/Spectrum.tsx","views/home/HomeView/Content.tsx","views/home/HomeView/Alert.tsx","views/home/HomeView/index.tsx","components/LoadingScreen.tsx","routes.tsx","App.tsx","constants.ts","index.tsx"],"names":["formatDate","value","delta","sDate","Math","floor","lDate","Date","d","getDate","dd","yyyy","getFullYear","mon","getMonth","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","options","name","label","colorSet","columns","id","INIT_Y_AXIS","y_start","y_stop","y_step","GanttChart","scope","source","setSource","traces","setTraces","startDate","setStartDate","yAxis","setYAxis","rows","setRows","size","sheetList","req","XMLHttpRequest","open","responseType","onload","e","data","Uint8Array","response","workbook","XLSX","type","SheetNames","forEach","item","worksheetList","worksheet","sheet_to_json","Sheets","header","el","index","push","_","object","Object","keys","filter","Chart_Type","send","x_start","traceList","preItem","split","join","includes","length","SDate","X_Axis_Start","Y_Axis_Step_Size","Y_Axis_Start","Y_Axis_Stop","dt","item_date","c_date","y_point","SFreq_GHz","abs","EFreq_GHz","isLegend","idx","Customer","trace","x","EDate","y","mode","line","color","showlegend","marker","shape","Grid","container","alignItems","justify","spacing","md","Typography","variant","component","layout","xaxis","title","titlefont","tickfont","range","dtick","showgrid","zerolinecolor","zerolinewidth","yaxis","legend","orientation","xanchor","traceorder","font","family","bordercolor","borderwidth","tracegroupgap","margin","l","b","r","t","pad","displayModeBar","TableContainer","style","maxHeight","Table","stickyHeader","aria-label","className","TableHead","TableRow","map","column","TableCell","key","align","toUpperCase","TableBody","row","hover","toFixed","useStyles","makeStyles","theme","root","textAlignLast","default","colors","grey","opacity","BandMenus","menu","onMenu","classes","Select","onChange","clsx","fullWidth","MenuItem","disabled","calWidth","start","end","getKey","getStyle","len","vertical","writingMode","backgroundColor","Hex","minHeight","transform","textAlign","position","grid","content","right","top","block","display","flexDirection","justifyContent","border","cursor","scoped","boxShadow","shadows","zIndex","service","fontSize","typography","pxToRem","remark","announce","marginTop","Spectrum","onScope","onContent","dataSource","setDataSource","setLength","page","setPage","totalPage","setTotalPage","result","master","chart_type","pointX","pointY","values","data-start","data-end","amount","onClick","Pagination","count","defaultPage","Content","Box","borderColor","borderRadius","padding","Transition","forwardRef","props","ref","Slide","direction","marginBottom","Alert","matches","useMediaQuery","Dialog","TransitionComponent","keepMounted","CssBaseline","DialogTitle","DialogContent","DialogContentText","card","Header","HomeView","setMenu","setContent","setScope","Container","maxWidth","Card","CardHeader","CardContent","event","target","palette","background","LoadingScreen","NProgress","done","LinearProgress","routes","exact","path","lazy","to","jss","create","plugins","jssPreset","history","createBrowserHistory","App","StylesProvider","dense","maxSnack","renderRoutes","fallback","route","i","Component","render","enableES5","ReactDOM","document","getElementById","URL","process","href","origin","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a8aaf1e8.chunk.js","sourcesContent":["const formatDate = (value: number, delta: number) => {\r\n  if (!value) return '';\r\n\r\n  let sDate = Math.floor(value - 25569) * 86400;\r\n  let lDate = new Date(sDate * 1000);\r\n  let d = lDate.getDate();\r\n  let dd = d < 10 ? '0' + d : d;\r\n  let yyyy = lDate.getFullYear();\r\n  let mon = lDate.getMonth() + 1;\r\n  let mm = mon < 10 ? '0' + mon : mon;\r\n\r\n  return yyyy + delta + '-' + mm + '-' + dd;\r\n};\r\n\r\nexport default formatDate;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      });\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const options = [\r\n  { name: 'hf', label: 'HF (3 to 30 MHz)', value: '3/30' },\r\n  { name: 'vhf', label: 'VHF (30 to 300 MHz)', value: '30/300' },\r\n  { name: 'uhf', label: 'UHF (300\tto 1,000 MHz)', value: '300/1000' },\r\n  { name: 'l', label: 'L-Band (1,000 to 2,000 MHz)', value: '1000/2000' },\r\n  { name: 's', label: 'S-Band  (2,000 to 4,000 MHz)', value: '2000/4000' },\r\n  { name: 'c', label: 'C-Band  (4,000 to 7,000 MHz)', value: '4000/7000' },\r\n  { name: 'x', label: 'X-Band (7,000 to 1,2000 MHz)', value: '7000/12000' },\r\n  { name: 'ku', label: 'Ku-Band (12,000 to 20.000 MHz)', value: '12000/20000' },\r\n  { name: 'ka', label: 'Ka-Band (20,000 to 40,000 MHz)', value: '20000/40000' },\r\n  { name: 'v', label: 'V-Band (40,000 to 75,000 MHz)', value: '40000/75000' },\r\n  { name: 'w', label: 'W-Band  (75,000 to 110,000 MHz)', value: '75000/110000' }\r\n];\r\n","export const colorSet = [\r\n  '#808000',\r\n  '#FFFF00',\r\n  '#00FF00',\r\n  '#00FFFF',\r\n  '#FF00FF',\r\n  '#0000FF',\r\n  '#FF0000',\r\n  '#000080',\r\n  '#008080',\r\n  '#008000',\r\n  '#800080',\r\n  '#800000',\r\n  '#808080',\r\n  '#FEC433',\r\n  '#C0C0C0'\r\n];\r\n","import React, { useState, useEffect, FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Plot from 'react-plotly.js';\r\nimport * as XLSX from 'xlsx';\r\nimport _ from 'underscore';\r\nimport {\r\n  Grid,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { colorSet } from './colors';\r\nimport useWindowSize from 'src/hooks/useWindowSize';\r\nimport formatDate from 'src/utils/formatDate';\r\n\r\ninterface GanttChartProps {\r\n  className?: string;\r\n  scope: string;\r\n}\r\n\r\nconst columns = [\r\n  { id: 'no', name: 'no' },\r\n  { id: 'Customer', name: 'name' },\r\n  { id: 'Chart_Type', name: 'band' },\r\n  { id: 'Link_Type', name: 'link type' },\r\n  { id: 'SFreq_GHz', name: 'min freq (ghz)' },\r\n  { id: 'EFreq_GHz', name: 'max freq (ghz)' },\r\n  { id: 'SDate', name: 'start date' },\r\n  { id: 'EDate', name: 'end date' }\r\n];\r\n\r\nconst INIT_Y_AXIS = {\r\n  y_start: 0,\r\n  y_stop: 0,\r\n  y_step: 0\r\n};\r\n\r\nconst GanttChart: FC<GanttChartProps> = ({ scope }) => {\r\n  const [source, setSource] = useState([]);\r\n  const [traces, setTraces] = useState([]);\r\n  const [startDate, setStartDate] = useState(0);\r\n  const [yAxis, setYAxis] = useState(INIT_Y_AXIS);\r\n  const [rows, setRows] = useState([]);\r\n  const size = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    let sheetList: Object = {};\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', 'static/excel/data.xlsx', true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = function(e) {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n\r\n      workbook.SheetNames.forEach(item => {\r\n        let worksheetList = [];\r\n        let worksheet: any = XLSX.utils.sheet_to_json(workbook.Sheets[item], {\r\n          header: 1\r\n        });\r\n        sheetList[item] = [];\r\n\r\n        worksheet.forEach((el: any, index: number) => {\r\n          if (index > 0) worksheetList.push(_.object(worksheet[0], el));\r\n        });\r\n        sheetList[item] = worksheetList;\r\n      });\r\n\r\n      sheetList[Object.keys(sheetList)[0]].forEach(item => {\r\n        item['data'] = sheetList[Object.keys(sheetList)[1]].filter(\r\n          el => item.Chart_Type === el.Chart_Type\r\n        );\r\n      });\r\n\r\n      setSource(sheetList[Object.keys(sheetList)[0]]);\r\n    };\r\n\r\n    req.send();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let x_start = 0,\r\n      y_start = 0,\r\n      y_step = 0,\r\n      y_stop = 0;\r\n    let traceList = [];\r\n\r\n    source.forEach(item => {\r\n      let preItem = item;\r\n      if (item.Chart_Type === scope.split('_').join(' ')) {\r\n        if (Object.keys(item).includes('data') && item.data.length > 0) {\r\n          x_start = item.data[0].SDate;\r\n        } else {\r\n          x_start = item.X_Axis_Start;\r\n        }\r\n\r\n        y_step = item.Y_Axis_Step_Size;\r\n        y_start = item.Y_Axis_Start;\r\n        y_stop = item.Y_Axis_Stop;\r\n\r\n        if (Object.keys(preItem).includes('data') && preItem.data.length > 0) {\r\n          item.data.forEach(function(dt, index) {\r\n            let item_date = new Date(dt.SDate);\r\n            let c_date = new Date(x_start);\r\n            let y_point =\r\n              dt.SFreq_GHz + Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / 2;\r\n            let isLegend = true;\r\n\r\n            if (item_date < c_date) {\r\n              x_start = dt.SDate;\r\n            }\r\n\r\n            item.data.forEach((d, idx) => {\r\n              if (idx < index && d.Customer === dt.Customer) {\r\n                index = idx;\r\n                isLegend = false;\r\n              }\r\n            });\r\n\r\n            let trace = {\r\n              name: dt.Customer,\r\n              x: [formatDate(dt.SDate, 0), formatDate(dt.EDate, 0)],\r\n              y: [y_point, y_point],\r\n              mode: 'lines',\r\n              line: {\r\n                width:\r\n                  (Math.abs(dt.SFreq_GHz - dt.EFreq_GHz) / (y_step * 10)) * 340,\r\n                color: colorSet[index % colorSet.length]\r\n              },\r\n              showlegend: isLegend\r\n            };\r\n\r\n            traceList.push(trace);\r\n          });\r\n        } else {\r\n          let trace = {\r\n            name: '',\r\n            x: [x_start, x_start + 10],\r\n            y: [y_start, y_start],\r\n            mode: 'lines',\r\n            line: {\r\n              width: (Math.abs(y_start - y_stop) / (y_step * 10)) * 340,\r\n              color: 'transparent'\r\n            },\r\n            showlegend: false,\r\n            marker: {\r\n              size: 12,\r\n              shape: [\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew',\r\n                'line-ew',\r\n                'diamond-open',\r\n                'line-ew'\r\n              ]\r\n            }\r\n          };\r\n          traceList.push(trace);\r\n        }\r\n        setRows(item.data);\r\n      }\r\n    });\r\n\r\n    setTraces(traceList);\r\n    setStartDate(x_start);\r\n    setYAxis({ y_start: y_start, y_stop: y_stop, y_step: y_step });\r\n  }, [scope, source]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Typography variant=\"h6\" component=\"strong\">\r\n            Known LEO's supported by system\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n        <Grid item md={12}>\r\n          <Plot\r\n            data={traces}\r\n            layout={{\r\n              width: size.width * 0.75,\r\n              xaxis: {\r\n                title: '',\r\n                titlefont: {\r\n                  size: 10,\r\n                  color: '#212529'\r\n                },\r\n                tickfont: {\r\n                  size: 12\r\n                },\r\n                range: [formatDate(startDate, -1), formatDate(startDate, 7)],\r\n                dtick: 'M12',\r\n                showgrid: true,\r\n                zerolinecolor: '#969696',\r\n                zerolinewidth: 1\r\n              },\r\n              yaxis: {\r\n                title: 'Frequency (GHZ)',\r\n                titlefont: {\r\n                  size: 12,\r\n                  color: '#212529'\r\n                },\r\n                tickfont: {\r\n                  size: 12\r\n                },\r\n                range: [yAxis.y_start, yAxis.y_stop],\r\n                dtick: yAxis.y_step,\r\n                showgrid: true,\r\n                zerolinecolor: '#969696',\r\n                zerolinewidth: 1\r\n              },\r\n              legend: {\r\n                orientation: 'h',\r\n                xanchor: 'right',\r\n                x: 1,\r\n                traceorder: 'normal',\r\n                font: {\r\n                  family: 'sans-serif',\r\n                  size: 12,\r\n                  color: '#000'\r\n                },\r\n                bordercolor: '#212529',\r\n                borderwidth: 1,\r\n                tracegroupgap: 100\r\n              },\r\n              margin: {\r\n                l: 60,\r\n                b: 80,\r\n                r: 30,\r\n                t: 30,\r\n                pad: 5\r\n              },\r\n              showlegend: true\r\n            }}\r\n            config={{ displayModeBar: false }}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <TableContainer style={{ maxHeight: 440 }}>\r\n            <Table\r\n              stickyHeader\r\n              aria-label=\"sticky table\"\r\n              className=\"customized-gantt-chart-table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map(column => (\r\n                    <TableCell key={column.id} align=\"center\">\r\n                      {column.name.toUpperCase()}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row, index) => (\r\n                  <TableRow\r\n                    hover\r\n                    key={`${row.Chart_Type.split(' ').join('_')}_${index}`}\r\n                  >\r\n                    {columns.map((column, idx) => (\r\n                      <TableCell key={column.id} align=\"center\">\r\n                        {idx !== 0\r\n                          ? column.id === 'SFreq_GHz' ||\r\n                            column.id === 'EFreq_GHz'\r\n                            ? row[column.id].toFixed(7)\r\n                            : column.id === 'SDate' || column.id === 'EDate'\r\n                            ? formatDate(row[column.id], 0)\r\n                            : row[column.id]\r\n                          : index + 1}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nGanttChart.propTypes = {\r\n  className: PropTypes.string,\r\n  scope: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GanttChart;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n  Theme,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { options } from './options';\r\nimport clsx from 'clsx';\r\n\r\ninterface BandMenusProps {\r\n  className?: string;\r\n  menu: string;\r\n  onMenu: (param: any) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    textAlignLast: 'center'\r\n  },\r\n  default: {\r\n    color: colors.grey[500],\r\n    opacity: 0.9\r\n  }\r\n}));\r\n\r\nconst BandMenus: FC<BandMenusProps> = ({ className, menu, onMenu }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Select\r\n      name=\"\"\r\n      value={menu}\r\n      onChange={onMenu}\r\n      className={clsx(classes.root, className)}\r\n      fullWidth\r\n    >\r\n      <MenuItem value=\"none\" className={classes.default} disabled>\r\n        Select Frequency Band\r\n      </MenuItem>\r\n      {options.map(item => (\r\n        <MenuItem value={item.name} key={item.name}>\r\n          {item.label}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nBandMenus.propTypes = {\r\n  className: PropTypes.string,\r\n  menu: PropTypes.string.isRequired,\r\n  onMenu: PropTypes.func\r\n};\r\n\r\nexport default BandMenus;\r\n","import React, { useState, useEffect, FC, ChangeEvent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as XLSX from 'xlsx';\r\nimport _ from 'underscore';\r\nimport { Grid, Typography, makeStyles, Theme } from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\ninterface SpectrumProps {\r\n  className?: string;\r\n  scope: string;\r\n  menu: string;\r\n  onScope: (param: string) => void;\r\n  onContent: (param: string) => void;\r\n}\r\n\r\ninterface Entry {\r\n  master: number;\r\n  service: string;\r\n  chart_type: string;\r\n  remark: string;\r\n  color: string;\r\n  Hex: string;\r\n  start: number;\r\n  end: number;\r\n  vertical: boolean;\r\n  content: string;\r\n}\r\n\r\nconst calWidth = (start: number, end: number, length: number) => {\r\n  const value = (Math.abs(start - end) / length) * 95;\r\n  return { width: value + '%' };\r\n};\r\n\r\nconst getKey = (value: string): string => {\r\n  return value.split(' ').join('_');\r\n};\r\n\r\nconst getStyle = (dt: Entry, length: number) => {\r\n  const len = 40 / length + 'vh';\r\n  let value = {};\r\n\r\n  if (dt.vertical) {\r\n    value = {\r\n      writingMode: 'vertical-rl',\r\n      backgroundColor: dt.Hex,\r\n      minHeight: len,\r\n      maxHeight: len,\r\n      transform: 'rotate(-180deg)'\r\n    };\r\n  } else {\r\n    value = {\r\n      backgroundColor: dt.Hex,\r\n      minHeight: len,\r\n      maxHeight: len,\r\n      textAlign: 'center'\r\n    };\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    position: 'relative'\r\n  },\r\n  grid: {\r\n    minHeight: theme.spacing(2),\r\n    '&:before': {\r\n      content: 'attr(data-start)'\r\n    },\r\n    '&:after': {\r\n      content: 'attr(data-end)',\r\n      position: 'absolute',\r\n      right: theme.spacing(3),\r\n      top: 0\r\n    }\r\n  },\r\n  block: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    border: '1px solid #000',\r\n    cursor: 'pointer'\r\n  },\r\n  scoped: {\r\n    boxShadow: theme.shadows[10],\r\n    zIndex: 1000\r\n  },\r\n  service: {\r\n    fontSize: theme.typography.pxToRem(12)\r\n  },\r\n  remark: {\r\n    fontSize: theme.typography.pxToRem(10)\r\n  },\r\n  announce: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Spectrum: FC<SpectrumProps> = ({\r\n  className,\r\n  menu,\r\n  scope,\r\n  onScope,\r\n  onContent\r\n}) => {\r\n  const [source, setSource] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [length, setLength] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const classes = useStyles();\r\n  const amount = 8;\r\n\r\n  useEffect(() => {\r\n    let req = new XMLHttpRequest();\r\n    req.open('GET', '/static/excel/dataset.xlsx', true);\r\n    req.responseType = 'arraybuffer';\r\n\r\n    req.onload = (e: ProgressEvent<EventTarget>) => {\r\n      const data = new Uint8Array(req.response);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n      const worksheet: any = XLSX.utils.sheet_to_json(\r\n        workbook.Sheets[workbook.SheetNames[0]],\r\n        { header: 1 }\r\n      );\r\n      let sheetList = [];\r\n      let result = [];\r\n\r\n      worksheet.forEach((el: any, idx: number) => {\r\n        if (idx > 0) sheetList.push(_.object(worksheet[0], el));\r\n      });\r\n\r\n      sheetList.forEach((item: Entry) => {\r\n        const data = sheetList.filter(el => item.master === el.master);\r\n        const count = _.filter(result, el => item.master === el.master);\r\n\r\n        if (count.length < 1 && item.master) {\r\n          result.push({\r\n            master: item.master,\r\n            start: item.start,\r\n            end: item.end,\r\n            data: data,\r\n            vertical: item.vertical\r\n          });\r\n        }\r\n      });\r\n\r\n      setSource(result);\r\n      setTotalPage(Object.keys(result).length / amount);\r\n      onScope(result[0].data[0].chart_type);\r\n      onContent(result[0].data[0].content);\r\n    };\r\n\r\n    req.send();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [menu]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(source).length > 0) {\r\n      const pointX = source[(page - 1) * amount];\r\n      const pointY = source[page * amount - 1];\r\n      const len = Math.abs(pointX.start - pointY.end);\r\n\r\n      let data = Object.values(source).filter(\r\n        (item: Entry) =>\r\n          item.master > (page - 1) * amount && item.master <= page * amount\r\n      );\r\n      setLength(len);\r\n      setDataSource(data);\r\n    }\r\n  }, [page, source]);\r\n\r\n  const handleClick = (type: string, content: string): void => {\r\n    onScope(type);\r\n    onContent(content);\r\n  };\r\n\r\n  const handleChangePage = (e: ChangeEvent, page: number): void => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ position: 'relative' }}\r\n        className={clsx(className, classes.root)}\r\n      >\r\n        {Object.keys(dataSource).length > 0 &&\r\n          Object.values(dataSource).map((el, idx) => (\r\n            <Grid\r\n              item\r\n              key={el.master}\r\n              className={classes.grid}\r\n              style={calWidth(el.start, el.end, length)}\r\n              data-start={el.start}\r\n              data-end={idx === amount - 1 ? el.end : ''}\r\n            >\r\n              <Grid container alignItems=\"center\" justify=\"center\">\r\n                {el.data.map((dt: Entry) => (\r\n                  <Grid\r\n                    item\r\n                    md={12}\r\n                    id={getKey(dt.chart_type)}\r\n                    key={getKey(dt.service)}\r\n                    onClick={() => handleClick(dt.chart_type, dt.content)}\r\n                    style={getStyle(dt, el.data.length)}\r\n                    className={clsx(\r\n                      classes.block,\r\n                      dt.chart_type === scope && classes.scoped\r\n                    )}\r\n                  >\r\n                    <Typography className={classes.service}>\r\n                      {dt.service}\r\n                    </Typography>\r\n                    {dt.remark !== '' && (\r\n                      <Typography className={classes.remark}>\r\n                        {dt.remark}\r\n                      </Typography>\r\n                    )}\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={3}\r\n        className={classes.announce}\r\n      >\r\n        <Grid item md={10}>\r\n          <Typography variant=\"body1\">\r\n            This chart will only work with 1024 x 768. We recommend full screen\r\n            mode.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <Pagination\r\n            count={totalPage}\r\n            defaultPage={1}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            onChange={handleChangePage}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nSpectrum.propTypes = {\r\n  className: PropTypes.string,\r\n  scope: PropTypes.string.isRequired,\r\n  menu: PropTypes.string.isRequired,\r\n  onScope: PropTypes.func,\r\n  onContent: PropTypes.func\r\n};\r\n\r\nexport default Spectrum;\r\n","import React, { FC } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Grid, Typography, Box, makeStyles, Theme } from '@material-ui/core';\r\ninterface ContentProps {\r\n  className?: string;\r\n  content: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {}\r\n}));\r\n\r\nconst Content: FC<ContentProps> = ({ className, content }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={clsx(className, classes.root)}\r\n    >\r\n      <Grid item md={4}>\r\n        <Typography variant=\"h6\" component=\"strong\">\r\n          Regulatory Notes\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item md={8} />\r\n      <Grid item md={12}>\r\n        <Box borderColor=\"primary.main\" border={2} borderRadius={5} padding={2}>\r\n          <Typography variant=\"body2\">{content}</Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  className: PropTypes.string,\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Content;\r\n","import React, { forwardRef, ReactElement, Ref, FC } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n  useMediaQuery,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & { children?: ReactElement<any, any> },\r\n  ref: Ref<Function>\r\n) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  content: {\r\n    marginBottom: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst Alert: FC = () => {\r\n  const matches = useMediaQuery('(max-width: 1000px)');\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog open={matches} TransitionComponent={Transition} keepMounted>\r\n      <CssBaseline />\r\n      <DialogTitle>Screen Resolution Alert</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText className={classes.content}>\r\n          Your screen resolution is under 1024 x 768. We can't confirm your\r\n          resolution of this Spectrum Chart. Please Check your screen mode\r\n          again.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, FC, ChangeEvent } from 'react';\nimport {\n  Grid,\n  Container,\n  CssBaseline,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  makeStyles,\n  Theme,\n  colors\n} from '@material-ui/core';\nimport { options } from './options';\nimport GanttChart from './GanttChart';\nimport BandMenus from './BandMenus';\nimport Spectrum from './Spectrum';\nimport Content from './Content';\nimport Alert from './Alert';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: theme.spacing(5)\n  },\n  card: {\n    padding: theme.spacing(2)\n  },\n  content: {\n    backgroundColor: colors.grey[50]\n  }\n}));\n\nconst Header: FC = () => {\n  return (\n    <Typography component=\"h1\" variant=\"h5\" color=\"textSecondary\">\n      Spectrum Dashboard\n    </Typography>\n  );\n};\n\nconst HomeView: FC = () => {\n  const [menu, setMenu] = useState(options[4].name);\n  const [content, setContent] = useState('');\n  const [scope, setScope] = useState('');\n  const classes = useStyles();\n\n  const handleScope = (value: string): void => setScope(value);\n\n  const handleMenu = (event: ChangeEvent): void => {\n    //@ts-ignore\n    setMenu(event.target.value);\n  };\n\n  const handleContent = (value: string): void => {\n    setContent(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth=\"lg\">\n        <CssBaseline />\n        <Card className={classes.card}>\n          <CardHeader title={<Header />} />\n          <CardContent>\n            <Grid container alignItems=\"center\" spacing={3}>\n              <Grid item md={3}>\n                <BandMenus menu={menu} onMenu={handleMenu} />\n              </Grid>\n              <Grid item md={12}>\n                <Spectrum\n                  scope={scope}\n                  menu={menu}\n                  onScope={handleScope}\n                  onContent={handleContent}\n                />\n              </Grid>\n              <Grid item md={12} className={classes.content}>\n                {content && content !== '' && <Content content={content} />}\n              </Grid>\n              <Grid item md={12}>\n                <GanttChart scope={scope} />\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Container>\n      <Alert />\n    </div>\n  );\n};\n\nexport default HomeView;\n","import React, { useEffect } from 'react';\nimport type { FC } from 'react';\nimport NProgress from 'nprogress';\nimport {\n  Box,\n  LinearProgress,\n  makeStyles,\n  Theme,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    justifyContent: 'center',\n    minHeight: '100%',\n    padding: theme.spacing(3)\n  }\n}));\n\nconst LoadingScreen: FC = () => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    NProgress.start();\n\n    return () => {\n      NProgress.done();\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Box width={400}>\n        <LinearProgress />\n      </Box>\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import React, { Suspense, Fragment, lazy } from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport HomeView from 'src/views/home/HomeView';\nimport LoadingScreen from 'src/components/LoadingScreen';\n\ntype Routes = {\n  exact?: boolean;\n  path?: string | string[];\n  component?: any;\n  routes?: Routes;\n}[];\n\nexport const renderRoutes = (routes: Routes = []): JSX.Element => (\n  <Suspense fallback={<LoadingScreen />}>\n    <Switch>\n      {routes.map((route, i) => {\n        const Component = route.component;\n\n        return (\n          <Route\n            key={i}\n            path={route.path}\n            exact={route.exact}\n            render={props => (\n              <Fragment>\n                {route.routes ? (\n                  renderRoutes(route.routes)\n                ) : (\n                  <Component {...props} />\n                )}\n              </Fragment>\n            )}\n          />\n        );\n      })}\n    </Switch>\n  </Suspense>\n);\n\nconst routes: Routes = [\n  {\n    exact: true,\n    path: '/404',\n    component: lazy(() => import('src/views/errors/NotFoundView'))\n  },\n  {\n    exact: true,\n    path: '/maintenance',\n    component: lazy(() => import('src/views/maintenance/MaintenanceView'))\n  },\n  {\n    path: '*',\n    routes: [\n      {\n        exact: true,\n        path: '/',\n        component: HomeView\n      },\n      {\n        component: () => <Redirect to=\"/404\" />\n      }\n    ]\n  }\n];\n\nexport default routes;\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { create } from 'jss';\nimport { SnackbarProvider } from 'notistack';\nimport {\n  jssPreset,\n  StylesProvider,\n} from '@material-ui/core';\nimport routes, { renderRoutes } from 'src/routes';\nimport { BASE_URL } from './constants';\n\nconst jss = create({ plugins: [...jssPreset().plugins] });\nconst history = createBrowserHistory();\n\nconst App: FC = () => {\n  console.log(BASE_URL)\n  return (\n      <StylesProvider jss={jss}>\n          <SnackbarProvider\n            dense\n            maxSnack={3}\n          >\n            <Router history={history}>\n                {renderRoutes(routes)}\n            </Router>\n          </SnackbarProvider>\n      </StylesProvider>\n  );\n};\n\nexport default App;\n","export const SERVER_URL = 'http://52.254.23.171:7000/api';\n\nexport const LOCAL_URL = 'http://127.0.0.1:7000/api';\n\nexport const BASE_URL =\n  process.env.NODE_ENV === 'production' ? SERVER_URL : LOCAL_URL;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport 'nprogress/nprogress.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { enableES5 } from 'immer';\nimport * as serviceWorker from 'src/serviceWorker';\nimport App from 'src/App';\n\nenableES5();\n\nReactDOM.render(\n  <HelmetProvider>\n    <App />\n  </HelmetProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}